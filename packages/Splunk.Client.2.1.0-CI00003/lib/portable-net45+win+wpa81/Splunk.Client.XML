<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Splunk.Client</name>
    </assembly>
    <members>
        <member name="T:Splunk.Client.AlertComparator">
            <summary>
            Used with a threshold value to trigger the alert actions of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertComparator.None">
            <summary>
            Specifies that there is no alert comparator.
            </summary>
            <remarks>
            This value unsets the alert comparator for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </remarks>
        </member>
        <member name="F:Splunk.Client.AlertComparator.DropsBy">
            <summary>
            Specifies that an alert actions of a <see cref="T:Splunk.Client.SavedSearch"/> are
            triggered by an absolute drop in a certain value.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertComparator.DropsByPercent">
            <summary>
            Specifies that an alert actions of a <see cref="T:Splunk.Client.SavedSearch"/> are
            triggered when a measurement drops by a certain percentage.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertComparator.Equal">
            <summary>
            Specifies that an alert actions of a <see cref="T:Splunk.Client.SavedSearch"/> are
            triggered when a measurement is equal to a certain value.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertComparator.GreaterThan">
            <summary>
            Specifies that an alert actions of a <see cref="T:Splunk.Client.SavedSearch"/> are
            triggered when a measurement is greater than a certain value.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertComparator.LessThan">
            <summary>
            Specifies that an alert actions of a <see cref="T:Splunk.Client.SavedSearch"/> are
            triggered when a measurement is less than a certain value.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertComparator.RisesBy">
            <summary>
            Specifies that an alert actions of a <see cref="T:Splunk.Client.SavedSearch"/> are
            triggered when a measurement rises above a certain value.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertComparator.RisesByPercent">
            <summary>
            Specifies that an alert actions of a <see cref="T:Splunk.Client.SavedSearch"/> are
            triggered when a measurement rises by a certain percentage.
            </summary>
        </member>
        <member name="T:Splunk.Client.AlertSeverity">
            <summary>
            Specifies the severity of an alert triggered by a scheduled search.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertSeverity.Debug">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertSeverity.Information">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertSeverity.Warning">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertSeverity.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertSeverity.Severe">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertSeverity.Fatal">
            <summary>
            
            </summary>
        </member>
        <member name="T:Splunk.Client.AlertTrack">
            <summary>
            Specifies whether to track the actions triggered by a scheduled search.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertTrack.Automatic">
            <summary>
            Determine whether to track based on the tracking setting of each 
            action. Do not track scheduled searches that always trigger 
            actions.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertTrack.True">
            <summary>
            Force tracking.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertTrack.False">
            <summary>
            Disable tracking.
            </summary>
        </member>
        <member name="T:Splunk.Client.AlertType">
            <summary>
            Specifies the condition under which the alert actions of a
            <see cref="T:Splunk.Client.SavedSearch"/> are triggered.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertType.Always">
            <summary>
            Specifies that alert actions are triggered whenever the <see cref="T:Splunk.Client.SavedSearch"/> runs.
            </summary>
            <remarks>
            This is the default value.
            </remarks>
        </member>
        <member name="F:Splunk.Client.AlertType.Custom">
            <summary>
            Specifies that alert actions are triggered based on a custom 
            condition on the results produced by a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertType.NumberOfEvents">
            <summary>
            Specifies that alert actions are triggered based on the number of 
            events produced by a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertType.NumberOfHosts">
            <summary>
            Specifies that alert actions are triggered based on the number of 
            hosts appearing in the results produced by a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
        </member>
        <member name="F:Splunk.Client.AlertType.NumberOfSources">
            <summary>
            Specifies that alert actions are triggered based on the number of 
            sources appearing in the results produced by a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
        </member>
        <member name="T:Splunk.Client.Application">
            <summary>
            Provides a class for managing Splunk applications.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/OsgrYx">Apps and add-ons: an introduction</a>.
            </description></item>
            <item><description>
              <a href="http://goo.gl/1txQUG">Package your app or add-on</a>.
            </description></item>
            <item><description>
              <a href="http://goo.gl/a7HqRp">REST API Reference: Applications</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Entity{Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IApplication"/>
        </member>
        <member name="T:Splunk.Client.Entity`1">
            <summary>
            Provides an object representation of a Splunk entity.
            </summary>
            <remarks>
            This is the base class for all Splunk entities.
            </remarks>
            <typeparam name="TResource">
            Type of the resource.
            </typeparam>
            <seealso cref="T:Splunk.Client.BaseEntity{TResource}"/>
            <seealso cref="T:Splunk.Client.IEntity"/>
        </member>
        <member name="T:Splunk.Client.BaseEntity`1">
            <summary>
            Provides an object representation of a Splunk entity.
            </summary>
            <remarks>
            This is the base class for all Splunk entities.
            </remarks>
            <typeparam name="TResource">
            Type of the resource.
            </typeparam>
            <seealso cref="T:Splunk.Client.Endpoint"/>
        </member>
        <member name="T:Splunk.Client.Endpoint">
            <summary>
            Provides a base class that represents a Splunk endpoint as an object.
            </summary>
            <seealso cref="T:System.IComparable"/>
            <seealso cref="T:System.IComparable{Splunk.Client.Endpoint}"/>
            <seealso cref="T:System.IEquatable{Splunk.Client.Endpoint}"/>
        </member>
        <member name="M:Splunk.Client.Endpoint.#ctor(Splunk.Client.Service,Splunk.Client.ResourceName)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.Endpoint"/> class.
             </summary>
             <param name="service">
             An object representing a root Splunk service endpoint.
             </param>
             <param name="name">
             An object identifying a Splunk resource within
             <paramref name="service"/>.<see cref="P:Splunk.Client.Endpoint.Namespace"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="service"/> or <paramref name="name"/> are <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.Endpoint.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,Splunk.Client.ResourceName)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.Endpoint"/> class.
             </summary>
             <param name="context">
             An object representing a Splunk server session.
             </param>
             <param name="ns">
             An object identifying a Splunk services namespace.
             </param>
             <param name="name">
             An object identifying a Splunk resource within <paramref name="ns"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="context"/>, <paramref name="ns"/>, or
             <paramref name="name"/> are <c>null</c>.
             </exception>
             ### <exception cref="T:System.ArgumentOutOfRangeException">
             <paramref name="ns"/> is not specific.
             </exception>
        </member>
        <member name="M:Splunk.Client.Endpoint.#ctor(Splunk.Client.Context,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Endpoint"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="id">
            The address of an endpoint in <paramref name="context"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.Endpoint.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the <see cref="T:Splunk.Client.Endpoint"/>
            class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Endpoint.CompareTo(System.Object)">
            <summary>
            Compares the specified object with the current <see cref="T:Splunk.Client.Endpoint"/>
            instance and indicates whether the identity of the current instance
            precedes, follows, or appears in the same position in the sort order as
            the specified object.
            </summary>
            <param name="other">
            An object to compare or <c>null</c>.
            </param>
            <returns>
            A signed number indicating the relative values of this instance and value.
            </returns>
            <seealso cref="M:System.IComparable.CompareTo(object)"/>
        </member>
        <member name="M:Splunk.Client.Endpoint.CompareTo(Splunk.Client.Endpoint)">
            <summary>
            Compares the specified <see cref="T:Splunk.Client.Endpoint"/> with the current instance
            and indicates whether the identity of the current instance precedes,
            follows, or appears in the same position in the sort order as the
            specified instance.
            </summary>
            <param name="other">
            An instance to compare or <c>null</c>.
            </param>
            <returns>
            A signed number indicating the relative values of the current instance
            and <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Endpoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Splunk.Client.Endpoint"/> refers to the
            same resource as the current one.
            </summary>
            <param name="other">
            The <see cref="T:Splunk.Client.Endpoint"/> to compare with the current one.
            </param>
            <returns>
            A value of <c>true</c> if the two instances represent the same
            <see cref="T:Splunk.Client.Endpoint"/>; otherwise, <c>false</c>.
            </returns>
            <seealso cref="M:System.Object.Equals(object)"/>
        </member>
        <member name="M:Splunk.Client.Endpoint.Equals(Splunk.Client.Endpoint)">
            <summary>
            Determines whether the specified <see cref="T:Splunk.Client.Endpoint"/> refers to the
            same resource as the current one.
            </summary>
            <param name="other">
            The <see cref="T:Splunk.Client.Endpoint"/> to compare with the current one.
            </param>
            <returns>
            A value of <c>true</c> if the two instances represent the same
            <see cref="T:Splunk.Client.Endpoint"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Endpoint.GetHashCode">
            <summary>
            Returns the hash code for the current <see cref="T:Splunk.Client.Endpoint"/>.
            </summary>
            <returns>
            Hash code for the current <see cref="T:Splunk.Client.Endpoint"/>.
            </returns>
            <seealso cref="M:System.Object.GetHashCode()"/>
        </member>
        <member name="M:Splunk.Client.Endpoint.Initialize(Splunk.Client.Context,System.Uri)">
             <summary>
             Infrastructure. Initializes the current uninitialized
             <see cref="T:Splunk.Client.Endpoint"/>.
             </summary>
             <remarks>
             This method may be called once to initialize a <see cref="T:Splunk.Client.Endpoint"/>
             instantiated by the default constructor.
             <note type="note">
             This method supports the Splunk client infrastructure and is not intended
             to be used directly from your code.
             </note>
             </remarks>
             <exception cref="T:System.IO.InvalidDataException">
             Thrown when an Invalid Data error condition occurs.
             </exception>
             <param name="context">
             An object representing a Splunk server session.
             </param>
             <param name="id">
             The address of the current <see cref="T:Splunk.Client.Endpoint"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="context"/> or <paramref name="id"/> are <c>null</c>.
             </exception>
             ### <exception cref="T:System.InvalidOperationException">
             The current <see cref="T:Splunk.Client.Endpoint"/> is already initialized.
             </exception>
        </member>
        <member name="M:Splunk.Client.Endpoint.Initialize(Splunk.Client.Context,Splunk.Client.Namespace,Splunk.Client.ResourceName)">
             <summary>
             Infrastructure. Initializes the current uninitialized
             <see cref="T:Splunk.Client.Endpoint"/>.
             </summary>
             <remarks>
             This method may be called once to initialize a <see cref="T:Splunk.Client.Endpoint"/>
             instantiated by the default constructor.
             <note type="note">
             This method supports the Splunk client infrastructure and is not intended
             to be used directly from your code.
             </note>
             </remarks>
             <param name="context">
             An object representing a Splunk server session.
             </param>
             <param name="ns">
             An object identifying a Splunk services namespace.
             </param>
             <param name="name">
             An object identifying a Splunk resource within <paramref name="ns"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="context"/>, <paramref name="ns"/>, or
             <paramref name="name"/> are <c>null</c>.
             </exception>
             ### <exception cref="T:System.ArgumentOutOfRangeException">
             <paramref name="ns"/> is not specific.
             </exception>
        </member>
        <member name="M:Splunk.Client.Endpoint.op_GreaterThan(Splunk.Client.Endpoint,Splunk.Client.Endpoint)">
            <summary>
            Greater-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Endpoint.op_GreaterThanOrEqual(Splunk.Client.Endpoint,Splunk.Client.Endpoint)">
            <summary>
            Greater-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Endpoint.op_Equality(Splunk.Client.Endpoint,Splunk.Client.Endpoint)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.Endpoint"/> instances refer to the same
            resource.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is the same as the value
            of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Endpoint.op_Inequality(Splunk.Client.Endpoint,Splunk.Client.Endpoint)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.Endpoint"/> instances refer to
            different resources.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is different than the
            value of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Endpoint.op_LessThanOrEqual(Splunk.Client.Endpoint,Splunk.Client.Endpoint)">
            <summary>
            Less-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Endpoint.op_LessThan(Splunk.Client.Endpoint,Splunk.Client.Endpoint)">
            <summary>
            Less-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Endpoint"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Endpoint.ToString">
            <summary>
            Gets a string identifying the current <see cref="T:Splunk.Client.Endpoint"/>.
            </summary>
            <returns>
            A string representing the identity of the current <see cref="T:Splunk.Client.Endpoint"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="P:Splunk.Client.Endpoint.Context">
            <summary>
            Gets the <see cref="P:Splunk.Client.Endpoint.Context"/> instance for the current
            <see cref="T:Splunk.Client.Endpoint"/>.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="P:Splunk.Client.Endpoint.Name">
            <summary>
            Gets the name of the current <see cref="T:Splunk.Client.Endpoint"/>, which is the 
            final part of <see cref="P:Splunk.Client.Endpoint.ResourceName"/>.
            </summary>
            <value>
            Name of the current <see cref="T:Splunk.Client.Endpoint"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.Endpoint.Namespace">
            <summary>
            Gets the namespace containing the current <see cref="T:Splunk.Client.Endpoint"/>.
            </summary>
            <value>
            The namespace.
            </value>
        </member>
        <member name="P:Splunk.Client.Endpoint.ResourceName">
            <summary>
            Gets the name of the current <see cref="T:Splunk.Client.Endpoint"/>.
            </summary>
            <value>
            The name of the resource.
            </value>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.#ctor(Splunk.Client.Service,Splunk.Client.ResourceName)">
            <summary>
            Initializes a new <see cref="T:Splunk.Client.BaseEntity`1"/> instance.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <param name="name">
            An object identifying a Splunk resource within
            <paramref name="service"/>.<see cref="T:Splunk.Client.Namespace"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> or <paramref name="name"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,Splunk.Client.ResourceName)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.BaseEntity`1"/>
            class as specified by <paramref name="context"/>, <paramref name="ns"/>
            and "<paramref name="resourceName"/>.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="resourceName">
            An object identifying a Splunk resource within <paramref name="ns"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/>, <paramref name="ns"/>, or
            <paramref name="resourceName"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,Splunk.Client.ResourceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.BaseEntity`1"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="collection">
            The <see cref="T:Splunk.Client.ResourceName"/> of an <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </param>
            <param name="name">
            An object identifying a Splunk resource within the resource identfied by <paramref name="collection"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.BaseEntity`1"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.BaseEntity`1"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.CreateAsync``1(Splunk.Client.Context,Splunk.Client.Response)">
            <summary>
            Asynchronously creates an entity from a Splunk atom feed
            <see cref="T:Splunk.Client.Response"/>.
            </summary>
            <typeparam name="TEntity">
            Type of the entity.
            </typeparam>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="response">
            An object representing a Splunk atom feed response.
            </param>
            <returns>
            The <see cref="T:Splunk.Client.BaseEntity`1"/> created.
            </returns>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.CreateSnapshot(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Updates the content of the current <see cref="T:Splunk.Client.BaseEntity`1"/>.
            </summary>
            <param name="entry">
            A Splunk <see cref="T:Splunk.Client.AtomEntry"/>.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/> feed
            containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.CreateSnapshot(Splunk.Client.AtomFeed)">
            <summary>
            Updates the <see cref="P:Splunk.Client.BaseEntity`1.Snapshot"/> of the current
            <see cref="T:Splunk.Client.BaseEntity`1"/> in derived types.
            </summary>
            <remarks>
            Derived types must implement this method.
            </remarks>
            <param name="feed">
            A Splunk <see cref="T:Splunk.Client.AtomFeed"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.CreateSnapshot(`0)">
            <summary>
            Updates the content of the current <see cref="T:Splunk.Client.BaseEntity`1"/> in derived types.
            </summary>
            <remarks>
            Derived types must implement this method.
            </remarks>
            <param name="resource">
            An object representing a Splunk resource.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.Initialize(Splunk.Client.Context,Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Infrastructure. Initializes the current uninitialized
            <see cref="T:Splunk.Client.BaseEntity`1"/>. class.
            </summary>
            <remarks>
            This method may be called once to initialize a <see cref="T:Splunk.Client.BaseEntity`1"/>
            instantiated by the default constructor. Override this method to provide
            special initialization code. Call this base method before initialization
            is complete.
            <note type="note">
            This method supports the Splunk client infrastructure and is not intended
            to be used directly from your code.
            </note>
            </remarks>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="entry">
            An object representing a Splunk atom entry response.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            feed containing <paramref name="entry"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/>, <paramref name="entry"/>, or
            <paramref name="generatorVersion"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Splunk.Client.BaseEntity`1"/> is already initialized.
            </exception>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.Initialize(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Infrastructure. Initializes the current uninitialized
            <see cref="T:Splunk.Client.BaseEntity`1"/>. class.
            </summary>
            <remarks>
            This method may be called once to initialize a <see cref="T:Splunk.Client.BaseEntity`1"/>
            instantiated by the default constructor. Override this method to provide
            special initialization code. Call this base method before initialization
            is complete.
            <note type="note">
            This method supports the Splunk client infrastructure and is not intended
            to be used directly from your code.
            </note>
            </remarks>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.Initialize(Splunk.Client.Context,`0)">
            <summary>
            Infrastructure. Initializes the current uninitialized
            <see cref="T:Splunk.Client.BaseEntity`1"/>. class.
            </summary>
            <remarks>
            This method may be called once to initialize a <see cref="T:Splunk.Client.BaseEntity`1"/>
            instantiated by the default constructor. Override this method to provide
            special initialization code. Call this base method before initialization
            is complete.
            <note type="note">
            This method supports the Splunk client infrastructure and is not intended
            to be used directly from your code.
            </note>
            </remarks>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="resource">
            An object representing a Splunk resource.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="resource"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Splunk.Client.BaseEntity`1"/> is already initialized.
            </exception>
        </member>
        <member name="M:Splunk.Client.BaseEntity`1.ReconstructSnapshotAsync(Splunk.Client.Response)">
            <summary>
            Asynchronously updates the content of the current
            <see cref="T:Splunk.Client.BaseEntity`1"/>.
            </summary>
            <param name="response">
            A Splunk atom feed <see cref="T:Splunk.Client.Response"/>.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.BaseEntity`1.Snapshot">
            <summary>
            Gets or sets an object representing the Splunk resource at the time it
            was last retrieved by the current entity.
            </summary>
            <value>
            An object representing the Splunk resource at the time it was last
            retrieved by the current entity.
            </value>
        </member>
        <member name="P:Splunk.Client.BaseEntity`1.Dynamic">
            <summary>
            Gets the dynamic.
            </summary>
            <value>
            The dynamic.
            </value>
        </member>
        <member name="P:Splunk.Client.BaseEntity`1.GeneratorVersion">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.BaseEntity`1.Id">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.BaseEntity`1.Title">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.BaseEntity`1.Updated">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.IEntity">
            <summary>
            Provides an operational interface common to all Splunk entities.
            </summary>
        </member>
        <member name="M:Splunk.Client.IEntity.GetAsync">
            <summary>
            Asynchronously retrieves a fresh copy of the current entity that
            contains all changes to it since it was last retrieved.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IEntity.RemoveAsync">
            <summary>
            Asynchronously removes the current entity from Splunk.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IEntity.UpdateAsync(Splunk.Client.Argument[])">
            <summary>
            Asynchronously updates the attributes of the current entity on
            Splunk.
            </summary>
            <remarks>
            Splunk usually returns an updated snapshot on completion of the
            operation. When it does the current snapshot will also be
            updated.
            </remarks>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.IEntity.UpdateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously updates the attributes of the current entity on
            on Splunk.
            </summary>
            <remarks>
            Splunk usually returns an updated snapshot on completion of the
            operation. When it does the current snapshot will be updated
            and returns <c>true</c>; otherwise, this method returns
            <c>false</c>.
            </remarks>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.Entity`1.#ctor(Splunk.Client.Service,Splunk.Client.ResourceName)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.Entity`1"/> class.
             </summary>
             <param name="service">
             An object representing a root Splunk service endpoint.
             </param>
             <param name="name">
             An object identifying a Splunk resource within
             <paramref name="service"/>.<see cref="T:Splunk.Client.Namespace"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="service"/> or <paramref name="name"/> are <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.Entity`1.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Entity`1"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are
            <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Entity`1.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,Splunk.Client.ResourceName)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Entity`1"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="resourceName">
            An object identifying a Splunk resource within <paramref name="ns"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/>, <paramref name="ns"/>, or
            <paramref name="resourceName"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.Entity`1.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,Splunk.Client.ResourceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Entity`1"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="collection">
            The <see cref="T:Splunk.Client.ResourceName"/> of an <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </param>
            <param name="name">
            The name of an entity within <paramref name="collection"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/>, <paramref name="ns"/>, or <paramref name="collection"/>, or <paramref name="name"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.Entity`1.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the <see cref="T:Splunk.Client.Entity`1"/>
            class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Entity`1.GetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Entity`1.RemoveAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Entity`1.UpdateAsync(Splunk.Client.Argument[])">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Entity`1.UpdateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Entity`1.GetValue``1(System.String,Splunk.Client.ValueConverter{``0})">
            <summary>
            Gets a converted property value from the current snapshot of the
            current <see cref="T:Splunk.Client.Entity`1"/>.
            </summary>
            <remarks>
            Use this method to create static properties from the dynamic properties
            exposed by the current snapshot.
            </remarks>
            <typeparam name="TValue">
            Type of the value.
            </typeparam>
            <param name="name">
            The name of a property.
            </param>
            <param name="valueConverter">
            A value converter for converting property <paramref name="name"/>.
            </param>
            <returns>
            The converted value or
            <paramref name="valueConverter"/><c>.DefaultValue</c>, if
            <paramref name="name"/> does not exist.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The conversion failed.
            </exception>
        </member>
        <member name="M:Splunk.Client.Entity`1.CreateSnapshot(Splunk.Client.AtomEntry,System.Version)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Entity`1.CreateSnapshot(Splunk.Client.AtomFeed)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Entity`1.Content">
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="T:Splunk.Client.IApplication">
            <summary>
            Provides an operational interface to Splunk application entities.
            </summary>
            <seealso cref="T:IEntity"/>
        </member>
        <member name="M:Splunk.Client.IApplication.DisableAsync">
            <summary>
            Asynchronously disables the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <remarks>
            This method uses the POST apps/local/{name}/disable endpoint to disable
            the current <see cref="T:Splunk.Client.Application"/>.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplication.EnableAsync">
            <summary>
            Asynchronously enables the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <remarks>
            This method uses the POST apps/local/{name}/enable endpoint to enable the
            current <see cref="T:Splunk.Client.Application"/>.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplication.GetSetupInfoAsync">
            <summary>
            Asynchronously retrieves setup information for the current
            <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/mUT9gU">GET
            apps/local/{name}/setup</a> endpoint to construct the
            <see cref="T:Splunk.Client.ApplicationSetupInfo"/> instance it returns.
            </remarks>
            <returns>
            An object containing setup information for the current
            <see cref="T:Splunk.Client.Application"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplication.GetUpdateInfoAsync">
            <summary>
            Asynchronously gets update information for the current
            <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/mrbtRj">GET
            apps/local/{name}/update</a> endpoint to construct the
            <see cref="T:Splunk.Client.ApplicationUpdateInfo"/> instance it returns.
            </remarks>
            <returns>
            An object containing update information for the current
            <see cref="T:Splunk.Client.Application"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplication.PackageAsync">
            <summary>
            Asynchronously archives the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/DJkT7S">GET
            apps/local/{name}/package</a> endpoint to create an archive of the
            current <see cref="T:Splunk.Client.Application"/>.
            </remarks>
            <returns>
            An object containing information about the newly created archive.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplication.UpdateAsync(Splunk.Client.ApplicationAttributes,System.Boolean)">
            <summary>
            Asynchronously updates the attributes of the application represented by
            the current instance.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/dKraaR">POST
            apps/local/{name}</a> endpoint to update the attributes of the current
            <see cref="T:Splunk.Client.Application"/> and optionally check for updates on Splunkbase.
            </remarks>
            <param name="attributes">
            New attributes for the current <see cref="T:Splunk.Client.Application"/> instance.
            </param>
            <param name="checkForUpdates">
            A value of <c>true</c>, if Splunk should check Splunkbase for updates to
            the current <see cref="T:Splunk.Client.Application"/> instance.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="P:Splunk.Client.IApplication.ApplicationAuthor">
            <summary>
            Gets the application author.
            </summary>
            <value>
            The application author.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Author">
            <summary>
            Gets the username of the splunk.com account for publishing the current
            <see cref="T:Splunk.Client.Application"/> to Splunkbase.
            </summary>
            <value>
            The author.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.CheckForUpdates">
            <summary>
            Gets a value that indicates whether Splunk should check Splunkbase for
            updates to the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <value>
            <c>true</c> if check for updates, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Configured">
            <summary>
            Gets a value that indicates whether custom setup has been performed on
            the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <value>
            <c>true</c> if configured, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Description">
            <summary>
            Gets the short explanatory string displayed underneath the title of the
            current <see cref="T:Splunk.Client.Application"/> in Launcher.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Disabled">
            <summary>
            Gets a value indicating whether the current <see cref="T:Splunk.Client.Application"/>
            is disabled.
            </summary>
            <value>
            <c>true</c> if disabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Eai">
            <summary>
            Gets the extensible administration interface properties for the current
            <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Label">
            <summary>
            Gets the name of the current <see cref="T:Splunk.Client.Application"/> for display in the
            Splunk GUI and Launcher.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Links">
            <summary>
            Gets the links.
            </summary>
            <value>
            The links.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Refresh">
            <summary>
            Gets a value that indicates whether objects contained in the current
            <see cref="T:Splunk.Client.Application"/> should be reloaded.
            </summary>
            <value>
            <c>true</c> if refresh, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.StateChangeRequiresRestart">
            <summary>
            Gets a value that indicates whether changing the state of the current
            <see cref="T:Splunk.Client.Application"/> always requires restarting Splunk.
            </summary>
            <remarks>
            A value of <c>true</c> indicates that a state change always requires a
            restart. A value of <c>false</c> indicates that modifying state may or
            may not require a restart depending on what state has been changed. A
            value of <c>false</c> does not indicate that a restart will never be
            required to effect a state change. State changes include enabling or
            disabling an <see cref="T:Splunk.Client.Application"/>.
            </remarks>
            <value>
            <c>true</c> if a state change requires a restart, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Version">
            <summary>
            Gets the version string for the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <remarks>
            Version strings are a number followed by a sequence of numbers or dots.
            Pre-release versions may append a space and a single-word suffix like
            "beta2".
            <example>Examples:</example>
            <code>
            "1.2"
            "11.0.34"
            "2.0 beta"
            "1.3 beta2"
            "1.0 b2"
            "12.4 alpha"
            "11.0.34.234.254"
            </code>
            </remarks>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplication.Visible">
            <summary>
            Gets a value that indicates if the current <see cref="T:Splunk.Client.Application"/>
            is visible and navigable from Splunk Web.
            </summary>
            <value>
            <c>true</c> if visible, <c>false</c> if not.
            </value>
        </member>
        <member name="M:Splunk.Client.Application.#ctor(Splunk.Client.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Application"/> class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <param name="name">
            An object identifying a Splunk resource within
            <paramref name="service"/>.<see cref="T:Splunk.Client.Namespace"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Application.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Application"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
        </member>
        <member name="M:Splunk.Client.Application.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Application"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="name">
            The name of the <see cref="T:Splunk.Client.Application"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.Application.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.Application"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Application.DisableAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Application.EnableAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Application.GetSetupInfoAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Application.GetUpdateInfoAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Application.PackageAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Application.UpdateAsync(Splunk.Client.ApplicationAttributes,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.ApplicationAuthor">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Author">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.CheckForUpdates">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Configured">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Description">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Disabled">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Eai">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Label">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Links">
            <summary>
            Gets the links.
            </summary>
            <value>
            The links.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Links"/>
        </member>
        <member name="P:Splunk.Client.Application.Refresh">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.StateChangeRequiresRestart">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Version">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Application.Visible">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.Application.UpdateArgs">
            <summary>
            Arguments for update.
            </summary>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.Application.UpdateArgs}"/>
        </member>
        <member name="T:Splunk.Client.Args`1">
            <summary>
            Provides a base class for representing strongly typed arguments to Splunk
            endpoints.
            </summary>
            <typeparam name="TArgs">
            Type of the arguments.
            </typeparam>
            <seealso cref="T:System.Collections.Generic.IEnumerable{Splunk.Client.Argument}"/>
        </member>
        <member name="M:Splunk.Client.Args`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Args`1"/> class.
            </summary>
        </member>
        <member name="M:Splunk.Client.Args`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that produces an <see cref="T:Splunk.Client.Argument"/> sequence
            based on the serialization attributes of the properties of the 
            current <see cref="T:Splunk.Client.Args`1"/> instance.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when a Serialization error condition occurs.
            </exception>
            <returns>
            An object for enumerating the <see cref="T:Splunk.Client.Argument"/> sequence.
            </returns>
        </member>
        <member name="M:Splunk.Client.Args`1.System#Collections#Generic#IEnumerable{Splunk#Client#Argument}#GetEnumerator">
            <summary>
            Gets an enumerator that produces an <see cref="T:Splunk.Client.Argument"/> sequence
            based on the serialization attributes of the properties of the 
            current <see cref="T:Splunk.Client.Args`1"/> instance.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when a Serialization error condition occurs.
            </exception>
            <returns>
            An object for enumerating the <see cref="T:Splunk.Client.Argument"/> sequence.
            </returns>
        </member>
        <member name="M:Splunk.Client.Args`1.ToString">
            <summary>
            Gets a string representation for the current
            <see cref="T:Splunk.Client.Args`1"/>.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Args`1"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="T:Splunk.Client.Args`1.Formatter">
            <summary>
            A formatter.
            </summary>
            <seealso cref="T:System.Collections.Generic.IEnumerable{Splunk.Client.Argument}"/>
        </member>
        <member name="F:Splunk.Client.Args`1.Formatter.Format">
            <summary>
            Describes the format to use.
            </summary>
        </member>
        <member name="F:Splunk.Client.Args`1.Formatter.IsCollection">
            <summary>
            <c>true</c> if this object is collection.
            </summary>
        </member>
        <member name="T:Splunk.Client.Args`1.Ordinal">
            <summary>
            An ordinal.
            </summary>
            <seealso cref="T:System.Collections.Generic.IEnumerable{Splunk.Client.Argument}"/>
        </member>
        <member name="P:Splunk.Client.Application.UpdateArgs.CheckForUpdates">
            <summary>
            Gets or sets a value that indicates whether Splunk should check
            Splunkbase for updates to an <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <value>
            <c>true</c> if check for updates, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.ApplicationArchiveInfo">
            <summary>
            Provides information about an application archive produced by Splunk.
            </summary>
            <remarks>
            You can produce an application archive using the
            <see cref="M:Splunk.Client.Application.PackageAsync"/> method.
            </remarks>
            <seealso cref="T:Splunk.Client.Resource"/>
            <seealso cref="T:Splunk.Client.IApplicationArchiveInfo"/>
        </member>
        <member name="T:Splunk.Client.Resource">
            <summary>
            Provides a base class that represents a Splunk resource as an object.
            </summary>
            <seealso cref="T:Splunk.Client.BaseResource"/>
        </member>
        <member name="T:Splunk.Client.BaseResource">
            <summary>
            Provides a base class that represents a Splunk resource as an object.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter"/>
            <seealso cref="T:Splunk.Client.IBaseResource"/>
        </member>
        <member name="T:Splunk.Client.ExpandoAdapter">
            <summary>
            Provides a base class for implementing strong types backed by
            <see cref="T:System.Dynamic.ExpandoObject"/> instances.
            </summary>
            <seealso cref="T:System.Dynamic.DynamicObject"/>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter.#ctor(System.Dynamic.ExpandoObject)">
            <summary>
            Intializes a new instance of the <see cref="T:Splunk.Client.ExpandoAdapter"/>
            class.
            </summary>
            <param name="expandoObject">
            An object backing the current <see cref="T:Splunk.Client.ExpandoAdapter"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ExpandoAdapter"/>
            class.
            </summary>
        </member>
        <member name="F:Splunk.Client.ExpandoAdapter.Empty">
            <summary>
            The empty.
            </summary>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter.GetDynamicMemberNames">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>
            The list of dynamic member names.
            </returns>
            <seealso cref="M:System.Dynamic.DynamicObject.GetDynamicMemberNames()"/>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter.GetValue(System.String)">
            <summary>
            Gets a named item from the
            <see cref="T:System.Dynamic.ExpandoObject"/>"/&gt;
            backing the current <see cref="T:Splunk.Client.ExpandoAdapter"/>.
            </summary>
            <param name="name">
            The name of the item to be returned.
            </param>
            <returns>
            A dynamic value.
            </returns>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter.GetValue``1(System.String,Splunk.Client.ValueConverter{``0})">
            <summary>
            Gets a named item from the underlying <see cref="P:Splunk.Client.ExpandoAdapter.Object"/>"/&gt;
            and applies a <see cref="T:Splunk.Client.ValueConverter`1"/>.
            </summary>
            <remarks>
            The value returned by this method is stored into the backing
            <see cref="T:System.Dynamic.ExpandoObject"/> to reduce conversion overhead.
            </remarks>
            <typeparam name="TValue">
            Type of the value.
            </typeparam>
            <param name="name">
            The name of the item to be returned.
            </param>
            <param name="valueConverter">
            The <see cref="T:Splunk.Client.ValueConverter`1"/> applied to the item
            identified by <paramref name="name"/>.
            </param>
            <returns>
            A value of type <typeparamref name="TValue"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get dynamic member values.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Thrown when the requested operation is not supported.
            </exception>
            <param name="binder">
            Provides information about the object that called the dynamic operation.
            The <paramref name="binder"/>.Name property provides the name of the
            member on which the dynamic operation is performed. The
            <paramref name="binder"/>.IgnoreCase property specifies whether the
            member name is case-sensitive.
            </param>
            <param name="result">
            The result of the operation.
            </param>
            <returns>
            <c>true</c> if the operation is successful; otherwise, <c>false</c>. If
            this method returns <c>false</c>, the run-time binder of the language
            determines the behavior. In most cases, a run-time exception is thrown.
            </returns>
        </member>
        <member name="P:Splunk.Client.ExpandoAdapter.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when the requested operation is invalid.
            </exception>
            <value>
            The object.
            </value>
        </member>
        <member name="T:Splunk.Client.ExpandoAdapter.ConvertedValue">
            <summary>
            A converted value.
            </summary>
        </member>
        <member name="T:Splunk.Client.ExpandoAdapter.Converter">
            <summary>
            Provides a converter to create <see cref="T:Splunk.Client.ExpandoAdapter"/>
            instances from <see cref="T:System.Dynamic.ExpandoObject"/>
            instances.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{Splunk.Client.ExpandoAdapter}"/>
        </member>
        <member name="T:Splunk.Client.ValueConverter`1">
            <summary>
            Provides a way to convert objects to values of some type.
            </summary>
            <remarks>
            If you want to create a value converter, create a class that implements
            the <see cref="M:Splunk.Client.ValueConverter`1.Convert(System.Object)"/> method and--optionally--overrides the
            <see cref="P:Splunk.Client.ValueConverter`1.DefaultValue"/> property. Your <see cref="M:Splunk.Client.ValueConverter`1.Convert(System.Object)"/> method
            should accept a value of any type and produce a
            <typeparamref name="TValue"/>
            or throw an <see cref="T:System.IO.InvalidDataException"/>.
            </remarks>
            <typeparam name="TValue">
            Type of the value.
            </typeparam>
        </member>
        <member name="M:Splunk.Client.ValueConverter`1.Convert(System.Object)">
            <summary>
            Converts the given input.
            </summary>
            <param name="input">
            The input.
            </param>
            <returns>
            A TValue.
            </returns>
        </member>
        <member name="M:Splunk.Client.ValueConverter`1.NewInvalidDataException(System.Object)">
            <summary>
            Creates a new invalid data exception.
            </summary>
            <param name="input">
            The input.
            </param>
            <returns>
            An InvalidDataException.
            </returns>
        </member>
        <member name="F:Splunk.Client.ValueConverter`1.Comparer">
            <summary>
            The comparer.
            </summary>
        </member>
        <member name="F:Splunk.Client.ValueConverter`1.TypeName">
            <summary>
            Name of the type.
            </summary>
        </member>
        <member name="P:Splunk.Client.ValueConverter`1.DefaultValue">
            <summary>
            Gets the default value.
            </summary>
            <value>
            The default value.
            </value>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter.Converter.Convert(System.Object)">
            <summary>
            Converts the given input.
            </summary>
            <param name="input">
            
            </param>
            <returns>
            An ExpandoAdapter.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent an <see cref="T:Splunk.Client.ExpandoAdapter"/>.
            value.
            </exception>
        </member>
        <member name="P:Splunk.Client.ExpandoAdapter.Converter.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="T:Splunk.Client.IBaseResource">
            <summary>
            Interface for base resource.
            </summary>
        </member>
        <member name="P:Splunk.Client.IBaseResource.GeneratorVersion">
            <summary>
            Gets the generator version.
            </summary>
            <value>
            The generator version.
            </value>
        </member>
        <member name="P:Splunk.Client.IBaseResource.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Splunk.Client.IBaseResource.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Splunk.Client.IBaseResource.Updated">
            <summary>
            Gets the Date/Time of the updated.
            </summary>
            <value>
            The updated.
            </value>
        </member>
        <member name="M:Splunk.Client.BaseResource.#ctor(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.BaseResource"/> class.
            </summary>
            <param name="entry">
            An object representing a Splunk atom entry response.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            feed containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseResource.#ctor(Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.BaseResource"/> class.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseResource.#ctor(System.Dynamic.ExpandoObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.BaseResource"/> class.
            </summary>
            <param name="expandObject">
            An object containing the dynamic members of the newly created
            <see cref="T:Splunk.Client.BaseResource"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseResource.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.BaseResource"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.BaseResource.Equals(System.Object)">
            <summary>
            Determines whether the specified resource refers to the same 
            resource as the current one.
            </summary>
            <param name="other">
            The <see cref="T:Splunk.Client.BaseResource"/> to compare with the current one.
            </param>
            <returns>
            A value of <c>true</c> if the two instances represent the same
            <see cref="T:Splunk.Client.BaseResource"/>; otherwise, <c>false</c>.
            </returns>
            <seealso cref="M:System.Object.Equals(object)"/>
        </member>
        <member name="M:Splunk.Client.BaseResource.Equals(Splunk.Client.BaseResource)">
            <summary>
            Determines whether the specified resource refers to the same
            resource as the current one.
            </summary>
            <param name="other">
            The <see cref="T:Splunk.Client.BaseResource"/> to compare with the current one.
            </param>
            <returns>
            A value of <c>true</c> if the two instances represent the same
            resource; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.BaseResource.GetHashCode">
            <summary>
            Returns the hash code for the current resource.
            </summary>
            <returns>
            Hash code for the current resource.
            </returns>
            <seealso cref="M:System.Object.GetHashCode()"/>
        </member>
        <member name="M:Splunk.Client.BaseResource.Initialize(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Infrastructure. Initializes the current uninitialized resource.
            </summary>
            <remarks>
            This method may be called once to initialize a resource instantiated
            by the default constructor. Override this method to provide special
            initialization code. Call this base method before initialization
            is complete.
            <note type="note">
            This method supports the Splunk client infrastructure and is not 
            intended to be used directly from your code.
            </note>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="entry"/>, or <paramref name="generatorVersion"/> 
            are <c>null</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current resource is already initialized.
            </exception>
            <param name="entry">
            An object representing a Splunk atom entry response.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseResource.Initialize(Splunk.Client.AtomFeed)">
            <summary>
            Infrastructure. Initializes the current uninitialized resource.
            </summary>
            <remarks>
            This method may be called once to initialize a resource instantiated
            by the default constructor. Override this method to provide special
            initialization code. Call this base method before initialization
            is complete.
            <note type="note">
            This method supports the Splunk client infrastructure and is not
            intended to be used directly from your code.
            </note>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="feed"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current resource is already initialized.
            </exception>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseResource.ToString">
            <summary>
            Gets a string identifying the current resource.
            </summary>
            <returns>
            A string representing the identity of the current
            <see cref="T:Splunk.Client.BaseResource"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="M:Splunk.Client.BaseResource.Initialize``1(``0,Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Initializes an unitialized resource.
            </summary>
            <typeparam name="TResource">
            Type of the resource to be initialized.
            </typeparam>
            <param name="resource">
            The resource to be initialized.
            </param>
            <param name="entry">
            A Splunk atom feed entry containing resource data.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseResource.Initialize``2(``0,Splunk.Client.AtomFeed)">
            <summary>
            Initializes an unitialized resource collection.
            </summary>
            <typeparam name="TCollection">
            Type of the resource collection to be initialized.
            </typeparam>
            <typeparam name="TResource">
            Type of the resources in the resource collection to be initialized.
            </typeparam>
            <param name="collection">
            The resource collection to be initialized.
            </param>
            <param name="feed">
            A Splunk atom feed entry containing resource data.
            </param>
        </member>
        <member name="P:Splunk.Client.BaseResource.GeneratorVersion">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.BaseResource.Id">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.BaseResource.Title">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.BaseResource.Updated">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.BaseResource.Content">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.BaseResource.Resources">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Resource.#ctor(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Resource"/> class.
            </summary>
            <param name="entry">
            An object representing a Splunk atom entry response.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            feed containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.Resource.#ctor(Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Resource"/> class.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.Resource.#ctor(System.Dynamic.ExpandoObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Resource"/> class.
            </summary>
            <param name="expandObject">
            An object containing the dynamic members of the newly created
            <see cref="T:Splunk.Client.Resource"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.Resource.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the <see cref="T:Splunk.Client.Resource"/>
            class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Resource.Initialize(Splunk.Client.AtomEntry,System.Version)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Resource.Initialize(Splunk.Client.AtomFeed)">
            <summary>
            Infrastructure. Initializes the current uninitialized
            <see cref="T:Splunk.Client.Resource"/>.
            </summary>
            <remarks>
            This method may be called once to initialize a <see cref="T:Splunk.Client.Resource"/>
            instantiated by the default constructor. Override this method to provide
            special initialization code. Call this base method before initialization
            is complete.
            <note type="note">
            This method supports the Splunk client infrastructure and is not intended
            to be used directly from your code.
            </note>
            </remarks>
            <exception cref="T:System.IO.InvalidDataException">
            Thrown when an Invalid Data error condition occurs.
            </exception>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
            <seealso cref="M:Splunk.Client.BaseResource.Initialize(AtomFeed)"/>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="feed"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Splunk.Client.Resource"/> is already initialized.
            </exception>
        </member>
        <member name="T:Splunk.Client.IApplicationArchiveInfo">
            <summary>
            Interface for application archive information.
            </summary>
            <seealso cref="T:IBaseResource"/>
        </member>
        <member name="P:Splunk.Client.IApplicationArchiveInfo.ApplicationName">
            <summary>
            Gets the name of the application.
            </summary>
            <value>
            The name of the application.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationArchiveInfo.Eai">
            <summary>
            Gets the extensible administration interface properties.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationArchiveInfo.Path">
            <summary>
            Gets the full pathname of the file.
            </summary>
            <value>
            The full pathname of the file.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationArchiveInfo.Refresh">
            <summary>
            Gets a value indicating whether the refresh.
            </summary>
            <value>
            <c>true</c> if refresh, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationArchiveInfo.Uri">
            <summary>
            Gets the download URI of the current application archive.
            </summary>
            <value>
            The download URI.
            </value>
        </member>
        <member name="M:Splunk.Client.ApplicationArchiveInfo.#ctor(Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ApplicationArchiveInfo"/>
            class.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.ApplicationArchiveInfo.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the <see cref="T:Splunk.Client.ApplicationArchiveInfo"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code. The
            <see cref="T:Splunk.Client.ApplicationArchiveInfo"/> class is an information object
            returned by these methods.
            <list type="table">
            <listheader>
              <term>Method</term>
              <description>Description</description>
            </listheader>
            <item>
              <term><see cref="M:Splunk.Client.Application.PackageAsync"/></term>
              <description>
              Asychronously packages the current Splunk application into an archive
              file.
              </description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Splunk.Client.ApplicationArchiveInfo.Eai">
            <summary>
            Gets the access control list for the application archive.
            </summary>
            <value>
            Access control list for the application archive.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationArchiveInfo.ApplicationName">
            <summary>
            Gets the name of the application contained by the application archive.
            </summary>
            <remarks>
            This value is the default name of the application folder on disk.
            </remarks>
            <value>
            Name of the application contained by the archive.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationArchiveInfo.Path">
            <summary>
            Gets the local path to the application archive.
            </summary>
            <value>
            A local path to the application archive.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationArchiveInfo.Refresh">
            <summary>
            Gets a value indicating whether to reload the objects contained in the
            locally installed application.
            </summary>
            <value>
            <c>true</c>, if the objects contained in the locally installed
            application should be reloaded; <c>false</c>, if they need not be
            reloaded.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationArchiveInfo.Uri">
            <summary>
            Gets the download URI for the application archive.
            </summary>
            <value>
            A download URI for the application archive or <c>null</c>, if there is no
            download URI.
            </value>
        </member>
        <member name="T:Splunk.Client.ApplicationAttributes">
            <summary>
            Provides arguments for setting the attributes of an
            <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/dKraaR">REST API Reference: POST apps/local</a>.
            </description></item>
            <item><description>
              <a href="http://goo.gl/dKraaR">REST API Reference: POST
              apps/local/{name}</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.ApplicationAttributes}"/>
        </member>
        <member name="P:Splunk.Client.ApplicationAttributes.ApplicationAuthor">
            <summary>
            Gets or sets the username of the splunk.com account for publishing an
            application to Splunkbase.
            </summary>
            <value>
            Username of the splunk.com account for publishing an application to
            Splunkbase.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationAttributes.Configured">
            <summary>
            Gets or sets a value that indicates whether custom setup has been
            performed on an application.
            </summary>
            <value>
            <c>true</c>, if custom setup has been performed on the application;
            otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationAttributes.Description">
            <summary>
            Gets or sets the short explanatory string displayed underneath the title
            of an application in Launcher.
            </summary>
            <remarks>
            Short descriptions of about 200 characters are most effective.
            </remarks>
            <value>
            A short explanatory string that is displayed underneath the title of the
            application in Launcher.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationAttributes.Label">
            <summary>
            Gets or sets the name of an application for display in the Splunk GUI and
            Launcher.
            </summary>
            <value>
            The name of the application for display in the Splunk GUI and Launcher.
            </value>
            <remarks>
            Splunk recommends lengths between five and eighty characters. Values must
            not include "Splunk For" as a prefix.
            <example>Examples of good labels:</example>
            <code>
            "IMAP Monitor"
            "FISMA Compliance"
            "SQL Server Integration Services"
            </code>
            </remarks>
        </member>
        <member name="P:Splunk.Client.ApplicationAttributes.Version">
            <summary>
            Gets or sets the version string for an application.
            </summary>
            <remarks>
            Version strings are a number followed by a sequence of numbers or dots.
            Pre-release versions can append a space and a single-word suffix like
            "beta2". Each release of an application must change the version number.
            <example>Examples:</example>
            <code>
            "1.2"
            "11.0.34"
            "2.0 beta"
            "1.3 beta2"
            "1.0 b2"
            "12.4 alpha"
            "11.0.34.234.254"
            </code>
            </remarks>
            <value>
            An application version string.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationAttributes.Visible">
            <summary>
            Gets or sets a value that indicates if an <see cref="T:Splunk.Client.Application"/>
            is visible and navigable from Splunk Web.
            </summary>
            <remarks>
            Visible apps require at least one view that is available from Splunk Web.
            </remarks>
            <value>
            <c>true</c>, if the application is visible and navigable from Splunk Web;
            otherwise <c>false</c>.
            </value>
        </member>
        <member name="T:Splunk.Client.ApplicationCollection">
            <summary>
            Provides an object representation of a collection of Splunk applications.
            </summary>
            <seealso cref="T:Splunk.Client.EntityCollection{Splunk.Client.Application,Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IApplicationCollection{Splunk.Client.Application}"/>
        </member>
        <member name="T:Splunk.Client.EntityCollection`2">
            <summary>
            Provides a base class for representing a collection of Splunk resources.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/TDthxd">Accessing Splunk resources</a>,
              especially "Other actions for Splunk REST API endpoints".
            </description></item>
            <item><description>
              <a href="http://goo.gl/oc65Bo">REST API Reference</a>.
            </description></item>
            </list>
            </remarks>
            <typeparam name="TEntity">
            Type of the entity.
            </typeparam>
            <typeparam name="TResource">
            Type of the resource.
            </typeparam>
            <seealso cref="T:Splunk.Client.BaseEntity{Splunk.Client.ResourceCollection}"/>
            <seealso cref="T:Splunk.Client.IEntityCollection{TEntity,TResource}"/>
        </member>
        <member name="T:Splunk.Client.IEntityCollection`2">
            <summary>
            Provides an operational interface common to all Splunk entity collections.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/TDthxd">Accessing Splunk resources</a>,
              especially "Other actions for Splunk REST API endpoints".
            </description></item>
            <item><description>
              <a href="http://goo.gl/oc65Bo">REST API Reference</a>.
            </description></item>
            </list>
            </remarks>
            <typeparam name="TEntity">
            Type of the entity.
            </typeparam>
            <typeparam name="TResource">
            Type of the resource.
            </typeparam>
            <seealso cref="T:IReadOnlyList{TEntity}"/>
        </member>
        <member name="M:Splunk.Client.IEntityCollection`2.GetAsync(System.String)">
            <summary>
            Asynchronously retrieves a <see cref="T:Splunk.Client.Entity`1"/> in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/> by name.
            </summary>
            <param name="name">
            Name of the entity to retrieve.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IEntityCollection`2.GetAllAsync">
            <summary>
            Asynchronously retrieves a fresh copy of the full list of entities in the
            current <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <remarks>
            Following completion of the operation the list of entites in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/> will contain all changes
            since the list was last retrieved.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IEntityCollection`2.GetSliceAsync(Splunk.Client.Argument[])">
            <summary>
            Asynchronously retrieves select entities from the list of entites in the
            current <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <remarks>
            Following completion of the operation the list of entities in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/> will contain all changes
            since the select entites were last retrieved.
            </remarks>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IEntityCollection`2.GetSliceAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously retrieves select entities from the list of entites in the
            current <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <remarks>
            Following completion of the operation the list of entities in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/> will contain all changes
            since the select entites were last retrieved.
            </remarks>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IEntityCollection`2.ReloadAsync">
            <summary>
            Asynchronously forces the Splunk server to reload data for the current
            <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.#ctor(Splunk.Client.Service,Splunk.Client.ResourceName)">
             <summary>
             Initializes a new <see cref="T:Splunk.Client.EntityCollection`2"/> instance.
             </summary>
             <param name="service">
             An object representing a root Splunk service endpoint.
             </param>
             <param name="name">
             An object identifying a Splunk resource within
             <paramref name="service"/>.<see cref="T:Splunk.Client.Namespace"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="service"/> or <paramref name="name"/> are <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,Splunk.Client.ResourceName)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Splunk.Client.EntityCollection`2"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="name">
            An object identifying a Splunk entity collection within
            <paramref name="ns"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.#ctor(Splunk.Client.Context,Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Splunk.Client.EntityCollection`2"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="entry">
            A entry in a Splunk atom feed response.
            </param>
            <param name="generatorVersion">
            The generator version.
            </param>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Splunk.Client.EntityCollection`2"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.EntityCollection`2"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.CreateAsync(Splunk.Client.Argument[])">
            <summary>
            Asynchronously creates a new Splunk entity.
            </summary>
            <param name="arguments">
            Arguments to the Splunk REST API for creating the desired entity.
            </param>
            <returns>
            An object representing the entity created.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.CreateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously creates a new Splunk entity.
            </summary>
            <param name="arguments">
            Arguments to the Splunk REST API for creating the desired entity.
            </param>
            <returns>
            An object representing the entity created.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.GetAsync(System.String)">
            <summary>
            Asynchronously retrieves a <see cref="T:Splunk.Client.Entity`1"/> in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/> by name.
            </summary>
            <param name="name">
            Name of the entity to retrieve.
            </param>
            <returns>
            The entity retrieved.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.GetAllAsync">
            <summary>
            Asynchronously retrieves a fresh copy of the full list of entities in the
            current <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <remarks>
            Following completion of the operation the list of entites in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/> will contain all changes
            since the list was last retrieved.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.GetOrNullAsync(System.String)">
            <summary>
            Asynchronously retrieves an entity in the current collection by name.
            </summary>
            <param name="name">
            The name of the entity to retrieve.
            </param>
            <returns>
            An object representing entity <paramref name="name"/> or <c>null</c>,
            if no such entity exists.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.GetSliceAsync(Splunk.Client.Argument[])">
            <summary>
            Asynchronously retrieves select entities from the list of entites in the
            current <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <remarks>
            Following completion of the operation the list of entities in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/> will contain all changes
            since the select entites were last retrieved.
            </remarks>
            <param name="arguments">
            A variable-length parameters list containing arguments.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.GetSliceAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously retrieves select entities from the list of entites in the
            current <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <remarks>
            Following completion of the operation the list of entities in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/> will contain all changes
            since the select entites were last retrieved.
            </remarks>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.ReloadAsync">
            <summary>
            Asynchronously forces the Splunk server to reload data for the current
            <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the current <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <returns>
            An object for iterating through the current
            <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.CreateSnapshot(Splunk.Client.AtomEntry,System.Version)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.CreateSnapshot(Splunk.Client.AtomFeed)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.EntityCollection`2.CreateSnapshot(Splunk.Client.ResourceCollection)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.EntityCollection`2.Item(System.Int32)">
            <summary>
            Gets the entity at the specified <paramref name="index"/>.
            </summary>
            <param name="index">
            The zero-based index of the entity to get.
            </param>
            <returns>
            An object representing the entity at <paramref name="index"/>.
            </returns>
        </member>
        <member name="P:Splunk.Client.EntityCollection`2.Count">
            <summary>
            Gets the number of entries in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </summary>
            <value>
            The number of entries in the current
            <see cref="T:Splunk.Client.EntityCollection`2"/>.
            </value>
        </member>
        <member name="T:Splunk.Client.IApplicationCollection`1">
            <summary>
            Provides an operational interface to the Splunk application collection.
            </summary>
            <typeparam name="TApplication">
            Type of the application.
            </typeparam>
            <seealso cref="T:IPaginated"/>
            <seealso cref="T:IEntityCollection{TApplication"/>
        </member>
        <member name="T:Splunk.Client.IPaginated">
            <summary>
            Provides an operational interface to the Splunk application collection.
            </summary>
        </member>
        <member name="P:Splunk.Client.IPaginated.Messages">
            <summary>
            Gets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Splunk.Client.IPaginated.Pagination">
            <summary>
            Gets the pagination properties for the current Splunk entity collection.
            </summary>
            <value>
            The pagination.
            </value>
        </member>
        <member name="M:Splunk.Client.IApplicationCollection`1.CreateAsync(System.String,System.String,Splunk.Client.ApplicationAttributes)">
            <summary>
            Asynchronously creates a new Splunk application from a template.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/SzKzNX">POST apps/local</a>
            endpoint to create the current <see cref="T:Splunk.Client.Application"/>.
            </remarks>
            <param name="name">
            Name of the application to be created.
            </param>
            <param name="template">
            Name of the template for the application to be created.
            </param>
            <param name="attributes">
            Optional attribute values for the application to be created.
            </param>
            <returns>
            An object representing the Splunk application created.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplicationCollection`1.GetSliceAsync(Splunk.Client.ApplicationCollection.Filter)">
            <summary>
            Asynchronously retrieves select entities in the current application
            entity collection.
            </summary>
            <remarks>
            Following completion of the operation the list of entities in the current
            application entity collection will contain all changes since the select
            entities were last retrieved.
            </remarks>
            <param name="criteria">
            The criteria.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplicationCollection`1.InstallAsync(System.String,System.String,System.Boolean)">
            <summary>
            Asynchronously installs an application from a Splunk application archive
            file.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/SzKzNX">POST apps/local</a>
            endpoint to install the application from the archive file on
            <paramref name="path"/>.
            </remarks>
            <param name="path">
            Specifies the location of a Splunk application archive file.
            </param>
            <param name="name">
            Optionally specifies an explicit name for the application. This value
            overrides the name of the application as specified in the archive file.
            </param>
            <param name="update">
            <c>true</c> if Splunk should allow the installation to update an existing
            application. The default value is <c>false</c>.
            </param>
            <returns>
            An object representing the installed application.
            </returns>
        </member>
        <member name="M:Splunk.Client.ApplicationCollection.#ctor(Splunk.Client.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ApplicationCollection"/>
            class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.ApplicationCollection.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ApplicationCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.ApplicationCollection.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ApplicationCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.ApplicationCollection.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ApplicationCollection"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.ApplicationCollection.CreateAsync(System.String,System.String,Splunk.Client.ApplicationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ApplicationCollection.GetSliceAsync(Splunk.Client.ApplicationCollection.Filter)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ApplicationCollection.InstallAsync(System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="F:Splunk.Client.ApplicationCollection.ClassResourceName">
            <summary>
            Name of the class resource.
            </summary>
        </member>
        <member name="P:Splunk.Client.ApplicationCollection.Messages">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ApplicationCollection.Pagination">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.ApplicationCollection.CreationArgs">
            <summary>
            Arguments for creation.
            </summary>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.ApplicationCollection.CreationArgs}"/>
        </member>
        <member name="T:Splunk.Client.ApplicationCollection.Filter">
            <summary>
            Provides selection criteria for retrieving a slice of an
            <see cref="T:Splunk.Client.ApplicationCollection"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/pqZJco">REST API: GET apps/local</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.ApplicationCollection.Filter}"/>
        </member>
        <member name="P:Splunk.Client.ApplicationCollection.Filter.Count">
            <summary>
            Gets or sets a value specifying the maximum number of
            <see cref="T:Splunk.Client.Application"/> entries to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is set to zero, then all
            <see cref="T:Splunk.Client.Application"/> entries are returned. The default value is
            <c>30</c>.
            </remarks>
            <value>
            A value specifying the maximum number of <see cref="T:Splunk.Client.Application"/>
            entries to return.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationCollection.Filter.Offset">
            <summary>
            Gets or sets a value specifying the first result (inclusive)
            from which to begin returning entries.
            </summary>
            <remarks>
            The <c>Offset</c> property is zero-based and cannot be negative. The
            default value is zero.
            </remarks>
            <value>
            A value specifying the first result (inclusive) from which to begin
            returning entries.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationCollection.Filter.Refresh">
            <summary>
            Gets or sets a value indicating whether to scan for new
            <see cref="T:Splunk.Client.Application"/> instances and reload any objects those new
            instances contain.
            </summary>
            <remarks>
            The default is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if a scan and reload should be done; <c>false</c>
            otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationCollection.Filter.Search">
            <summary>
            Gets or sets a search expression to filter <see cref="T:Splunk.Client.Application"/>
            entries.
            </summary>
            <remarks>
            Use this expression to filter the entries returned based on
            <see cref="T:Splunk.Client.Application"/> properties.
            </remarks>
            <value>
            A search expression to filter <see cref="T:Splunk.Client.Application"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationCollection.Filter.SortDirection">
            <summary>
            Gets or sets a value specifying the sort direction for
            <see cref="T:Splunk.Client.Application"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.ApplicationCollection.Filter.SortDirection"/>.Ascending.
            </remarks>
            <value>
            The sort direction for <see cref="T:Splunk.Client.Application"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationCollection.Filter.SortMode">
            <summary>
            Gets or sets a value specifying the sort mode for
            <see cref="T:Splunk.Client.Application"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.ApplicationCollection.Filter.SortMode"/>.Automatic.
            </remarks>
            <value>
            The sort mode for <see cref="T:Splunk.Client.Application"/> entries.
            </value>
        </member>
        <member name="T:Splunk.Client.ApplicationSetupInfo">
            <summary>
            Represents the setup information for an <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <seealso cref="T:Splunk.Client.Resource"/>
            <seealso cref="T:Splunk.Client.IApplicationSetupInfo"/>
        </member>
        <member name="T:Splunk.Client.IApplicationSetupInfo">
            <summary>
            Interface for application setup information.
            </summary>
            <seealso cref="T:IBaseResource"/>
        </member>
        <member name="P:Splunk.Client.IApplicationSetupInfo.Eai">
            <summary>
            Gets the extensible administration interface properties.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationSetupInfo.Refresh">
            <summary>
            Gets a value indicating whether the refresh.
            </summary>
            <value>
            <c>true</c> if refresh, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationSetupInfo.Setup">
            <summary>
            Gets the setup.
            </summary>
            <value>
            The setup.
            </value>
        </member>
        <member name="M:Splunk.Client.ApplicationSetupInfo.#ctor(Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ApplicationSetupInfo"/>
            class.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.ApplicationSetupInfo.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ApplicationSetupInfo"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="P:Splunk.Client.ApplicationSetupInfo.Eai">
            <summary>
            Gets The extensible administration interface properties for the current
            <see cref="T:Splunk.Client.ApplicationSetupInfo"/>.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationSetupInfo.Refresh">
            <summary>
            Gets a value indicating whether to to reload the objects contained in the
            locally installed application.
            </summary>
            <value>
            <c>true</c> if refresh, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationSetupInfo.Setup">
            <summary>
            Gets a listing of the setup script for the application.
            </summary>
            <value>
            The setup.
            </value>
        </member>
        <member name="T:Splunk.Client.ApplicationUpdateInfo">
            <summary>
            Provides an object representation for the update information available
            for an application.
            </summary>
            <seealso cref="T:Splunk.Client.Resource"/>
            <seealso cref="T:Splunk.Client.IApplicationUpdateInfo"/>
        </member>
        <member name="T:Splunk.Client.IApplicationUpdateInfo">
            <summary>
            Interface for application update information.
            </summary>
            <seealso cref="T:IBaseResource"/>
        </member>
        <member name="P:Splunk.Client.IApplicationUpdateInfo.Eai">
            <summary>
            Gets the extensible administration interface properties.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationUpdateInfo.Refresh">
            <summary>
            Gets a value indicating whether the refresh.
            </summary>
            <value>
            <c>true</c> if refresh, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationUpdateInfo.Update">
            <summary>
            Gets the update.
            </summary>
            <value>
            The update.
            </value>
        </member>
        <member name="M:Splunk.Client.ApplicationUpdateInfo.#ctor(Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ApplicationUpdateInfo"/>
            class.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.ApplicationUpdateInfo.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ApplicationUpdateInfo"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.Eai">
            <summary>
            Gets the extensible administration interface properties for the current
            <see cref="T:Splunk.Client.ApplicationUpdateInfo"/>.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.Update">
            <summary>
            Gets the properties of the update.
            </summary>
            <remarks>
            A value of <c>null</c> indicates that no update is available.
            </remarks>
            <value>
            The update.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.Refresh">
            <summary>
            Gets a value indicating whether to to reload the objects contained in the
            locally installed application.
            </summary>
            <value>
            <c>true</c> if refresh, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter">
            <summary>
            An update adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.ApplicationUpdateInfo.UpdateAdapter}"/>
        </member>
        <member name="T:Splunk.Client.ExpandoAdapter`1">
            <summary>
            Provides a generic base class for implementing strong types backed by
            <see cref="T:System.Dynamic.ExpandoObject"/> instances.
            </summary>
            <typeparam name="TExpandoAdapter">
            Type of the adapter.
            </typeparam>
            <seealso cref="T:Splunk.Client.ExpandoAdapter"/>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter`1.#ctor">
            <summary>
            Initializes a new instance of the ExpandoAdapter class.
            </summary>
        </member>
        <member name="T:Splunk.Client.ExpandoAdapter`1.Converter">
            <summary>
            Provides a converter to create <see cref="T:Splunk.Client.ExpandoAdapter"/>
            instances from <see cref="T:System.Dynamic.ExpandoObject"/>
            instances.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{TExpandoAdapter}"/>
        </member>
        <member name="M:Splunk.Client.ExpandoAdapter`1.Converter.Convert(System.Object)">
            <summary>
            Converts the given input.
            </summary>
            <param name="input">
            
            </param>
            <returns>
            A TExpandoAdapter.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent an <see cref="T:Splunk.Client.ExpandoAdapter"/>.
            </exception>
        </member>
        <member name="P:Splunk.Client.ExpandoAdapter`1.Converter.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.ApplicationName">
            <summary>
            Get the name of the application.
            </summary>
            <value>
            The name of the application.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.ApplicationUri">
            <summary>
            Gets the download URI for the application update.
            </summary>
            <value>
            The application URI.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.Checksum">
            <summary>
            Gets the checksum for the application update.
            </summary>
            <value>
            The checksum.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.ChecksumType">
            <summary>
            Gets the name of the checksum type used to compute the application update
            <see cref="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.Checksum"/>.
            </summary>
            <value>
            The type of the checksum.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.Homepage">
            <summary>
            Get the URI to the Splunkbase page for the application.
            </summary>
            <value>
            The homepage.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.ImplicitIdRequired">
            <summary>
            Gets a value that indicates if the application has an explicit ID in
            app.conf.
            </summary>
            <remarks>
            Splunk uses application IDs to help identify them during updates.
            </remarks>
            <value>
            <c>true</c> if implicit identifier required, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.Size">
            <summary>
            Gets the size of the application update.
            </summary>
            <value>
            Size of the application update.
            </value>
        </member>
        <member name="P:Splunk.Client.ApplicationUpdateInfo.UpdateAdapter.Version">
            <summary>
            Get the version of the application update.
            </summary>
            <value>
            Version of the applicaiton update.
            </value>
        </member>
        <member name="T:Splunk.Client.Argument">
            <summary>
            Represents the value of a parameter to a Splunk REST API endpoint.
            </summary>
            <seealso cref="T:System.IComparable"/>
            <seealso cref="T:System.IComparable{Splunk.Client.Argument}"/>
            <seealso cref="T:System.IEquatable{Splunk.Client.Argument}"/>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.SByte)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Argument"/> class.
            </summary>
            <param name="name">
            Parameter name.
            </param>
            <param name="value">
            Argument value.
            </param>
        </member>
        <member name="M:Splunk.Client.Argument.CompareTo(System.Object)">
            <summary>
            Compares the current <see cref="T:Splunk.Client.Argument"/> with another object and
            returns an integer that indicates whether the current
            <see cref="T:Splunk.Client.Argument"/> precedes, follows, or appears in the same position
            in the sort order as the other object.
            </summary>
            <param name="other">
            The object to compare to the current <see cref="T:Splunk.Client.Argument"/>.
            </param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes,
            follows, or appears in the same position in the sort order as
            <paramref name="other"/>.
            <list type="table">
            <listheader>
              <term>
                Value
              </term>
              <description>
                Condition
              </description>
            </listheader>
            <item>
              <term>
                Less than zero
              </term>
              <description>
                This instance precedes <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Zero
              </term>
              <description>
                This instance is in the same position in the sort order as
                <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Greater than zero
              </term>
              <description>
                This instance follows <paramref name="other"/>,
                <paramref name="other"/> is not an <see cref="T:Splunk.Client.Argument"/>, or
                <paramref name="other"/> is <c>null</c>.
              </description>
            </item>
            </list>
            </returns>
            <seealso cref="M:System.IComparable.CompareTo(object)"/>
        </member>
        <member name="M:Splunk.Client.Argument.CompareTo(Splunk.Client.Argument)">
            <summary>
            Compares the current <see cref="T:Splunk.Client.Argument"/> with another one and returns
            an integer that indicates whether the current <see cref="T:Splunk.Client.Argument"/>
            precedes, follows, or appears in the same position in the sort order as
            the other one.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Argument"/>.
            </param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes,
            follows, or appears in the same position in the sort order as
            <paramref name="other"/>.
            <list type="table">
            <listheader>
              <term>
                Value
              </term>
              <description>
                Condition
              </description>
            </listheader>
            <item>
              <term>
                Less than zero
              </term>
              <description>
                This instance precedes <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Zero
              </term>
              <description>
                This instance is in the same position in the sort order as
                <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Greater than zero
              </term>
              <description>
                This instance follows <paramref name="other"/> or
                <paramref name="other"/> is <c>null</c>.
              </description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Splunk.Client.Argument.Equals(System.Object)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.Argument"/> and another object
            are equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Argument"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is a non <c>null</c>
            <see cref="T:Splunk.Client.Argument"/> and is the same as the current
            <see cref="T:Splunk.Client.Argument"/>;
            otherwise, <c>false</c>.
            </returns>
            <seealso cref="M:System.Object.Equals(object)"/>
        </member>
        <member name="M:Splunk.Client.Argument.Equals(Splunk.Client.Argument)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.Argument"/> and another one are
            equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Argument"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is non <c>null</c> and is the
            same as the current <see cref="T:Splunk.Client.Argument"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Argument.GetHashCode">
            <summary>
            Computes the hash code for the current <see cref="T:Splunk.Client.Argument"/>.
            </summary>
            <returns>
            The hash code for the current <see cref="T:Splunk.Client.Argument"/>.
            </returns>
            <seealso cref="M:System.Object.GetHashCode()"/>
        </member>
        <member name="M:Splunk.Client.Argument.op_GreaterThan(Splunk.Client.Argument,Splunk.Client.Argument)">
            <summary>
            Greater-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Argument.op_GreaterThanOrEqual(Splunk.Client.Argument,Splunk.Client.Argument)">
            <summary>
            Greater-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Argument.op_Equality(Splunk.Client.Argument,Splunk.Client.Argument)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.Argument"/> instances have the same
            value.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is the same as the value
            of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Argument.op_Inequality(Splunk.Client.Argument,Splunk.Client.Argument)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.Argument"/> instances have different
            values.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is different than the
            value of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Argument.op_LessThan(Splunk.Client.Argument,Splunk.Client.Argument)">
            <summary>
            Less-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Argument.op_LessThanOrEqual(Splunk.Client.Argument,Splunk.Client.Argument)">
            <summary>
            Less-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Argument"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Argument.ToString">
            <summary>
            Gets a string representation for the current <see cref="T:Splunk.Client.Argument"/>.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Argument"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="P:Splunk.Client.Argument.Name">
            <summary>
            Gets the name of the current <see cref="T:Splunk.Client.Argument"/>.
            </summary>
            <value>
            Name of the current <see cref="T:Splunk.Client.Argument"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.Argument.Value">
            <summary>
            Gets the value of the current <see cref="T:Splunk.Client.Argument"/>.
            </summary>
            <value>
            Value of the current <see cref="T:Splunk.Client.Argument"/>.
            </value>
        </member>
        <member name="T:Splunk.Client.ArgumentSet">
            <summary>
            Provides custom arguments.
            </summary>
            <seealso cref="T:System.Collections.Generic.ISet{Splunk.Client.Argument}"/>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ArgumentSet"/>
            class.
            </summary>
            <param name="argumentPrefix">
            The argument prefix.
            </param>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.#ctor(System.String,Splunk.Client.Argument[])">
            <summary>
            Initializes a new instance of the Splunk.Client.ArgumentSet class.
            </summary>
            <param name="argumentPrefix">
            The argument prefix.
            </param>
            <param name="arguments">
            The arguments.
            </param>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.#ctor(System.String,System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ArgumentSet"/>
            class from a collection of <see cref="T:Splunk.Client.Argument"/> values.
            </summary>
            <param name="argumentPrefix">
            The argument prefix.
            </param>
            <param name="arguments">
            The arguments.
            </param>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.Clear">
            <summary>
            Clears this object to its blank/initial state.
            </summary>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.Add(Splunk.Client.Argument)">
            <summary>
            Adds item.
            </summary>
            <param name="item">
            
            </param>
            <returns>
            <c>true</c> if it succeeds, <c>false</c> if it fails.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.Contains(Splunk.Client.Argument)">
            <summary>
            Query if this object contains the given item.
            </summary>
            <param name="item">
            
            </param>
            <returns>
            <c>true</c> if the object is in this collection, <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.CopyTo(Splunk.Client.Argument[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">
            
            </param>
            <param name="index">
            
            </param>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.ExceptWith(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Except with.
            </summary>
            <param name="other">
            
            </param>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>
            The enumerator.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.IntersectWith(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Intersect with.
            </summary>
            <param name="other">
            
            </param>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Is proper subset of the given other.
            </summary>
            <param name="other">
            
            </param>
            <returns>
            <c>true</c> if proper subset of, <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Is proper superset of the given other.
            </summary>
            <param name="other">
            
            </param>
            <returns>
            <c>true</c> if proper subset of, <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.IsSubsetOf(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Is subset of the given other.
            </summary>
            <param name="other">
            
            </param>
            <returns>
            <c>true</c> if subset of, <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.IsSupersetOf(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Is superset of the given other.
            </summary>
            <param name="other">
            
            </param>
            <returns>
            <c>true</c> if superset of, <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.Overlaps(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Query if this object overlaps the given other.
            </summary>
            <param name="other">
            
            </param>
            <returns>
            <c>true</c> if it succeeds, <c>false</c> if it fails.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.Remove(Splunk.Client.Argument)">
            <summary>
            Removes the given item.
            </summary>
            <param name="item">
            
            </param>
            <returns>
            <c>true</c> if it succeeds, <c>false</c> if it fails.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.SetEquals(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Sets the equals.
            </summary>
            <param name="other">
            
            </param>
            <returns>
            <c>true</c> if it succeeds, <c>false</c> if it fails.
            </returns>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.SymmetricExceptWith(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Symmetric except with.
            </summary>
            <param name="other">
            
            </param>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.ToString">
            <summary>
            Gets a string representation for the current <see cref="T:Splunk.Client.ArgumentSet"/>.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.ArgumentSet"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="M:Splunk.Client.ArgumentSet.UnionWith(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Union with.
            </summary>
            <param name="other">
            
            </param>
        </member>
        <member name="P:Splunk.Client.ArgumentSet.ArgumentPrefix">
            <summary>
            Gets the argument prefix.
            </summary>
            <value>
            The argument prefix.
            </value>
        </member>
        <member name="P:Splunk.Client.ArgumentSet.Count">
            <summary>
            Gets the number of. 
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Splunk.Client.ArgumentSet.IsReadOnly">
            <summary>
            Gets a value indicating whether this object is read only.
            </summary>
            <value>
            <c>true</c> if this object is read only, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.AtomEntry">
            <summary>
            Provides an object representation of an individual entry in a Splunk Atom
            Feed response.
            <para>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/TDthxd">REST API Reference Manual: Accessing
              Splunk resources</a>.
            </description></item>
            <item><description>
              <a href="http://goo.gl/YVTE9l">REST API Reference Manual: Atom Feed
              responses</a>.
            </description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Splunk.Client.AtomEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.AtomEntry"/> class.
            </summary>
        </member>
        <member name="M:Splunk.Client.AtomEntry.ReadXmlAsync(System.Xml.XmlReader)">
            <summary>
            Asynchronously reads XML data into the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </summary>
            <exception cref="T:System.IO.InvalidDataException">
            Thrown when an Invalid Data error condition occurs.
            </exception>
            <param name="reader">
            The reader from which to read.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.AtomEntry.ToString">
            <summary>
            Gets a string representation for the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="P:Splunk.Client.AtomEntry.Author">
            <summary>
            Gets the owner of the resource represented by the current
            <see cref="T:Splunk.Client.AtomEntry"/>, as defined in the access control list.
            </summary>
            <remarks>
            This value can be <c>"system"</c>, <c>"nobody"</c> or some specific user
            name. Refer to <a href="http://goo.gl/iTpzO0">Access control lists for
            Splunk objects</a> in the section on
            <a href="http://goo.gl/TDthxd">Accessing Splunk resources</a>.
            </remarks>
            <value>
            Owner of the resource represented by the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomEntry.Content">
            <summary>
            Gets a dynamic object representing the content of the resource
            represented by the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </summary>
            <remarks>
            Splunk typically returns content as dictionaries with key/value pairs
            that list properties of the entry. However, content can be returned as a
            list of values or as plain text.
            </remarks>
            <value>
            A dynamic object representing the content of the resource represented by
            the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomEntry.Id">
            <summary>
            Gets the Splunk management URI for accessing the resource represented by
            the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </summary>
            <value>
            The Splunk management URI for accessing the resource represented by the
            current <see cref="T:Splunk.Client.AtomEntry"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomEntry.Links">
            <summary>
            Gets the links.
            </summary>
            <value>
            The links.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomEntry.Published">
            <summary>
            Gets the Date/Time of the published.
            </summary>
            <value>
            The published.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomEntry.Title">
            <summary>
            Gets the human readable name for the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </summary>
            <remarks>
            This value varies depending on the endpoint used to access the current
            <see cref="T:Splunk.Client.AtomEntry"/>.
            </remarks>
            <value>
            The human readable name for the current <see cref="T:Splunk.Client.AtomEntry"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomEntry.Updated">
            <summary>
            Gets the date and time the current <see cref="T:Splunk.Client.AtomEntry"/> was last
            updated in Splunk.
            </summary>
            <value>
            The date and time the current <see cref="T:Splunk.Client.AtomEntry"/> was last updated in
            Splunk.
            </value>
        </member>
        <member name="T:Splunk.Client.AtomFeed">
            <summary>
            Provides an object representation of a Splunk Atom Feed response.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
                <a href="http://goo.gl/TDthxd">REST API Reference Manual: Accessing
                Splunk resources</a>.
            </description></item>
            <item><description>
                <a href="http://goo.gl/YVTE9l">REST API Reference Manual: Atom Feed
                responses</a>.
            </description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Splunk.Client.AtomFeed.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:Splunk.Client.AtomFeed"/>
            </summary>
        </member>
        <member name="M:Splunk.Client.AtomFeed.ReadXmlAsync(System.Xml.XmlReader)">
            <summary>
            Asynchronously reads XML data into the current <see cref="T:Splunk.Client.AtomFeed"/>.
            </summary>
            <exception cref="T:System.IO.InvalidDataException">
            Thrown when an Invalid Data error condition occurs.
            </exception>
            <param name="reader">
            The reader from which to read.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.AtomFeed.ToString">
            <summary>
            Gets a string representation for the current <see cref="T:Splunk.Client.AtomFeed"/>.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.AtomFeed"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="P:Splunk.Client.AtomFeed.Author">
            <summary>
            Gets the author of the current <see cref="T:Splunk.Client.AtomFeed"/> response.
            </summary>
            <value>
            Author of the current <see cref="T:Splunk.Client.AtomFeed"/> response.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomFeed.Entries">
            <summary>
            Gets the list of <see cref="T:Splunk.Client.AtomEntry"/> instances returned in the
            current <see cref="T:Splunk.Client.AtomFeed"/> response.
            </summary>
            <value>
            The list of <see cref="T:Splunk.Client.AtomEntry"/> instances returned in the current
            <see cref="T:Splunk.Client.AtomFeed"/> response.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomFeed.GeneratorVersion">
            <summary>
            Gets the version number of the generator that produced the current
            <see cref="T:Splunk.Client.AtomFeed"/> response.
            </summary>
            <value>
            The <see cref="T:Splunk.Client.AtomFeed"/> generator version number.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomFeed.Id">
            <summary>
            Gets the Splunk management URI for accessing the current
            <see cref="T:Splunk.Client.AtomFeed"/> response.
            </summary>
            <value>
            The Splunk management URI for accessing the current
            <see cref="T:Splunk.Client.AtomFeed"/> response.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomFeed.Links">
            <summary>
            Gets the links.
            </summary>
            <value>
            The links.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomFeed.Messages">
            <summary>
            Gets the list of info, warning, and error messages returned in the
            current <see cref="T:Splunk.Client.AtomFeed"/> response.
            </summary>
            <remarks>
            Not all responses from an endpoint produce messages.
            </remarks>
            <value>
            The list of info, warning, and error messages returned in the current
            <see cref="T:Splunk.Client.AtomFeed"/> response.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomFeed.Pagination">
            <summary>
            Gets the list of pagination attributes for the response to a GET
            operation.
            </summary>
            <value>
            Pagination attributes for the response to a GET operation.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomFeed.Title">
            <summary>
            Gets the human readable name of the current <see cref="T:Splunk.Client.AtomFeed"/>
            response.
            </summary>
            <remarks>
            This value is typically derived from the last segment of
            <see cref="P:Splunk.Client.AtomFeed.Id"/>.
            </remarks>
            <value>
            Human readable name of the current <see cref="T:Splunk.Client.AtomFeed"/> response.
            </value>
        </member>
        <member name="P:Splunk.Client.AtomFeed.Updated">
            <summary>
            Gets the date that the endpoint used to access the current
            <see cref="T:Splunk.Client.AtomFeed"/> response was implemented in Splunk.
            </summary>
            <value>
            The date that the endpoint used to access the current
            <see cref="T:Splunk.Client.AtomFeed"/> response was implemented in Splunk.
            </value>
        </member>
        <member name="T:Splunk.Client.AuthenticationFailureException">
            <summary>
            The exception that is thrown when invalid credentials are passed to
            <see cref="M:Splunk.Client.Service.LogOnAsync(System.String,System.String)"/> or a request fails because the session
            timed out.
            </summary>
            <seealso cref="T:Splunk.Client.RequestException"/>
        </member>
        <member name="T:Splunk.Client.RequestException">
            <summary>
            The expception that is thrown when a Splunk service request fails.
            </summary>
            <seealso cref="T:System.Exception"/>
        </member>
        <member name="M:Splunk.Client.RequestException.#ctor(System.Net.Http.HttpResponseMessage,System.Collections.ObjectModel.ReadOnlyCollection{Splunk.Client.Message})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.RequestException"/>
            class.
            </summary>
            <param name="message">
            An object representing an HTTP response message including the status code
            and data.
            </param>
            <param name="details">
            A sequence of <see cref="T:Splunk.Client.Message"/> instances detailing the cause of the
            <see cref="T:Splunk.Client.RequestException"/>.
            </param>
        </member>
        <member name="P:Splunk.Client.RequestException.Details">
            <summary>
            Gets the list of Splunk messages detailing the cause of the current
            <see cref="T:Splunk.Client.RequestException"/>.
            </summary>
            <remarks>
            This list may be empty. Splunk does not provide <c>Details</c> all of the
            time.
            </remarks>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Splunk.Client.RequestException.StatusCode">
            <summary>
            Gets the <see cref="T:System.Net.HttpStatusCode"/> for the current
            <see cref="T:Splunk.Client.RequestException"/>.
            </summary>
            <value>
            The status code.
            </value>
        </member>
        <member name="M:Splunk.Client.AuthenticationFailureException.#ctor(System.Net.Http.HttpResponseMessage,System.Collections.ObjectModel.ReadOnlyCollection{Splunk.Client.Message})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Splunk.Client.AuthenticationFailureException"/>
            class.
            </summary>
            <param name="message">
            An object representing an HTTP response message including the status code
            and data.
            </param>
            <param name="details">
            A sequence of <see cref="T:Splunk.Client.Message"/> instances detailing the cause of the
            <see cref="T:Splunk.Client.AuthenticationFailureException"/>.
            </param>
        </member>
        <member name="T:Splunk.Client.Awaiter`2">
            <summary>
            An awaiter.
            </summary>
            <typeparam name="TStream">
            Type of the stream.
            </typeparam>
            <typeparam name="TEvent">
            Type of the event.
            </typeparam>
            <seealso cref="T:System.Runtime.CompilerServices.INotifyCompletion"/>
        </member>
        <member name="M:Splunk.Client.Awaiter`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the Splunk.Client.Awaiter&lt;TStream,
            TEvent&gt; class.
            </summary>
            <param name="stream">
            The stream.
            </param>
        </member>
        <member name="M:Splunk.Client.Awaiter`2.Enqueue(`1)">
            <summary>
            Adds an object onto the end of this queue.
            </summary>
            <param name="result">
            
            </param>
        </member>
        <member name="M:Splunk.Client.Awaiter`2.ReadToEndAsync">
            <summary>
            Asynchronously reads to the end of <see cref="P:Splunk.Client.Awaiter`2.Stream"/>.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Awaiter`2.TryTake(`1@)">
            <summary>
            Attempts to take from the given data.
            </summary>
            <param name="result">
            
            </param>
            <returns>
            <c>true</c> if it succeeds, <c>false</c> if it fails.
            </returns>
        </member>
        <member name="M:Splunk.Client.Awaiter`2.GetAwaiter">
            <summary>
            Returns the current awaiter to the async state machine.
            </summary>
            <returns>
            An object reprsenting the current awaiter.
            </returns>
        </member>
        <member name="M:Splunk.Client.Awaiter`2.GetResult">
            <summary>
            Returns the next event to the async state machine.
            </summary>
            <returns>
            The current event or <c>null</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Awaiter`2.OnCompleted(System.Action)">
            <summary>
            Tells the current awaiter what method to invoke on completion.
            </summary>
            <param name="continuation">
            The method to call on completion.
            </param>
        </member>
        <member name="P:Splunk.Client.Awaiter`2.LastError">
            <summary>
            Gets the last error.
            </summary>
            <value>
            The last error.
            </value>
        </member>
        <member name="P:Splunk.Client.Awaiter`2.ReadCount">
            <summary>
            Gets the number of reads.
            </summary>
            <value>
            The number of reads.
            </value>
        </member>
        <member name="P:Splunk.Client.Awaiter`2.Stream">
            <summary>
            Gets the stream.
            </summary>
            <value>
            The stream.
            </value>
        </member>
        <member name="P:Splunk.Client.Awaiter`2.IsCompleted">
            <summary>
            Tells the state machine whether results are available.
            </summary>
            <value>
            <c>true</c> if this object is completed, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.BadRequestException">
            <summary>
            The exception that is thrown when a request is rejected by Splunk because
            it is poorly formed.
            </summary>
            <seealso cref="T:Splunk.Client.RequestException"/>
        </member>
        <member name="M:Splunk.Client.BadRequestException.#ctor(System.Net.Http.HttpResponseMessage,System.Collections.ObjectModel.ReadOnlyCollection{Splunk.Client.Message})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.BadRequestException"/>
            class.
            </summary>
            <param name="message">
            An object representing an HTTP response message including the status code
            and data.
            </param>
            <param name="details">
            A sequence of <see cref="T:Splunk.Client.Message"/> instances detailing the cause of the
            <see cref="T:Splunk.Client.BadRequestException"/>.
            </param>
        </member>
        <member name="T:Splunk.Client.BaseEntityContract`1">
            <summary>
            A base entity contract.
            </summary>
            <typeparam name="TResource">
            Type of the resource.
            </typeparam>
            <seealso cref="T:Splunk.Client.BaseEntity{TResource}"/>
        </member>
        <member name="M:Splunk.Client.BaseEntityContract`1.CreateSnapshot(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Creates a snapshot.
            </summary>
            <param name="entry">
            The entry.
            </param>
            <param name="generatorVersion">
            The generator version.
            </param>
        </member>
        <member name="M:Splunk.Client.BaseEntityContract`1.CreateSnapshot(Splunk.Client.AtomFeed)">
            <summary>
            Creates a snapshot.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="T:Splunk.Client.BooleanConverter">
            <summary>
            Provides a converter to convert strings to <see cref="T:System.Boolean"/> values.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.Boolean}"/>
        </member>
        <member name="F:Splunk.Client.BooleanConverter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.BooleanConverter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.BooleanConverter.Convert(System.Object)">
            <summary>
            Converts the string representation of an object to a
            <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.Boolean"/>
            value.
            </exception>
        </member>
        <member name="T:Splunk.Client.Configuration">
            <summary>
            Provides a class for accessing and updating Splunk configuration files.
            </summary>
            <remarks>
            Splunk's configuration information is stored in configuration files.
            These files are identified by their .conf extension and hold the
            information for different aspects of your Splunk configurations,
            including:
            <list type="bullet">
            <item><description>
                System settings
            </description></item>
            <item><description>
                Authentication and authorization information
            </description></item>
            <item><description>
                Index mappings and setting
            </description></item>
            <item><description>
                Deployment and cluster configurations
            </description></item>
            <item><description>
                Knowledge objects and saved searches
            </description></item>
            </list>
            <para>
            Most configuration files come packaged with your Splunk installation and
            can be found in <c>$SPLUNK_HOME/etc/default</c>.
            </para>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
                <a href="http://goo.gl/h9USqx">Admin Manual: About configuration
                files</a>.
            </description></item>
            <item><description>
                <a href="http://goo.gl/jNHaBr">Admin Manual: List of configuration
                files</a>.
            </description></item>
            <item><description>
                <a href="http://goo.gl/cTdaIH">REST API Reference: Accessing and
                updating Splunk configurations</a>.
            </description></item>
            <item><description>
                <a href="http://goo.gl/0ELhzV">REST API Reference: Configurations</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.EntityCollection{Splunk.Client.ConfigurationStanza,Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IConfiguration{Splunk.Client.ConfigurationStanza}"/>
        </member>
        <member name="T:Splunk.Client.IConfiguration`1">
            <summary>
            Provides an operational interface for accessing and updating Splunk
            configuration files.
            </summary>
            <typeparam name="TConfigurationStanza">
            Type of the configuration stanza.
            </typeparam>
            <seealso cref="T:IEntityCollection{TConfigurationStanza"/>
        </member>
        <member name="M:Splunk.Client.IConfiguration`1.CreateAsync(System.String)">
            <summary>
            Asynchronously creates a new configuration stanza.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/jae44k">POST
            properties/{file_name}</a> endpoint to create the configuration stanza
            identified by <paramref name="stanzaName"/>.
            </remarks>
            <param name="stanzaName">
            Name of the configuration stanza to create.
            </param>
            <returns>
            The new asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfiguration`1.GetSettingAsync(System.String,System.String)">
            <summary>
            Asynchronously retrieves a setting value from a configuration stanza.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/cqT50u">GET
            properties/{file_name}/{stanza_name}/{key_name}</a> endpoint to construct
            the setting value it returns.
            </remarks>
            <param name="stanzaName">
            Name of the configuration stanza.
            </param>
            <param name="keyName">
            Name of the setting to retrieve.
            </param>
            <returns>
            The value of the setting identified by <paramref name="keyName"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfiguration`1.RemoveAsync(System.String)">
            <summary>
            Asynchronously removes a configuration stanza.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/uMzr3F">DELETE configs/conf-
            {file}/{name}</a> endpoint to remove <paramref name="stanzaName"/>.
            </remarks>
            <param name="stanzaName">
            Name of the configuration stanza to remove.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfiguration`1.UpdateAsync(System.String,Splunk.Client.Argument[])">
            <summary>
            Asynchronously updates a configuration stanza with new or revised
            settings.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/dpbuhQ">DELETE configs/conf-
            {file}/{name}</a> endpoint to remove the configuration stanza identified
            by <paramref name="stanzaName"/>.
            </remarks>
            <param name="stanzaName">
            Name of the configuration stanza to update.
            </param>
            <param name="settings">
            The new or updated settings.
            </param>
            <returns>
            An object representing the updated configuration stanza.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfiguration`1.UpdateSettingAsync(System.String,System.String,System.Object)">
            <summary>
            Asynchronously updates a setting within a configuration stanza.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/w742jw">POST
            properties/{file_name}/{stanza_name}</a> endpoint to update the setting
            identified by <paramref name="stanzaName"/> and
            <paramref name="keyName"/>.
            </remarks>
            <param name="stanzaName">
            Name of the configuration stanza containing the setting.
            </param>
            <param name="keyName">
            Name of the setting.
            </param>
            <param name="value">
            A value for <paramref name="keyName"/>.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfiguration`1.UpdateSettingAsync(System.String,System.String,System.String)">
            <inheritdoc cref="M:Splunk.Client.IConfiguration`1.UpdateSettingAsync(System.String,System.String,System.Object)"/>
        </member>
        <member name="M:Splunk.Client.Configuration.#ctor(Splunk.Client.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Configuration"/> class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <param name="fileName">
            Name of a configuration file.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName"/> is <c>null</c> or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Configuration.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Configuration"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="fileName">
            Name of the configuration file to be represented by the current instance.
            </param>
        </member>
        <member name="M:Splunk.Client.Configuration.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Configuration"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.Configuration.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.Configuration"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Configuration.CreateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Configuration.CreateAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Configuration.GetSettingAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Configuration.RemoveAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Configuration.UpdateAsync(System.String,Splunk.Client.Argument[])">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Configuration.UpdateSettingAsync(System.String,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Configuration.UpdateSettingAsync(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.ConfigurationCollection">
            <summary>
            Provides an object representation of a collection of Splunk configuration
            files.
            </summary>
            <seealso cref="T:Splunk.Client.EntityCollection{Splunk.Client.Configuration,Splunk.Client.ResourceCollection}"/>
            <seealso cref="T:Splunk.Client.IConfigurationCollection{Splunk.Client.Configuration,Splunk.Client.ConfigurationStanza}"/>
        </member>
        <member name="T:Splunk.Client.IConfigurationCollection`2">
            <summary>
            Provides an operational interface over a collection of Splunk
            configuration files.
            </summary>
            <typeparam name="TConfiguration">
            Type of the configuration.
            </typeparam>
            <typeparam name="TConfigurationStanza">
            Type of the configuration stanza.
            </typeparam>
            <seealso cref="T:IEntityCollection{TConfiguration"/>
        </member>
        <member name="M:Splunk.Client.IConfigurationCollection`2.CreateAsync(System.String)">
            <summary>
            Asynchronously creates a configuration file.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/CBWes7">POST properties</a>
            endpoint to create the configuration stanza represented by the object it
            returns.
            </remarks>
            <param name="fileName">
            The name of a configuration file.
            </param>
            <returns>
            The new asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationCollection`2.GetAsync(System.String,System.String)">
            <summary>
            Asynchronously retrieves a configuration stanza by name.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/sM63fa">GET
            properties/{file_name}/{stanza_name}</a> endpoint to construct the
            <see cref="T:Splunk.Client.ConfigurationStanza"/> it returns.
            </remarks>
            <param name="fileName">
            The name of a configuration file.
            </param>
            <param name="stanzaName">
            The name of a stanza within the configuration file identifeied by
            <paramref name="fileName"/>.
            </param>
            <returns>
            An object representing the configuration stanza identified by
            <paramref name="fileName"/> and <paramref name="stanzaName"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.#ctor(Splunk.Client.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ConfigurationCollection"/>
            class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ConfigurationCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ConfigurationCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ConfigurationCollection"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.CreateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously creates a configuration file.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/CBWes7">POST properties</a>
            endpoint to create the configuration file represented by this instance.
            </remarks>
            <param name="arguments">
            A sequence of arguments to the configuration endpoint.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.CreateAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.GetAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.GetSliceAsync(Splunk.Client.Argument[])">
            <summary>
            Unsupported. This method is not supported by the
            <see cref="T:Splunk.Client.ConfigurationCollection"/> class because it is not supported
            by the <a href="http://goo.gl/Unj6fs">Splunk properties endpoint</a>.
            </summary>
            <param name="arguments">
            A variable-length parameters list containing arguments.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.ConfigurationCollection.GetSliceAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Unsupported. This method is not supported by the
            <see cref="T:Splunk.Client.ConfigurationCollection"/> class because it is not supported
            by the <a href="http://goo.gl/Unj6fs">Splunk properties endpoint</a>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Thrown when the requested operation is not supported.
            </exception>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="F:Splunk.Client.ConfigurationCollection.ClassResourceName">
            <summary>
            Name of the class resource.
            </summary>
        </member>
        <member name="F:Splunk.Client.ConfigurationCollection.Configs">
            <summary>
            The configs.
            </summary>
        </member>
        <member name="T:Splunk.Client.ConfigurationSetting">
            <summary>
            Provides an object representation of a Splunk configuration setting.
            </summary>
            <seealso cref="T:Splunk.Client.Resource"/>
            <seealso cref="T:Splunk.Client.IConfigurationSetting"/>
        </member>
        <member name="T:Splunk.Client.IConfigurationSetting">
            <summary>
            Interface for configuration setting.
            </summary>
            <seealso cref="T:IBaseResource"/>
        </member>
        <member name="P:Splunk.Client.IConfigurationSetting.Links">
            <summary>
            Gets the links.
            </summary>
            <value>
            The links.
            </value>
        </member>
        <member name="P:Splunk.Client.IConfigurationSetting.Value">
            <summary>
            Gets the cached value of the current <see cref="T:Splunk.Client.ConfigurationSetting"/>.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:Splunk.Client.ConfigurationSetting.#ctor(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ConfigurationSetting"/>
            class.
            </summary>
            <param name="entry">
            An object representing a Splunk atom entry response.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            feed containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.ConfigurationSetting.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ConfigurationSetting"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.ConfigurationSetting.#ctor(Splunk.Client.BaseResource)">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ConfigurationSetting"/> class.
            </summary>
            <param name="resource">
            An object representing a configuration setting.
            </param>
        </member>
        <member name="P:Splunk.Client.ConfigurationSetting.Links">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ConfigurationSetting.Value">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.ConfigurationStanza">
            <summary>
            Provides an object representation of a Splunk configuration stanza.
            </summary>
            <seealso cref="T:Splunk.Client.Entity{Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IConfigurationStanza"/>
        </member>
        <member name="T:Splunk.Client.IConfigurationStanza">
            <summary>
            Interface for configuration stanza.
            </summary>
            <seealso cref="T:IEntity"/>
            <seealso cref="T:IReadOnlyList{ConfigurationSetting}"/>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanza.GetAsync(System.String)">
            <summary>
            Asynchronously retrieves a configuration setting value from the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/cqT50u">GET
            properties/{file_name}/{stanza_name}/{key_Name}</a> endpoint to construct
            the <see cref="T:Splunk.Client.ConfigurationSetting"/> identified by
            <paramref name="keyName"/>.
            </remarks>
            <param name="keyName">
            The name of a configuration setting.
            </param>
            <returns>
            The string value of <paramref name="keyName"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanza.UpdateAsync(System.String,System.Object)">
            <summary>
            Asynchronously updates the value of an existing setting in the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/sSzcMy">POST
            properties/{file_name}/{stanza_name}/{key_Name}</a> endpoint to update
            the <see cref="T:Splunk.Client.ConfigurationSetting"/> identified by
            <paramref name="keyName"/>.
            </remarks>
            <param name="keyName">
            The name of a configuration setting in the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </param>
            <param name="value">
            A new value for the setting identified by <paramref name="keyName"/>.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanza.UpdateAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.IConfigurationStanza.Author">
            <summary>
            Gets the author of the current <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </summary>
            <value>
            The author.
            </value>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.#ctor(Splunk.Client.Service,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ConfigurationStanza"/>
            class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <param name="fileName">
            Name of a configuration file.
            </param>
            <param name="stanzaName">
            Name of a stanza within <paramref name="fileName"/> containing the
            configuration stanza to be represented by the current instance.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName"/>, or <paramref name="stanzaName"/> are
            <c>null</c> or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ConfigurationStanza"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="fileName">
            Name of a configuration file.
            </param>
            <param name="stanzaName">
            Name of a stanza within <paramref name="fileName"/> containing the
            configuration stanza to be represented by the current instance.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName"/> or <paramref name="stanzaName"/> are
            <c>null</c> or <paramref name="ns"/> is non-specific.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ConfigurationStanza"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ConfigurationStanza"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code. 
            </remarks>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.GetAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </summary>
            <returns>
            An object for iterating through the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.RemoveAsync">
            <summary>
            Asynchronously removes the current <see cref="T:Splunk.Client.ConfigurationStanza"/>
            from its configuration file.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/79v7H3">DELETE configs/conf-
            {file}/{name}</a> endpoint to remove the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.UpdateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.UpdateAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.UpdateAsync(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ConfigurationStanza.CreateSnapshot(Splunk.Client.AtomFeed)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ConfigurationStanza.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ConfigurationStanza.Count">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ConfigurationStanza.Author">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.Context">
            <summary>
            Provides a class for sending HTTP requests and receiving HTTP responses
            from a Splunk server.
            </summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="M:Splunk.Client.Context.#ctor(Splunk.Client.Scheme,System.String,System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Context"/> class with a
            protocol, host, and port number.
            </summary>
            <param name="scheme">
            The <see cref="P:Splunk.Client.Context.Scheme"/> used to communicate with <see cref="P:Splunk.Client.Context.Host"/>
            </param>
            <param name="host">
            The DNS name of a Splunk server instance.
            </param>
            <param name="port">
            The port number used to communicate with <see cref="P:Splunk.Client.Context.Host"/>.
            </param>
            <param name="timeout">
            The timeout.
            </param>
            <exception name="ArgumentException">
            <paramref name="scheme"/> is invalid, <paramref name="host"/> is
            <c>null</c> or empty, or <paramref name="port"/> is less than zero
            or greater than <c>65535</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Context.#ctor(Splunk.Client.Scheme,System.String,System.Int32,System.TimeSpan,System.Net.Http.HttpMessageHandler,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Context"/> class with a
            protocol, host, port number, and optional message handler.
            </summary>
            <param name="scheme">
            The <see cref="P:Splunk.Client.Context.Scheme"/> used to communicate with <see cref="P:Splunk.Client.Context.Host"/>.
            </param>
            <param name="host">
            The DNS name of a Splunk server instance.
            </param>
            <param name="port">
            The port number used to communicate with <see cref="P:Splunk.Client.Context.Host"/>.
            </param>
            <param name="timeout">
            The timeout.
            </param>
            <param name="handler">
            The <see cref="T:System.Net.Http.HttpMessageHandler"/> responsible for processing the HTTP
            response messages.
            </param>
            <param name="disposeHandler">
            <c>true</c> if the inner handler should be disposed of by Dispose,
            <c>false</c> if you intend to reuse the inner handler.
            </param>
            <exception name="ArgumentException">
            <paramref name="scheme"/> is invalid, <paramref name="host"/> is
            <c>null</c> or empty, or <paramref name="port"/> is less than zero
            or greater than <c>65535</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Context.Dispose">
            <summary>
            Releases all disposable resources used by the current
            <see cref="T:Splunk.Client.Context"/>.
            </summary>
            <remarks>
            Do not override this method. Override <see cref="M:Splunk.Client.Context.Dispose(System.Boolean)"/>
            instead.
            </remarks>
            <seealso cref="M:System.IDisposable.Dispose()"/>
        </member>
        <member name="M:Splunk.Client.Context.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Splunk.Client.Context"/>.
            </summary>
            <remarks>
            Subclasses should implement the disposable pattern as follows:
            <list type="bullet">
            <item><description>
              Override this method and call it from the override.
            </description></item>
            <item><description>
              Provide a finalizer, if needed, and call this method from it.
            </description></item>
            <item><description>
              To help ensure that resources are always cleaned up appropriately,
              ensure that the override is callable multiple times without throwing an
              exception.
            </description></item>
            </list>
            There is no performance benefit in overriding this method on types that
            use only managed resources (such as arrays) because they are
            automatically reclaimed by the garbage collector. See
            <a href="http://goo.gl/VPIovn">Implementing a Dispose Method</a>.
            </remarks>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release
            only unmanaged resources.
            </param>
        </member>
        <member name="M:Splunk.Client.Context.DeleteAsync(Splunk.Client.Namespace,Splunk.Client.ResourceName,System.Collections.Generic.IEnumerable{Splunk.Client.Argument}[])">
            <summary>
            Sends a DELETE request as an asynchronous operation.
            </summary>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="resource">
            
            </param>
            <param name="argumentSets">
            
            </param>
            <returns>
            The response to the DELETE request.
            </returns>
        </member>
        <member name="M:Splunk.Client.Context.GetAsync(Splunk.Client.Namespace,Splunk.Client.ResourceName,System.Collections.Generic.IEnumerable{Splunk.Client.Argument}[])">
            <summary>
            Sends a GET request as an asynchronous operation.
            </summary>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="resource">
            
            </param>
            <param name="argumentSets">
            
            </param>
            <returns>
            The response to the GET request.
            </returns>
        </member>
        <member name="M:Splunk.Client.Context.GetAsync(Splunk.Client.Namespace,Splunk.Client.ResourceName,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{Splunk.Client.Argument}[])">
            <summary>
            Sends a GET request as an asynchronous operation.
            </summary>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="resourceName">
            
            </param>
            <param name="token">
            
            </param>
            <param name="argumentSets">
            
            </param>
            <returns>
            The response to the GET request.
            </returns>
        </member>
        <member name="M:Splunk.Client.Context.PostAsync(Splunk.Client.Namespace,Splunk.Client.ResourceName,System.Collections.Generic.IEnumerable{Splunk.Client.Argument}[])">
            <summary>
            Sends a POST request as an asynchronous operation.
            </summary>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="resource">
            
            </param>
            <param name="argumentSets">
            
            </param>
            <returns>
            The response to the GET request.
            </returns>
        </member>
        <member name="M:Splunk.Client.Context.PostAsync(Splunk.Client.Namespace,Splunk.Client.ResourceName,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{Splunk.Client.Argument}[])">
            <summary>
            Sends a POST request as an asynchronous operation.
            </summary>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="resource">
            
            </param>
            <param name="content">
            
            </param>
            <param name="argumentSets">
            
            </param>
            <returns>
            The response to the GET request.
            </returns>
        </member>
        <member name="M:Splunk.Client.Context.ToString">
            <summary>
            Converts the current <see cref="T:Splunk.Client.Context"/> to its string representation.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Context"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="P:Splunk.Client.Context.Host">
            <summary>
            Gets the Splunk host name associated with the current
            <see cref="T:Splunk.Client.Context"/>.
            </summary>
            <value>
            A Splunk host name.
            </value>
        </member>
        <member name="P:Splunk.Client.Context.Port">
            <summary>
            Gets the management port number used to communicate with
            <see cref="P:Splunk.Client.Context.Host"/>
            </summary>
            <value>
            A Splunk management port number.
            </value>
        </member>
        <member name="P:Splunk.Client.Context.Scheme">
            <summary>
            Gets the scheme used to communicate with <see cref="P:Splunk.Client.Context.Host"/> on
            <see cref="P:Splunk.Client.Context.Port"/>.
            </summary>
            <value>
            The scheme used to communicate with <see cref="P:Splunk.Client.Context.Host"/> on
            <see cref="P:Splunk.Client.Context.Port"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.Context.SessionKey">
            <summary>
            Gets or sets the session key used by the current <see cref="T:Splunk.Client.Context"/>.
            </summary>
            <remarks>
            This value is <c>null</c> until it is set.
            </remarks>
            <value>
            The session key used by the current <see cref="T:Splunk.Client.Context"/> or <c>
            null</c>.
            </value>
        </member>
        <member name="T:Splunk.Client.CustomJobArgs">
            <summary>
            Provides custom arguments to a <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <seealso cref="T:Splunk.Client.ArgumentSet"/>
        </member>
        <member name="M:Splunk.Client.CustomJobArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.CustomJobArgs"/>
            class.
            </summary>
        </member>
        <member name="M:Splunk.Client.CustomJobArgs.#ctor(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.CustomJobArgs"/>
            class from a collection of <see cref="T:Splunk.Client.Argument"/> values.
            </summary>
            <param name="collection">
            The collection.
            </param>
        </member>
        <member name="T:Splunk.Client.DateTimeConverter">
            <summary>
            Provides a converter to convert strings to <see cref="T:System.DateTime"/>
            values.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.DateTime}"/>
        </member>
        <member name="F:Splunk.Client.DateTimeConverter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.DateTimeConverter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.DateTimeConverter.Convert(System.Object)">
            <summary>
            Converts the string representation of the <paramref name="input"/>
            object to a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.DateTime"/>
            value.
            </exception>
        </member>
        <member name="T:Splunk.Client.DispatchState">
            <summary>
            Specifies the state of a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
        </member>
        <member name="F:Splunk.Client.DispatchState.None">
            <summary>
            Specifies that a <see cref="T:Splunk.Client.Job"/> has not yet been created.
            </summary>
        </member>
        <member name="F:Splunk.Client.DispatchState.Queued">
            <summary>
            Specifies that a <see cref="T:Splunk.Client.Job"/> has been queued by the dispatcher.
            </summary>
        </member>
        <member name="F:Splunk.Client.DispatchState.Parsing">
            <summary>
            Specifies that a <see cref="T:Splunk.Client.Job"/> is being parsed.
            </summary>
        </member>
        <member name="F:Splunk.Client.DispatchState.Running">
            <summary>
            Specifies that a <see cref="T:Splunk.Client.Job"/> is running.
            </summary>
        </member>
        <member name="F:Splunk.Client.DispatchState.Finalizing">
            <summary>
            Specifies that a <see cref="T:Splunk.Client.Job"/> is finalizing.
            </summary>
        </member>
        <member name="F:Splunk.Client.DispatchState.Done">
            <summary>
            Specifies that a <see cref="T:Splunk.Client.Job"/> completed.
            </summary>
        </member>
        <member name="F:Splunk.Client.DispatchState.Failed">
            <summary>
            Specifies that a <see cref="T:Splunk.Client.Job"/> terminated due to a fatal error.
            </summary>
        </member>
        <member name="F:Splunk.Client.DispatchState.Paused">
            <summary>
            Specifies that a <see cref="T:Splunk.Client.Job"/> is paused.
            </summary>
        </member>
        <member name="T:Splunk.Client.DoubleConverter">
            <summary>
            Provides a converter to convert strings to <see cref="T:System.Double"/> values.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.Double}"/>
        </member>
        <member name="F:Splunk.Client.DoubleConverter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.DoubleConverter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.DoubleConverter.Convert(System.Object)">
            <summary>
            Converts the string representation of the <paramref name="input"/>
            object to a <see cref="T:System.Double"/> value.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.Double"/>
            value.
            </exception>
        </member>
        <member name="T:Splunk.Client.Eai">
            <summary>
            Provides a class that represents a Splunk server's Extensible
            Administration Interface.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.Eai}"/>
        </member>
        <member name="M:Splunk.Client.Eai.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Eai"/> class.
            </summary>
        </member>
        <member name="P:Splunk.Client.Eai.Acl">
            <summary>
            Gets the access control list properties.
            </summary>
            <value>
            The access control list properties.
            </value>
        </member>
        <member name="P:Splunk.Client.Eai.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="T:Splunk.Client.EaiAcl">
            <summary>
            Provides a class that represents a Splunk ACL.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.EaiAcl}"/>
        </member>
        <member name="M:Splunk.Client.EaiAcl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.EaiAcl"/> class.
            </summary>
        </member>
        <member name="P:Splunk.Client.EaiAcl.App">
            <summary>
            Gets the application.
            </summary>
            <value>
            The application.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAcl.CanList">
            <summary>
            Gets a value indicating whether we can list.
            </summary>
            <value>
            <c>true</c> if we can list, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAcl.CanWrite">
            <summary>
            Gets a value indicating whether we can write.
            </summary>
            <value>
            <c>true</c> if we can write, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAcl.Modifiable">
            <summary>
            Gets a value indicating whether this object is modifiable.
            </summary>
            <value>
            <c>true</c> if modifiable, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAcl.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAcl.Permissions">
            <summary>
            Gets the permissions.
            </summary>
            <value>
            The permissions.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAcl.Removable">
            <summary>
            Gets a value indicating whether this object is removable.
            </summary>
            <value>
            <c>true</c> if removable, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAcl.Sharing">
            <summary>
            Gets the sharing.
            </summary>
            <value>
            The sharing.
            </value>
        </member>
        <member name="T:Splunk.Client.EaiAttributes">
            <summary>
            Provides a class that represents a Splunk ACL.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.EaiAttributes}"/>
        </member>
        <member name="M:Splunk.Client.EaiAttributes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.EaiAttributes"/> class.
            </summary>
        </member>
        <member name="P:Splunk.Client.EaiAttributes.OptionalFields">
            <summary>
            Gets the optional fields.
            </summary>
            <value>
            The optional fields.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAttributes.RequiredFields">
            <summary>
            Gets the required fields.
            </summary>
            <value>
            The required fields.
            </value>
        </member>
        <member name="P:Splunk.Client.EaiAttributes.WildcardFields">
            <summary>
            Gets the wildcard fields.
            </summary>
            <value>
            The wildcard fields.
            </value>
        </member>
        <member name="T:Splunk.Client.EmailFormat">
            <summary>
            Specifies the format of text in an e-mail.
            </summary>
            <remarks>
            This value also applies to any attachments.
            </remarks>
        </member>
        <member name="F:Splunk.Client.EmailFormat.Csv">
            <summary>
            Specifies that an e-mail is formatted as comma-separated values.
            </summary>
        </member>
        <member name="F:Splunk.Client.EmailFormat.Html">
            <summary>
            Specifies that an e-mail is formatted as HTML text.
            </summary>
        </member>
        <member name="F:Splunk.Client.EmailFormat.Plain">
            <summary>
            Specifies that an e-mail is formatted as plain text.
            </summary>
        </member>
        <member name="F:Splunk.Client.EmailFormat.Raw">
            <summary>
            Specifies that an e-mail contains raw data.
            </summary>
        </member>
        <member name="T:Splunk.Client.EnumConverter`1">
            <summary>
            Provides a converter to convert strings to <see cref="T:System.Enum"/> values.
            </summary>
            <typeparam name="TEnum">
            Type of the <see cref="T:System.Enum"/> value to convert.
            </typeparam>
            <seealso cref="T:Splunk.Client.ValueConverter{TEnum}"/>
        </member>
        <member name="F:Splunk.Client.EnumConverter`1.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.EnumConverter`1"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.EnumConverter`1.Convert(System.Object)">
            <summary>
            Converts the string representation of the <paramref name="input"/>
            object to a <typeparamref name="TEnum"/> value.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a
            <typeparamref name="TEnum"/>
            value.
            </exception>
        </member>
        <member name="T:Splunk.Client.ExecutionMode">
            <summary>
            Specifies the type of a Splunk search <see cref="T:Splunk.Client.Job"/>.
            </summary>
        </member>
        <member name="F:Splunk.Client.ExecutionMode.Normal">
            <summary>
            Specifies an asynchronous <see cref="T:Splunk.Client.Job"/>.
            </summary> 
            <remarks>
            A Search ID (SID) is returned as soon as the job starts. In this
            case you must poll back for results. This is the default.
            </remarks>
        </member>
        <member name="F:Splunk.Client.ExecutionMode.Blocking">
            <summary>
            Specifies that a Search ID (SID) should be returned when the <see cref="T:Splunk.Client.Job"/> completes, not before then.
            </summary>
        </member>
        <member name="F:Splunk.Client.ExecutionMode.OneShot">
            <summary>
            Specifies that a Search ID (SID) should be returned when the 
            <see cref="T:Splunk.Client.Job"/> is complete.
            </summary>
        </member>
        <member name="T:Splunk.Client.GuidConverter">
            <summary>
            Provides a converter to convert strings to <see cref="T:System.Guid"/> values.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.Guid}"/>
        </member>
        <member name="F:Splunk.Client.GuidConverter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.GuidConverter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.GuidConverter.Convert(System.Object)">
            <summary>
            Converts the string representation of the <paramref name="input"/>
            object to a <see cref="T:System.Guid"/>.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.Guid"/>
            value.
            </exception>
        </member>
        <member name="T:Splunk.Client.IApplicationContract">
            <summary>
            An application contract.
            </summary>
            <seealso cref="T:Splunk.Client.IApplication"/>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.DisableAsync">
            <summary>
            Asynchronously disables the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
            <seealso cref="M:Splunk.Client.IApplication.DisableAsync()"/>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.EnableAsync">
            <summary>
            Asynchronously enables the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
            <seealso cref="M:Splunk.Client.IApplication.EnableAsync()"/>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.GetAsync">
            <summary>
            Asynchronously retrieves a fresh copy of the current <see cref="T:Splunk.Client.Application"/> that contains all changes to it since it was last 
            retrieved.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.GetSetupInfoAsync">
            <summary>
            Asynchronously retrieves setup information for the current
            <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <returns>
            An object containing setup information for the current
            <see cref="T:Splunk.Client.Application"/>.
            </returns>
            <seealso cref="M:Splunk.Client.IApplication.GetSetupInfoAsync()"/>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.GetUpdateInfoAsync">
            <summary>
            Asynchronously gets update information for the current
            <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <returns>
            An object containing update information for the current
            <see cref="T:Splunk.Client.Application"/>.
            </returns>
            <seealso cref="M:Splunk.Client.IApplication.GetUpdateInfoAsync()"/>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.PackageAsync">
            <summary>
            Asynchronously archives the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <returns>
            An object containing information about the newly created archive.
            </returns>
            <seealso cref="M:Splunk.Client.IApplication.PackageAsync()"/>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.RemoveAsync">
            <summary>
            Removes the asynchronous.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.UpdateAsync(Splunk.Client.Argument[])">
            <summary>
            Asynchronously updates the attributes of the application represented by
            the current instance.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.UpdateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously updates the attributes of the application represented by
            the current instance.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.IApplicationContract.UpdateAsync(Splunk.Client.ApplicationAttributes,System.Boolean)">
            <summary>
            Asynchronously updates the attributes of the application represented by
            the current instance.
            </summary>
            <param name="attributes">
            New attributes for the current <see cref="T:Splunk.Client.Application"/> instance.
            </param>
            <param name="checkForUpdates">
            A value of <c>true</c>, if Splunk should check Splunkbase for updates to
            the current <see cref="T:Splunk.Client.Application"/> instance.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
            <seealso cref="M:Splunk.Client.IApplication.UpdateAsync(ApplicationAttributes,bool)"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.ApplicationAuthor">
            <summary>
            Gets the application author.
            </summary>
            <value>
            The application author.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.ApplicationAuthor"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Author">
            <summary>
            Gets the username of the splunk.com account for publishing the current
            <see cref="T:Splunk.Client.Application"/> to Splunkbase.
            </summary>
            <value>
            The author.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Author"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.CheckForUpdates">
            <summary>
            Gets a value that indicates whether Splunk should check Splunkbase for
            updates to the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <value>
            <c>true</c> if check for updates, <c>false</c> if not.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.CheckForUpdates"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Configured">
            <summary>
            Gets a value that indicates whether custom setup has been performed on
            the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <value>
            <c>true</c> if configured, <c>false</c> if not.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Configured"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Description">
            <summary>
            Gets the short explanatory string displayed underneath the title of the
            current <see cref="T:Splunk.Client.Application"/> in Launcher.
            </summary>
            <value>
            The description.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Description"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Disabled">
            <summary>
            Gets a value indicating whether the current <see cref="T:Splunk.Client.Application"/>is
            disabled.
            </summary>
            <value>
            <c>true</c> if disabled, <c>false</c> if not.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Disabled"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Eai">
            <summary>
            Gets the extensible administration interface properties for the current
            <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Eai"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Label">
            <summary>
            Gets the name of the current <see cref="T:Splunk.Client.Application"/> for display in the
            Splunk GUI and Launcher.
            </summary>
            <value>
            The label.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Label"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Links">
            <summary>
            Gets the links.
            </summary>
            <value>
            The links.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Links"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Refresh">
            <summary>
            Gets a value that indicates whether objects contained in the current
            <see cref="T:Splunk.Client.Application"/> should be reloaded.
            </summary>
            <value>
            <c>true</c> if refresh, <c>false</c> if not.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Refresh"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.StateChangeRequiresRestart">
            <summary>
            Gets a value that indicates whether changing the state of the current
            <see cref="T:Splunk.Client.Application"/> always requires restarting Splunk.
            </summary>
            <value>
            <c>true</c> if state change requires restart, <c>false</c> if not.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.StateChangeRequiresRestart"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Version">
            <summary>
            Gets the version string for the current <see cref="T:Splunk.Client.Application"/>.
            </summary>
            <value>
            The version.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Version"/>
        </member>
        <member name="P:Splunk.Client.IApplicationContract.Visible">
            <summary>
            Gets a value that indicates if the current <see cref="T:Splunk.Client.Application"/>
            is visible and navigable from Splunk Web.
            </summary>
            <value>
            <c>true</c> if visible, <c>false</c> if not.
            </value>
            <seealso cref="P:Splunk.Client.IApplication.Visible"/>
        </member>
        <member name="T:Splunk.Client.IApplicationCollectionContract`1">
            <summary>
            An application collection contract.
            </summary>
            <typeparam name="TApplication">
            Type of the application.
            </typeparam>
            <seealso cref="T:Splunk.Client.IApplicationCollection{TApplication}"/>
        </member>
        <member name="P:Splunk.Client.IApplicationCollectionContract`1.Item(System.Int32)">
            <summary>
            Indexer to get items within this collection using array index syntax.
            </summary>
            <param name="index">
            Zero-based index of the entry to access.
            </param>
            <returns>
            The indexed item.
            </returns>
        </member>
        <member name="P:Splunk.Client.IApplicationCollectionContract`1.Count">
            <summary>
            Gets the number of. 
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationCollectionContract`1.Messages">
            <summary>
            Gets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Splunk.Client.IApplicationCollectionContract`1.Pagination">
            <summary>
            Gets the pagination.
            </summary>
            <value>
            The pagination.
            </value>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.CreateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Creates the asynchronous.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            The new asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.CreateAsync(System.String)">
            <summary>
            Creates the asynchronous.
            </summary>
            <param name="stanzaName">
            Name of the stanza.
            </param>
            <returns>
            The new asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.GetAsync(System.String)">
            <summary>
            Asynchronously retrieves a configuration stanza by name.
            </summary>
            <param name="name">
            Name of the configuration stanza to retrieve.
            </param>
            <returns>
            The configuration stanza retrieved.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.GetAllAsync">
            <summary>
            Gets all asynchronously.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>
            The enumerator.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.GetSettingAsync(System.String,System.String)">
            <summary>
            Gets setting asynchronous.
            </summary>
            <param name="stanzaName">
            Name of the stanza.
            </param>
            <param name="keyName">
            Name of the key.
            </param>
            <returns>
            The setting asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.GetSliceAsync(Splunk.Client.Argument[])">
            <summary>
            Gets slice asynchronous.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.GetSliceAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Gets slice asynchronous.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.ReloadAsync">
            <summary>
            Reload asynchronous.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.RemoveAsync(System.String)">
            <summary>
            Removes the asynchronous described by stanzaName.
            </summary>
            <param name="stanzaName">
            Name of the stanza.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.UpdateAsync(System.String,Splunk.Client.Argument[])">
            <summary>
            Updates the asynchronous.
            </summary>
            <param name="stanzaName">
            Name of the stanza.
            </param>
            <param name="settings">
            A variable-length parameters list containing settings.
            </param>
            <returns>
            An object representing the updated configuration stanza.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.UpdateSettingAsync(System.String,System.String,System.Object)">
            <summary>
            Updates the setting asynchronous.
            </summary>
            <param name="stanzaName">
            Name of the stanza.
            </param>
            <param name="keyName">
            Name of the key.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationContract`1.UpdateSettingAsync(System.String,System.String,System.String)">
            <summary>
            Updates the setting asynchronous.
            </summary>
            <param name="stanzaName">
            Name of the stanza.
            </param>
            <param name="keyName">
            Name of the key.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.IConfigurationContract`1.Item(System.Int32)">
            <summary>
            Indexer to get items within this collection using array index syntax.
            </summary>
            <param name="index">
            Zero-based index of the entry to access.
            </param>
            <returns>
            The indexed item.
            </returns>
        </member>
        <member name="P:Splunk.Client.IConfigurationContract`1.Count">
            <summary>
            Gets the number of. 
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="T:Splunk.Client.IConfigurationStanzaContract">
            <summary>
            A configuration stanza contract.
            </summary>
            <seealso cref="T:Splunk.Client.IConfigurationStanza"/>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanzaContract.GetAsync">
            <summary>
            Asynchronously retrieves a fresh copy of the current <see cref="T:Splunk.Client.ConfigurationStanza"/> that contains all changes to it since it
            was last retrieved.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanzaContract.UpdateAsync(Splunk.Client.Argument[])">
            <summary>
            Asynchronously updates the value of an existing setting in the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanzaContract.GetAsync(System.String)">
            <summary>
            Asynchronously retrieves a configuration setting value from the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>
            </summary>
            <param name="keyName">
            The name of a configuration setting.
            </param>
            <returns>
            The string value of <paramref name="keyName"/>.
            </returns>
            <seealso cref="M:Splunk.Client.IConfigurationStanza.GetAsync(string)"/>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanzaContract.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>
            The enumerator.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanzaContract.RemoveAsync">
            <summary>
            Removes the asynchronous.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanzaContract.UpdateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously updates the value of an existing setting in the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanzaContract.UpdateAsync(System.String,System.Object)">
            <summary>
            Asynchronously updates the value of an existing setting in the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </summary>
            <param name="keyName">
            The name of a configuration setting in the current
            <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </param>
            <param name="value">
            A new value for the setting identified by <paramref name="keyName"/>.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
            <seealso cref="M:Splunk.Client.IConfigurationStanza.UpdateAsync(string,object)"/>
        </member>
        <member name="M:Splunk.Client.IConfigurationStanzaContract.UpdateAsync(System.String,System.String)">
            <summary>
            Updates the asynchronous.
            </summary>
            <param name="keyName">
            Name of the key.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
            <seealso cref="M:Splunk.Client.IConfigurationStanza.UpdateAsync(string,string)"/>
            <inheritdoc cref="M:Splunk.Client.IConfigurationStanza.UpdateAsync(System.String,System.String)"/>
        </member>
        <member name="P:Splunk.Client.IConfigurationStanzaContract.Item(System.Int32)">
            <summary>
            Indexer to get items within this collection using array index syntax.
            </summary>
            <param name="index">
            Zero-based index of the entry to access.
            </param>
            <returns>
            The indexed item.
            </returns>
        </member>
        <member name="P:Splunk.Client.IConfigurationStanzaContract.Count">
            <summary>
            Gets the number of. 
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Splunk.Client.IConfigurationStanzaContract.Author">
            <summary>
            Gets the author of the current <see cref="T:Splunk.Client.ConfigurationStanza"/>.
            </summary>
            <value>
            The author.
            </value>
            <seealso cref="P:Splunk.Client.IConfigurationStanza.Author"/>
        </member>
        <member name="T:Splunk.Client.IEntityContract">
            <summary>
            An entity contract.
            </summary>
            <seealso cref="T:Splunk.Client.IEntity"/>
        </member>
        <member name="T:Splunk.Client.IEntityCollectionContract`2">
            <summary>
            An entity collection contract.
            </summary>
            <typeparam name="TEntity">
            Type of the entity.
            </typeparam>
            <typeparam name="TResource">
            Type of the resource.
            </typeparam>
            <seealso cref="T:Splunk.Client.IEntityCollection{TEntity,TResource}"/>
        </member>
        <member name="T:Splunk.Client.IIndex">
            <summary>
            Provides an operational interface to Splunk index entities.
            </summary>
            <seealso cref="T:IEntity"/>
        </member>
        <member name="M:Splunk.Client.IIndex.DisableAsync">
            <summary>
            Asynchronously disables the current <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            This method uses the POST data/indexes/{name}/disable endpoint to disable
            the current <see cref="T:Splunk.Client.Index"/>.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IIndex.EnableAsync">
            <summary>
            Asynchronously enables the current <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            This method uses the POST data/indexes/{name}/enable endpoint to enable
            the current <see cref="T:Splunk.Client.Index"/>.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IIndex.UpdateAsync(Splunk.Client.IndexAttributes)">
            <summary>
            Asychronously updates the current <see cref="T:Splunk.Client.Index"/> with new
            <see cref="T:Splunk.Client.IndexAttributes"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/n3S22S">POST
            data/indexes/{name} </a> endpoint to update the attributes of the index
            represented by this instance.
            </remarks>
            <param name="attributes">
            New attributes for the current <see cref="T:Splunk.Client.Index"/> instance.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="P:Splunk.Client.IIndex.AssureUTF8">
            <summary>
            Gets a value that indicates whether all data from the
            <see cref="T:Splunk.Client.Index"/> is proper UTF-8.
            </summary>
            <remarks>
            This is a global setting, not a per-index setting.
            </remarks>
            <value>
            <c>true</c> if assure UTF 8, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.BlockSignSize">
            <summary>
            Gets the number of events that make up a block for block signatures on an
            index.
            </summary>
            <remarks>
            The default value is zero (0) indicating that block signatures are
            disabled. If your index requires block signatures, a value is 100 is
            recommended.
            </remarks>
            <value>
            The size of the block sign.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.BlockSignatureDatabase">
            <summary>
            Gets the name of the index that stores block signatures of events.
            </summary>
            <remarks>
            This is a global setting, not a per-index setting.
            </remarks>
            <value>
            The block signature database.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.BloomFilterTotalSizeKB">
            <summary>
            Gets the bloom filter total size kilobytes.
            </summary>
            <value>
            The bloom filter total size kilobytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.BucketRebuildMemoryHint">
            <summary>
            Gets the bucket rebuild memory hint.
            </summary>
            <value>
            The bucket rebuild memory hint.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ColdPath">
            <summary>
            Gets the path to the cold databases for the index.
            </summary>
            <value>
            The full pathname of the cold file.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ColdPathExpanded">
            <summary>
            Gets the absolute path to the cold databases for the index.
            </summary>
            <value>
            The cold path expanded.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ColdPathMaxDataSizeMB">
            <summary>
            Gets the maximum size in MB for the cold database to reach before a roll
            to the frozen archive is triggered.
            </summary>
            <value>
            The cold path maximum data size megabytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ColdToFrozenDir">
            <summary>
            Gets the path to a directory for the frozen archive of an index.
            </summary>
            <remarks>
            This property is an alternative to <see cref="P:Splunk.Client.IIndex.ColdToFrozenScript"/>. If
            <see cref="P:Splunk.Client.IIndex.ColdToFrozenDir"/> and <see cref="P:Splunk.Client.IIndex.ColdToFrozenScript"/>
            are specified, <see cref="P:Splunk.Client.IIndex.ColdToFrozenDir"/> takes precedence. Splunk
            will automatically put frozen buckets in this directory.
            </remarks>
            <value>
            The cold to frozen dir.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ColdToFrozenScript">
            <summary>
            Gets the path to an archiving script for the frozen archive of an index.
            </summary>
            <remarks>
            If your script requires a program to run it (for example, python),
            specify the program followed by the path. The script must be in
            <c>$SPLUNK_HOME/bin</c> or one of its subdirectories.
            </remarks>
            <value>
            The cold to frozen script.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.CompressRawData">
            <summary>
            Gets the path to an archiving script for the frozen archive of an index.
            </summary>
            <remarks>
            If your script requires a program to run it (for example, python),
            specify the program followed by the path. The script must be in
            <c>$SPLUNK_HOME/bin</c> or one of its subdirectories.
            </remarks>
            <value>
            <c>true</c> if compress raw data, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.CurrentDBSizeMB">
            <summary>
            Gets the total size in megabytes of data stored in the current
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            The total includes the size of data in the <see cref="P:Splunk.Client.IIndex.HomePath"/>,
            <see cref="P:Splunk.Client.IIndex.ColdPath"/>, and <see cref="P:Splunk.Client.IIndex.ThawedPath"/> databases.
            </remarks>
            <value>
            The current database size megabytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.DefaultDatabase">
            <summary>
            Gets the name of the index for input data that does not contain index
            destination information.
            </summary>
            <remarks>
            If no index destination information is available in the input data, the
            index shown here is the destination of that data.
            </remarks>
            <value>
            The default database.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.Disabled">
            <summary>
            Gets a value that indicates whether the current <see cref="T:Splunk.Client.Index"/>
            is disabled.
            </summary>
            <remarks>
            This value is <c>true</c>, if the current <see cref="T:Splunk.Client.Index"/> is disabled;
            otherwise, <c>false</c>.
            </remarks>
            <value>
            <c>true</c> if disabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.Eai">
            <summary>
            Gets the extensible administration interface properties for the current
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.EnableOnlineBucketRepair">
            <summary>
            Gets a value indicating whether the online bucket repair is enabled.
            </summary>
            <value>
            <c>true</c> if enable online bucket repair, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.EnableRealTimeSearch">
            <summary>
            Gets a value that indicates if realtime searches are enabled.
            </summary>
            <remarks>
            This is a global setting, not a per-index setting.
            </remarks>
            <value>
            <c>true</c> if enable real time search, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.FrozenTimePeriodInSecs">
            <summary>
            Gets the frozen time period in seconds.
            </summary>
            <value>
            The frozen time period in seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.HomePath">
            <summary>
            Gets the path to the hot and warm buckets for the current
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <value>
            The full pathname of the home file.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.HomePathExpanded">
            <summary>
            Gets the absolute path to the hot and warm buckets for the current
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <value>
            The home path expanded.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.HomePathMaxDataSizeMB">
            <summary>
            Gets the maximum size in MB for the hot and warm buckets for the current
            <see cref="T:Splunk.Client.Index"/> to reach.
            </summary>
            <value>
            The home path maximum data size megabytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.IndexThreads">
            <summary>
            Gets the number of threads used for indexing.
            </summary>
            <value>
            The index threads.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.IsInternal">
            <summary>
            Gets a value that indicates if the current <see cref="T:Splunk.Client.Index"/> is an
            internal index.
            </summary>
            <remarks>
            Internal indexes include, for example, <c>"_audit"</c> and <c>
            "_internal"</c>.
            </remarks>
            <value>
            <c>true</c> if this object is internal, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.IsReady">
            <summary>
            Gets a value indicating whether this object is ready.
            </summary>
            <value>
            <c>true</c> if this object is ready, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.IsVirtual">
            <summary>
            Gets a value indicating whether this object is virtual.
            </summary>
            <value>
            <c>true</c> if this object is virtual, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.LastInitSequenceNumber">
            <summary>
            Gets the last initialise sequence number.
            </summary>
            <value>
            The last initialise sequence number.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.LastInitTime">
            <summary>
            Gets the last initialise time.
            </summary>
            <value>
            The last initialise time.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxBloomBackfillBucketAge">
            <summary>
            Gets the maximum bloom backfill bucket age.
            </summary>
            <value>
            The maximum bloom backfill bucket age.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxBucketSizeCacheEntries">
            <summary>
            Gets the maximum bucket size cache entries.
            </summary>
            <value>
            The maximum bucket size cache entries.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxConcurrentOptimizes">
            <summary>
            Gets the maximum concurrent optimizes.
            </summary>
            <value>
            The maximum concurrent optimizes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxDataSize">
            <summary>
            Gets the size of the maximum data.
            </summary>
            <value>
            The size of the maximum data.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxHotBuckets">
            <summary>
            Gets the maximum hot buckets.
            </summary>
            <value>
            The maximum hot buckets.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxHotIdleSecs">
            <summary>
            Gets the maximum hot idle seconds.
            </summary>
            <value>
            The maximum hot idle seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxHotSpanSecs">
            <summary>
            Gets the maximum hot span seconds.
            </summary>
            <value>
            The maximum hot span seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxMemMB">
            <summary>
            Gets the maximum memory megabytes.
            </summary>
            <value>
            The maximum memory megabytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxMetaEntries">
            <summary>
            Gets the maximum meta entries.
            </summary>
            <value>
            The maximum meta entries.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxRunningProcessGroups">
            <summary>
            Gets the groups the maximum running process belongs to.
            </summary>
            <value>
            The maximum running process groups.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxRunningProcessGroupsLowPriority">
            <summary>
            Gets the maximum running process groups low priority.
            </summary>
            <value>
            The maximum running process groups low priority.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxTime">
            <summary>
            Gets the maximum time.
            </summary>
            <value>
            The maximum time.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxTimeUnreplicatedNoAcks">
            <summary>
            Gets the maximum time unreplicated no acks.
            </summary>
            <value>
            The maximum time unreplicated no acks.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxTimeUnreplicatedWithAcks">
            <summary>
            Gets the maximum time unreplicated with acks.
            </summary>
            <value>
            The maximum time unreplicated with acks.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxTotalDataSizeMB">
            <summary>
            Gets the maximum total data size megabytes.
            </summary>
            <value>
            The maximum total data size megabytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MaxWarmDBCount">
            <summary>
            Gets the number of maximum warm databases.
            </summary>
            <value>
            The number of maximum warm databases.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MemPoolMB">
            <summary>
            Gets the memory pool megabytes.
            </summary>
            <value>
            The memory pool megabytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MinRawFileSyncSecs">
            <summary>
            Gets the minimum raw file synchronise seconds.
            </summary>
            <value>
            The minimum raw file synchronise seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.MinTime">
            <summary>
            Gets the minimum time.
            </summary>
            <value>
            The minimum time.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.NumBloomFilters">
            <summary>
            Gets the number of bloom filters that have been created for the current
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <value>
            The total number of bloom filters.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.NumHotBuckets">
            <summary>
            Gets the number of hot buckets that have been created for the current
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <value>
            The total number of hot buckets.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.NumWarmBuckets">
            <summary>
            Gets the number of warm buckets that have been created for the current
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <value>
            The total number of warm buckets.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.PartialServiceMetaPeriod">
            <summary>
            Gets the partial service meta period.
            </summary>
            <value>
            The partial service meta period.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ProcessTrackerServiceInterval">
            <summary>
            Gets the process tracker service interval.
            </summary>
            <value>
            The process tracker service interval.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.QuarantineFutureSecs">
            <summary>
            Gets the quarantine future seconds.
            </summary>
            <value>
            The quarantine future seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.QuarantinePastSecs">
            <summary>
            Gets the quarantine past seconds.
            </summary>
            <value>
            The quarantine past seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.RawChunkSizeBytes">
            <summary>
            Gets the raw chunk size bytes.
            </summary>
            <value>
            The raw chunk size bytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.RepFactor">
            <summary>
            Gets the rep factor.
            </summary>
            <value>
            The rep factor.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.RotatePeriodInSecs">
            <summary>
            Gets the rotate period in seconds.
            </summary>
            <value>
            The rotate period in seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ServiceMetaPeriod">
            <summary>
            Gets the service meta period.
            </summary>
            <value>
            The service meta period.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ServiceOnlyAsNeeded">
            <summary>
            Gets a value indicating whether the service only as needed.
            </summary>
            <value>
            <c>true</c> if service only as needed, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ServiceSubtaskTimingPeriod">
            <summary>
            Gets the service subtask timing period.
            </summary>
            <value>
            The service subtask timing period.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.SummaryHomePathExpanded">
            <summary>
            Gets the summary home path expanded.
            </summary>
            <value>
            The summary home path expanded.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.SuppressBannerList">
            <summary>
            Gets the list of indexes for the "index missing" warning banner messages
            are suppressed.
            </summary>
            <remarks>
            This is a global setting, not a per index setting.
            </remarks>
            <value>
            A List of suppress banners.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.Sync">
            <summary>
            Gets a value indicating whether the synchronise.
            </summary>
            <value>
            <c>true</c> if synchronise, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.SyncMeta">
            <summary>
            Gets a value indicating whether the synchronise meta.
            </summary>
            <value>
            <c>true</c> if synchronise meta, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ThawedPath">
            <summary>
            Gets the path to the resurrected databases for the current
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <value>
            The full pathname of the thawed file.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ThawedPathExpanded">
            <summary>
            Gets the thawed path expanded.
            </summary>
            <value>
            The thawed path expanded.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.ThrottleCheckPeriod">
            <summary>
            Gets the throttle check period.
            </summary>
            <value>
            The throttle check period.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.TotalEventCount">
            <summary>
            Gets the number of total events.
            </summary>
            <value>
            The total number of event count.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.TStatsHomePath">
            <summary>
            Gets the full pathname of the statistics home file.
            </summary>
            <value>
            The full pathname of the statistics home file.
            </value>
        </member>
        <member name="P:Splunk.Client.IIndex.TStatsHomePathExpanded">
            <summary>
            Gets the statistics home path expanded.
            </summary>
            <value>
            The t statistics home path expanded.
            </value>
        </member>
        <member name="T:Splunk.Client.IIndexCollection`1">
            <summary>
            Provides an operational interface to the Splunk application collection.
            </summary>
            <typeparam name="TIndex">
            Type of the index.
            </typeparam>
            <seealso cref="T:IPaginated"/>
            <seealso cref="T:IEntityCollection{TIndex"/>
        </member>
        <member name="M:Splunk.Client.IIndexCollection`1.CreateAsync(System.String,Splunk.Client.IndexAttributes,System.String,System.String,System.String)">
            <summary>
            Asyncrhonously creates the index represented by the current index.
            </summary>
            <param name="name">
            Name of the index to create.
            </param>
            <param name="attributes">
            Attributes to set on the newly created index.
            </param>
            <param name="coldPath">
            Location for storing the cold databases for the current
            <see cref="T:Splunk.Client.Index"/>. A value of <c>null</c> or <c>""</c> specifies that
            the cold databases should be stored at the default location.
            </param>
            <param name="homePath">
            Location for storing the hot and warm buckets for the current index. A
            value of <c>null</c> or <c>""</c> specifies that the hot and warm buckets
            should be stored at the default location.
            </param>
            <param name="thawedPath">
            Location for storing the resurrected databases for the current
            <see cref="T:Splunk.Client.Index"/>. A value of <c>null</c> or <c>""</c> specifies that
            the resurrected databases should be stored at the default location.
            </param>
            <returns>
            An object representing the newly created index.
            </returns>
        </member>
        <member name="M:Splunk.Client.IIndexCollection`1.GetSliceAsync(Splunk.Client.IndexCollection.Filter)">
            <summary>
            Asynchronously retrieves select entities from the list of entites in the
            current <see cref="T:Splunk.Client.IndexCollection"/>.
            </summary>
            <remarks>
            Following completion of the operation the list of entities in the current
            <see cref="T:Splunk.Client.IndexCollection"/> will contain all changes since the select
            entites were last retrieved.
            </remarks>
            <param name="criteria">
            The criteria.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="T:Splunk.Client.IJob">
            <summary>
            Provides an operational interface to a search job.
            </summary>
            <seealso cref="T:IEntity"/>
        </member>
        <member name="M:Splunk.Client.IJob.GetAsync(Splunk.Client.DispatchState,System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a fresh copy of the current search hob
            that is in or has moved past a desired <see cref="P:Splunk.Client.IJob.DispatchState"/>
            and contains all changes to it since it was last retrieved.
            </summary>
            <remarks>
            This method always retrieves a fresh copy of the current
            <see cref="T:Splunk.Client.Job"/>.
            </remarks>
            <param name="dispatchState">
            Desired dispatch state.
            </param>
            <param name="delay">
            Number of milliseconds to wait for the current <see cref="T:Splunk.Client.Job"/> to move
            into the desired <paramref name="dispatchState"/>.
            </param>
            <param name="retryInterval">
            Number of milliseconds to wait between checks for the dispatch state of
            the current <see cref="T:Splunk.Client.Job"/>. This value is increased by 50% on each
            retry.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.TransitionAsync(Splunk.Client.DispatchState,System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a fresh copy of the current search job
            that is in or has moved past a desired <see cref="P:Splunk.Client.IJob.DispatchState"/>
            and contains all changes to it since it was last retrieved.
            </summary>
            <remarks>
            This method returns immediately if <see cref="P:Splunk.Client.IJob.DispatchState"/> is 
            greater than or equal to <paramref name="dispatchState"/>.
            </remarks>
            <param name="dispatchState">
            Desired dispatch state.
            </param>
            <param name="delay">
            Number of milliseconds to wait for the current <see cref="T:Splunk.Client.Job"/> to
            move into the desired <paramref name="dispatchState"/>.
            </param>
            <param name="retryInterval">
            Number of milliseconds to wait between checks for the dispatch 
            state of the current <see cref="T:Splunk.Client.Job"/>. This value is increased
            by 50% on each retry.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.UpdateAsync(Splunk.Client.CustomJobArgs)">
            <summary>
            Updates custom arguments to the current <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/bL4tFk">POST
            search/jobs/{search_id}</a> endpoint to update custom arguments to
            the current <see cref="T:Splunk.Client.Job"/>.
            </remarks>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.GetSearchEventsAsync(Splunk.Client.SearchEventArgs)">
            <summary>
            Gets search events asynchronous.
            </summary>
            <param name="args">
            Optional search event arguments.
            </param>
            <returns>
            The search events asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.GetSearchPreviewAsync(Splunk.Client.SearchResultArgs)">
            <summary>
            Gets search preview asynchronous.
            </summary>
            <param name="args">
            Optional search result arguments.
            </param>
            <returns>
            The search preview asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.GetSearchResultsAsync(Splunk.Client.SearchResultArgs)">
            <summary>
            Gets search results asynchronous.
            </summary>
            <param name="args">
            Optional search result arguments.
            </param>
            <returns>
            The search results asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.CancelAsync">
            <summary>
            Asynchronously stops the current search and deletes the result 
            cache.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.DisablePreviewAsync">
            <summary>
            Asynchronously disables preview generation for the current search
            job.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.EnablePreviewAsync">
            <summary>
            Asynchronously enables preview generation for the current search
            job.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.FinalizeAsync">
            <summary>
            Asynchronously stops the current search job and provides intermediate
            results to its results endpoint.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.PauseAsync">
            <summary>
            Asynchronously suspends execution of the current search job.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.SaveAsync">
            <summary>
            Asynchronously saves the current search job, storing its artifacts
            on disk for seven days.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
            <remarks>
            Add or edit the <c>default_save_ttl</c> value in <a href="http://goo.gl/yj4XrO">limits.conf</a> to override the default
            value of seven days.
            </remarks>
        </member>
        <member name="M:Splunk.Client.IJob.SetPriorityAsync(System.Int32)">
            <summary>
            Sets the priority of the search process.
            </summary>
            <param name="priority">
            A value between <c>0</c> and <c>10</c>.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.SetTtlAsync(System.Int32)">
            <summary>
            Sets the time-to-live for the results of the current search job.
            </summary>
            <param name="ttl">
            The time-to-live in seconds.
            seconds.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.TouchAsync(System.Int32)">
            <summary>
            Extends the expiration time for the results of the current search
            job.
            </summary>
            <param name="ttl">
            The extended time in seconds.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.UnpauseAsync">
            <summary>
            Asynchronously resumes execution of the current search job, if
            it is paused.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJob.UnsaveAsync">
            <summary>
            Asynchronously disables any action performed by <see cref="M:Splunk.Client.IJob.SaveAsync"/>.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.IJob.CanSummarize">
            <summary>
            Gets a value indicating whether we can summarize.
            </summary>
            <value>
            <c>true</c> if we can summarize, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.CursorTime">
            <summary>
            Gets the earliest time from which no events are later scanned.
            </summary>
            <remarks>
            This value can be used to indicate progress. See <see cref="P:Splunk.Client.IJob.DoneProgress"/>.
            </remarks>
            <value>
            The earliest time from which no events are later scanned.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.DefaultSaveTtl">
            <summary>
            Gets the default save TTL.
            </summary>
            <value>
            The default save TTL.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.DefaultTtl">
            <summary>
            Gets the default TTL.
            </summary>
            <value>
            The default TTL.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.DiskUsage">
            <summary>
            Gets the total number of bytes of disk space used by the current 
            search job.
            </summary>
            <value>
            The total number of bytes of disk space used by the current search
            job.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.DispatchState">
            <summary>
            Gets the <see cref="P:Splunk.Client.IJob.DispatchState"/> of the current search job.
            </summary>
            <value>
            The <see cref="P:Splunk.Client.IJob.DispatchState"/> of the current search job.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.DoneProgress">
            <summary>
            Gets a number between 0 and 1.0 that indicates the approximate 
            progress of the current search job.
            </summary>
            <remarks>
            This value is computed as (<see cref="P:Splunk.Client.IJob.LatestTime"/> - <see cref="P:Splunk.Client.IJob.CursorTime"/>) / (<see cref="P:Splunk.Client.IJob.LatestTime"/> - <see cref="P:Splunk.Client.IJob.EarliestTime"/>).
            </remarks>
            <value>
            The done progress.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.DropCount">
            <summary>
            Gets the number of possible events that were dropped from the current
            search job due to the realtime queue size.
            </summary>
            <remarks>
            This value only applies to realtime search jobs.
            </remarks>
            <value>
            The number of drops.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Eai">
            <summary>
            Gets the extensible administration interface properties for the
            current search job.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.EarliestTime">
            <summary>
            Gets the earliest time the current search job is configured to
            start.
            </summary>
            <remarks>
            This value can be used to indicate progress. See <see cref="P:Splunk.Client.IJob.DoneProgress"/>.
            </remarks>
            <value>
            The earliest time.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.EventAvailableCount">
            <summary>
            Gets the number of events that are available for export from the 
            current search job.
            </summary>
            <value>
            The number of events that are available for export from the current
            search job.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.EventCount">
            <summary>
            Gets the number of events found by the current search job.
            </summary>
            <value>
            The number of events.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.EventFieldCount">
            <summary>
            Gets the number of fields found in the search results produced by 
            the current search job.
            </summary>
            <value>
            The number of event fields.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.EventIsStreaming">
            <summary>
            Gets a value that indicates if the events of the current search job
            are being streamed.
            </summary>
            <value>
            <c>true</c> if event is streaming, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.EventIsTruncated">
            <summary>
            Gets a value that indicates if the events produced by the current
            search job have not been stored, and thus are not available from 
            the events endpoint for the job.
            </summary>
            <value>
            <c>true</c> if event is truncated, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.EventSearch">
            <summary>
            Gets that subset of the search command that appears before any
            transforming commands.
            </summary>
            <remarks>
            The <a href="http://goo.gl/P3x68V">timeline</a> and
            <a href= "http://goo.gl/7kNQSb">events</a> endpoints represent the
            results of this part of the search.
            </remarks>
            <value>
            The event search.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.EventSorting">
            <summary>
            Gets the <see cref="T:Splunk.Client.SortDirection"/> of the current search job.
            </summary>
            <value>
            The event sorting.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IndexEarliestTime">
            <summary>
            Gets the index earliest time.
            </summary>
            <value>
            The index earliest time.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IndexLatestTime">
            <summary>
            Gets the index latest time.
            </summary>
            <value>
            The index latest time.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsBatchModeSearch">
            <summary>
            Gets a value indicating whether this object is batch mode search.
            </summary>
            <value>
            <c>true</c> if this object is batch mode search, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsDone">
            <summary>
            Gets a value that indicates whether the current search job.
            has completed.
            </summary>
            <value>
            <c>true</c> if this object is done, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsFailed">
            <summary>
            Gets a value that indicates whether the current search job failed
            due to a fatal error.
            </summary>
            <remarks>
            A search job may fail, for example, because of syntax errors in the
            search command.
            </remarks>
            <value>
            <c>true</c> if this object is failed, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsFinalized">
            <summary>
            Gets a value that indicates whether the current search job was
            finalized before completion.
            </summary>
            <value>
            <c>true</c> if this object is finalized, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsPaused">
            <summary>
            Gets a value that indicates whether the current search job is
            paused.
            </summary>
            <value>
            <c>true</c> if this object is paused, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsPreviewEnabled">
            <summary>
            Gets a value that indicates whether previews are enabled for the 
            current search job.
            </summary>
            <value>
            <c>true</c> if a preview is enabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsRealTimeSearch">
            <summary>
            Gets a value that indicates whether the current search job is
            executing a realtime search.
            </summary>
            <value>
            <c>true</c> if this object is real time search, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsRemoteTimeline">
            <summary>
            Gets a value that indicates whether the timeline feature is enabled 
            for the current search job.
            </summary>
            <value>
            <c>true</c> if this object is remote timeline, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsSaved">
            <summary>
            Gets a value that indicates whether the current search job is saved.
            </summary>
            <remarks>
            A value of <c>true</c> indicates that the current <see cref="T:Splunk.Client.Job"/>
            is saved, storing search artifacts on disk for 7 days from the last time
            that the job was viewed or otherwise touched. Set the value of
            <c>default_save_ttl</c> <a href="http://goo.gl/OpE4lR">
            limits.conf</a> to override the default value.
            </remarks>
            <value>
            <c>true</c> if this object is saved, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsSavedSearch">
            <summary>
            Gets a value that indicates if the current search job is a saved
            search that was run by the Splunk scheduler.
            </summary>
            <value>
            <c>true</c> if this object is saved search, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.IsZombie">
            <summary>
            Gets a value that indicates if the process running the current
            search job is dead, but with the search not finished.
            </summary>
            <value>
            <c>true</c> if this object is zombie, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Keywords">
            <summary>
            Gets the positive keywords used by this search.
            </summary>
            <remarks>
            A positive keyword is a keyword that is not in a <c>NOT</c> clause.
            </remarks>
            <value>
            The keywords.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.LatestTime">
            <summary>
            Gets the latest time a search job is configured to start.
            </summary>
            <remarks>
            This value can be used to indicate progress. See
            <see cref="P:Splunk.Client.IJob.DoneProgress"/>.
            </remarks>
            <value>
            The latest time.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.NormalizedSearch">
            <summary>
            Gets the normalized search.
            </summary>
            <value>
            The normalized search.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.NumPreviews">
            <summary>
            Gets the number of previews that have been generated by the current
            search job so far.
            </summary>
            <value>
            The total number of previews.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Performance">
            <summary>
            Gets the execution costs of the current search job.
            </summary>
            <value>
            The execution costs of the current search job.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Pid">
            <summary>
            Gets the PID of the current search job.
            </summary>
            <value>
            PID of the current search job.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Priority">
            <summary>
            Gets an integer value between <c>0</c> and <c>10</c> that indicates the
            priority of the current search job.
            </summary>
            <remarks>
            The priority is mapped to the OS process priority. The higher the number
            the higher the priority. The priority can be changed using
            <see cref="M:Splunk.Client.IJob.SetPriorityAsync(System.Int32)"/>.
            <note type="note">
            On *nix systems, non-privileged users can only reduce the priority of a
            process.
            </note>
            </remarks>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.RemoteSearch">
            <summary>
            Gets the search string that is sent to every search peer.
            </summary>
            <value>
            The search string that is sent to every search peer.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.ReportSearch">
            <summary>
            Gets the subset of the entire search command that is composed of
            reporting commands.
            </summary>
            <remarks>
            A value of <c>indicates</c> that search command has no reporting 
            commands.
            </remarks>
            <value>
            The report search.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Request">
            <summary>
            Gets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.ResultCount">
            <summary>
            Gets the total number of results returned by the search.
            </summary>
            <remarks>
            This is the subset of scanned events (represented by the
            <see cref="P:Splunk.Client.IJob.ScanCount"/> property) that actually matches the search
            terms.
            </remarks>
            <value>
            The total number of results returned by the search.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.ResultIsStreaming">
            <summary>
            Gets a value that indicates if the final results of the search are
            available using streaming.
            </summary>
            <value>
            <c>true</c> if result is streaming, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.ResultPreviewCount">
            <summary>
            Gets the number of result rows in the latest preview results.
            </summary>
            <value>
            The number of result previews.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.RunDuration">
            <summary>
            Gets the time in seconds that the current search job took to
            complete.
            </summary>
            <value>
            The run duration.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Runtime">
            <summary>
            Gets the runtime.
            </summary>
            <value>
            The runtime.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.ScanCount">
            <summary>
            Gets the number of events that are scanned or read from disk.
            </summary>
            <value>
            The number of scans.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Search">
            <summary>
            Gets the full text of the search command for the current search job.
            </summary>
            <value>
            The full text of the search command for the current search job.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.SearchEarliestTime">
            <summary>
            Gets the earliest time for the current search job as specified in
            the search command rather than the <see cref="P:Splunk.Client.IJob.EarliestTime"/>
            parameter.
            </summary>
            <remarks>
            This value does not snap to the indexed data time bounds for 
            all-time searches as <see cref="P:Splunk.Client.IJob.EarliestTime"/> and <see cref="P:Splunk.Client.IJob.LatestTime"/> do.
            </remarks>
            <value>
            The search earliest time.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.SearchLatestTime">
            <summary>
            Gets the latest time for the current search job as specified in the
            search command rather than the <see cref="P:Splunk.Client.IJob.LatestTime"/> parameter.
            </summary>
            <remarks>
            This value does not snap to the indexed data time bounds for 
            all-time searches as <see cref="P:Splunk.Client.IJob.EarliestTime"/> and <see cref="P:Splunk.Client.IJob.LatestTime"/> do.
            </remarks>
            <value>
            The search latest time.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.SearchProviders">
            <summary>
            Gets the list of all search peers that were contacted by the current
            search job.
            </summary>
            <value>
            The search providers.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Sid">
            <summary>
            Gets the ID of the current search job.
            </summary>
            <remarks>
            This property is a synonym for the job name.
            </remarks>
            <value>
            The search ID of the current <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.StatusBuckets">
            <summary>
            Gets the maximum number of time line buckets.
            </summary>
            <value>
            The status buckets.
            </value>
        </member>
        <member name="P:Splunk.Client.IJob.Ttl">
            <summary>
            Gets the time in seconds before the current search job expires 
            after it completes.
            </summary>
            <value>
            The time in seconds before the current search job expires after it
            completes.
            </value>
        </member>
        <member name="T:Splunk.Client.IJobCollection`1">
            <summary>
            Interface for job collection.
            </summary>
            <typeparam name="TJob">
            Type of the job.
            </typeparam>
            <seealso cref="T:IPaginated"/>
            <seealso cref="T:IEntityCollection{TJob"/>
        </member>
        <member name="M:Splunk.Client.IJobCollection`1.CreateAsync(System.String,System.Int32,Splunk.Client.ExecutionMode,Splunk.Client.JobArgs,Splunk.Client.CustomJobArgs,Splunk.Client.DispatchState)">
            <summary>
            Creates the asynchronous.
            </summary>
            <param name="search">
            The search.
            </param>
            <param name="count">
            
            </param>
            <param name="mode">
                               
            </param>
            <param name="args">
            The arguments.
            </param>
            <param name="customArgs">
            The custom arguments.
            </param>
            <param name="requiredState">
            State of the required.
            </param>
            <returns>
            The new asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IJobCollection`1.GetSliceAsync(Splunk.Client.JobCollection.Filter)">
            <summary>
            Gets slice asynchronous.
            </summary>
            <param name="criteria">
            The criteria.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="T:Splunk.Client.IJobCollectionContract`1">
            <summary>
            A job collection contract.
            </summary>
            <typeparam name="TJob">
            Type of the job.
            </typeparam>
            <seealso cref="T:Splunk.Client.IJobCollection{TJob}"/>
        </member>
        <member name="T:Splunk.Client.Index">
            <summary>
            Provides a class that represents a Splunk data index.
            </summary>
            <remarks>
            <para>
            <b>References:</b>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/UscaUQ">REST API Reference: Indexes</a>.
            </description></item>
            </list>
            </para>
            </remarks>
            <seealso cref="T:Splunk.Client.Entity{Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IIndex"/>
        </member>
        <member name="M:Splunk.Client.Index.#ctor(Splunk.Client.Service,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.Index"/> class.
             </summary>
             <param name="service">
             An object representing a root Splunk service endpoint.
             </param>
             <param name="name">
             An object identifying a Splunk resource within
             <paramref name="service"/>.<see cref="T:Splunk.Client.Namespace"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="service"/> or <paramref name="name"/> are <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.Index.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Application"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.Index.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Index"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="name">
            Name of the index to be represented by the current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/>, <paramref name="ns"/>, or <paramref name="name"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Index.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the <see cref="T:Splunk.Client.Index"/>
            class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Index.DisableAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Index.EnableAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Index.UpdateAsync(Splunk.Client.IndexAttributes)">
            <inheritdoc/>
        </member>
        <member name="F:Splunk.Client.Index.ClassResourceName">
            <summary>
            Name of the class resource.
            </summary>
        </member>
        <member name="P:Splunk.Client.Index.AssureUTF8">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.BlockSignSize">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.BlockSignatureDatabase">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.BloomFilterTotalSizeKB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.BucketRebuildMemoryHint">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ColdPath">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ColdPathExpanded">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ColdPathMaxDataSizeMB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ColdToFrozenDir">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ColdToFrozenScript">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.CompressRawData">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.CurrentDBSizeMB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.DefaultDatabase">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.Disabled">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.Eai">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.EnableOnlineBucketRepair">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.EnableRealTimeSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.FrozenTimePeriodInSecs">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.HomePath">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.HomePathExpanded">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.HomePathMaxDataSizeMB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.IndexThreads">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.IsInternal">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.IsReady">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.IsVirtual">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.LastInitSequenceNumber">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.LastInitTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxBloomBackfillBucketAge">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxBucketSizeCacheEntries">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxConcurrentOptimizes">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxDataSize">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxHotBuckets">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxHotIdleSecs">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxHotSpanSecs">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxMemMB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxMetaEntries">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxRunningProcessGroups">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxRunningProcessGroupsLowPriority">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxTimeUnreplicatedNoAcks">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxTimeUnreplicatedWithAcks">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxTotalDataSizeMB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MaxWarmDBCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MemPoolMB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MinRawFileSyncSecs">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.MinTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.NumBloomFilters">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.NumHotBuckets">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.NumWarmBuckets">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.PartialServiceMetaPeriod">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ProcessTrackerServiceInterval">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.QuarantineFutureSecs">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.QuarantinePastSecs">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.RawChunkSizeBytes">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.RepFactor">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.RotatePeriodInSecs">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ServiceMetaPeriod">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ServiceOnlyAsNeeded">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ServiceSubtaskTimingPeriod">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.SummaryHomePathExpanded">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.SuppressBannerList">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.Sync">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.SyncMeta">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ThawedPath">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ThawedPathExpanded">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.ThrottleCheckPeriod">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.TotalEventCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.TStatsHomePath">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Index.TStatsHomePathExpanded">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.IndexAttributes">
            <summary>
            Provides arguments for setting the attributes of an <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/L6GlMC">REST API Reference: POST
              data/indexes</a>.
            </description></item>
            <item><description>
              <a href="http://goo.gl/r5rZ7i">REST API Reference: POST
              data/indexes/{name}</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.IndexAttributes}"/>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.BlockSignSize">
            <summary>
            Gets or sets the number of events that make up a block for block
            signatures on an <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            The default value is zero (0) indicating that block signatures are
            disabled. If your index requires block signatures, a value is 100 is
            recommended.
            </remarks>
            <value>
            The number of events that make up a block for block signatures on an
            <see cref="T:Splunk.Client.Index"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.BucketRebuildMemoryHint">
            <summary>
            Gets or sets a suggested size for the time-series (tsidx) file created by
            the Splunk bucket rebuild process.
            </summary>
            <remarks>
            The default value is <c>"auto"</c> suggests that the size for the tsidx
            file created by the Splunk bucker rebuild process should vary based on
            the amount of physical RAM. Values other than <c>"auto"</c>
            must be 16MB-1GB. You can specify a value using a size prefix: "16777216"
            and "16MB" are equivalent.
            <para>
            <b>Caution:</b> Do not set this value unless instructed by Splunk
            Support. It is an advanced parameter. If set incorrectly Splunk will not
            start when a rebuild is required.</para>
            </remarks>
            <value>
            A suggested size for the time-series (tsidx) file created by the Splunk
            bucket rebuild process.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.ColdToFrozenDir">
            <summary>
            Gets or sets the path to a directory for the frozen archive of an
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            This property is an alternative to <see cref="P:Splunk.Client.IndexAttributes.ColdToFrozenScript"/>. If
            <see cref="P:Splunk.Client.IndexAttributes.ColdToFrozenDir"/> and <see cref="P:Splunk.Client.IndexAttributes.ColdToFrozenScript"/>
            are specified, <see cref="P:Splunk.Client.IndexAttributes.ColdToFrozenDir"/> takes precedence. Splunk
            will automatically put frozen buckets in this directory.
            </remarks>
            <value>
            The path to a directory for the frozen archive of an <see cref="T:Splunk.Client.Index"/>
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.ColdToFrozenScript">
            <summary>
            Gets or sets the path to an archiving script for the frozen archive of an
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            If your script requires a program to run it (for example, python),
            specify the program followed by the path. The script must be in
            <c>$SPLUNK_HOME/bin</c> or one of its subdirectories.
            </remarks>
            <value>
            The path to an archiving script for the frozen archive of an
            <see cref="T:Splunk.Client.Index"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.CompressRawData">
            <summary>
            Gets or sets the path to an archiving script for the frozen archive of an
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            If your script requires a program to run it (for example, python),
            specify the program followed by the path. The script must be in
            <c>$SPLUNK_HOME/bin</c> or one of its subdirectories.
            </remarks>
            <value>
            The path to an archiving script for the frozen archive of an
            <see cref="T:Splunk.Client.Index"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.EnableOnlineBucketRepair">
            <summary>
            Gets or sets a value indicating whether asynchronous bucket repair should
            be enabled on an <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            The default value is <c>true</c> indicating that asynchronous bucker
            repair should be enabled. You do not have to wait until buckets are
            repaired to start Splunk. You may observe a slight performance
            degradation while bucket repair is underway.
            </remarks>
            <value>
            <c>true</c>, if asynchronous bucket repair should be enabled on an
            <see cref="T:Splunk.Client.Index"/>; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.FrozenTimePeriodInSecs">
            <summary>
            Gets or sets a value that specifies the number of seconds after which
            indexed data rolls to frozen.
            </summary>
            <remarks>
            The default value is <c>188697600</c>, equivalent to six years.
            </remarks>
            <value>
            A value that specifies the number of seconds after which indexed data
            rolls to frozen.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxBloomBackfillBucketAge">
            <summary>
            Gets or sets a string that specifies when to stop rebuilding bloom
            filters for the warm or cold buckets of an <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            Express this value as a string of the form &lt;![CDATA[&lt;integer&gt;
            ("d"|"h"|"m"|"s"]]&gt;. The default is <c>"30d"</c> which tells Splunk to
            stop rebuilding bloom filters on warm or cold buckets when they are 30
            days old.
            </remarks>
            <value>
            A string that specifies when to stop rebuilding bloom filters for the
            warm or cold buckets of an <see cref="T:Splunk.Client.Index"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxConcurrentOptimizes">
            <summary>
            Gets or sets a value that specifies the number of concurrent optimize
            processes that can run against a hot bucket.
            </summary>
            <remarks>
            The default value is <c>6</c>.
            </remarks>
            <value>
            A value that specifies the number of concurrent optimize processes that
            can run against a hot bucket.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxDataSize">
            <summary>
            Gets or sets a string that specifies the maximum size in megabytes for a
            hot database to reach before a roll to warm is triggered.
            </summary>
            <remarks>
            Express this value as a string of the form &lt;![CDATA[&lt;integer&gt;
            |"auto"|"auto_high_volume"]]&gt;
            Specifying <c>"auto"</c> or <c>"auto_high_volume"</c> causes Splunk to
            autotune the size at which a roll to warm is triggered. Use
            <c>"auto_high_volume"</c> for high volume indexes (such as the main
            index); otherwise, use <c>"auto"</c>. The defaultis <c>"auto"</c>. &lt;
            para&gt;
            A "high volume index" would typically be considered one that gets over
            10GB of data per day. Although the maximum value you can set is
            <c>1048576</c>, equivalent to 1 TB, a reasonable number ranges from
            <c>100</c> to <c>50000</c>. Any number outside this range should be
            approved by Splunk Support before proceeding. If you specify an invalid
            number or string, this value will be auto tuned. &lt;note type="note"&gt;
            The precise size of your warm buckets may vary from
            <see cref="P:Splunk.Client.IndexAttributes.MaxDataSize"/> due to post-processing and timing issues with
            the rolling policy.
            </remarks>
            <value>
            A string that specifies the maximum size in megabytes for a hot database
            to reach before a roll to warm is triggered.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxHotBuckets">
            <summary>
            Gets or sets a value that specifies the maximum number of hot buckets
            that an <see cref="T:Splunk.Client.Index"/> can have.
            </summary>
            <remarks>
            When this value is is exceeded, Splunk rolls the least recently used hot
            bucket to warm. Both normal hot buckets and quarantined hot buckets count
            towards this total. The default is <c>3</c>.
            <note type="note">
            This setting operates independently of <see cref="P:Splunk.Client.IndexAttributes.MaxHotIdleSecs"/>
            which can also cause hot buckets to roll.
            </note>
            </remarks>
            <value>
            A value that specifies the maximum number of hot buckets that an
            <see cref="T:Splunk.Client.Index"/> can have.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxHotIdleSecs">
            <summary>
            Gets or sets a value that specifies the life time of an idle hot bucket
            in seconds.
            </summary>
            <remarks>
            If the lifetime of an idle hot bucket exceeds this value, Splunk rolls it
            to warm. The default is <c>0</c> which specifies that the lifetime.
            </remarks>
            <value>
            A value that specifies the life time of an idle hot bucket in seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxHotSpanSecs">
            <summary>
            Gets or sets a value that specifies the upper bound of target maximum
            timespan of hot/warm buckets in seconds.
            </summary>
            <remarks>
            The default value is <c>7776000</c>, equivalent to 90 days. Splunk
            enforces a lower bound of <c>3600</c>, equivalent to one hour. &lt;note
            type="caution"&gt;
            This is an advanced property that should be set with care and
            understanding of the characteristics of your data. If it is too small,
            you can get an explosion of hot/warm buckets in the file system.
            </remarks>
            <value>
            A value that specifies the upper bound of target maximum timespan of
            hot/warm buckets in seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxMemMB">
            <summary>
            Gets or sets a value that specifies the number of megabytes of memroy to
            allocate for buffering a single index file before flushing it to disk.
            </summary>
            <remarks>
            The default value is <c>5</c>. This is the recommended value for all
            environments.
            <note type="caution">
            Calculate this value carefully. Setting it incorrectly may have adverse
            effects on your system's memory and/or splunkd stability and performance.
            </note>
            </remarks>
            <value>
            A value that specifies the number of megabytes of memroy to allocate for
            buffering a single index file before flushing it to disk.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxMetaEntries">
            <summary>
            Gets or sets a value that specifies the maximum number of unique lines in
            the .data files in a bucket.
            </summary>
            <remarks>
            Setting this value may help reduce memory consumption. The default value
            is <c>1000000</c>. If this limit is exceeded, a hot bucket is rolled to
            prevent further increase. If your buckets are rolling due to Strings.data
            hitting this limit, the culprit may be the <c>punct</c>
            field. If you don't use <c>punct</c>, it may be best to simply disable
            Strings.data. See <a href="">props.conf.spec</a>.
            <note type="note">
            There is a small time delay between detecting and acting on this limit.
            Consequently a bucket may grow beyond this limit before it is rolled.
            </note>
            </remarks>
            <value>
            A value that specifies the maximum number of unique lines in the data
            files in a bucket.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxTimeUnreplicatedNoAcks">
            <summary>
            Gets or sets a value that specifies the upper limit in seconds on how
            long an event can sit in raw slice.
            </summary>
            <remarks>
            This value only applies if replication is enabled. It is otherwise
            ignored. The default value is <c>60</c>, equivalent to one minute.
            </remarks>
            <value>
            An upper limit in seconds on how long an event can sit in raw slice.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxTimeUnreplicatedWithAcks">
            <summary>
            Gets or sets a value that specifies the upper limit in seconds on how
            long events can sit unacknowledged in a raw slice.
            </summary>
            <remarks>
            This value only applies if you have enabled acks on forwarders and have
            replication enabled with clustering. It is otherwise ignored. The default
            value is <c>300</c>, equivalent to five minutes.
            </remarks>
            <value>
            An upper limit in seconds on how long events can sit unacknowledged in a
            raw slice.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxTotalDataSizeMB">
            <summary>
            Gets or sets a value that specifies the maximum size of an
            <see cref="T:Splunk.Client.Index"/> in megabytes.
            </summary>
            <remarks>
            The default value is <c>500000</c>. If an <see cref="T:Splunk.Client.Index"/> grows
            larger than the specified number of megabytes, the oldest data is frozen.
            </remarks>
            <value>
            The maximum size of an <see cref="T:Splunk.Client.Index"/> in megabytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MaxWarmDBCount">
            <summary>
            Gets or sets a value that specifies the maximum number of warm buckets.
            </summary>
            <remarks>
            The default value is <c>300</c>. If the number of buckets grows larger
            than this, the warm buckets with the lowest value for their latest times
            will be moved to cold.
            </remarks>
            <value>
            The maximum number of warm buckets.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MinRawFileSyncSecs">
            <summary>
            Gets or sets a string that specifies how frequently splunkd forces a file
            system sync while compressing journal slices.
            </summary>
            <remarks>
            Express this value as a string of the form &lt;![CDATA[(&lt;integer&gt;
            |"disable")]]&gt;. If you specify a value of <c>"0"</c>, splunkd forces a
            file system sync after every slice completes compressing. If you specify
            a value of <c>"disable"</c>, splunkd disables syncing entirely:
            Uncompressed slices are removed as soon as compression is complete. The
            default is <c>"disable"</c>.
            </remarks>
            <value>
            A string that specifies how frequently splunkd forces a file system sync
            while compressing journal slices.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.MinStreamGroupQueueSize">
            <summary>
            Gets or sets a value that specifies the minimum size of the queue that
            stores events in memory before committing them to a .tsidx file.
            </summary>
            <remarks>
            The default value is <c>2000</c>.
            <note type="caution">
            Do not set this value, except under advice from Splunk support.
            </note>
            </remarks>
            <value>
            The minimum size of the queue that stores events in memory before
            committing them to a .tsidx file.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.PartialServiceMetaPeriod">
            <summary>
            Gets or sets a value that specifies in seconds how often metadata sync
            occurs for records where the sync can be done efficiently in-place,
            without requiring a full re-write of the metadata file.
            </summary>
            <remarks>
            The default value is <c>0</c>. Zero means that this feature is disabled
            and <see cref="P:Splunk.Client.IndexAttributes.ServiceMetaPeriod"/> is the only time when metadata sync
            occurs.
            </remarks>
            <value>
            A value that specifies in seconds how often metadata sync occurs for
            records where the sync can be done efficiently in-place, without
            requiring a full re-write of the metadata file.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.ProcessTrackerServiceInterval">
            <summary>
            Gets or sets a value that specifies in seconds how often the indexer
            checks the status of the child operating system processes it has launched
            to see if it can launch new processes for queued requests.
            </summary>
            <remarks>
            The default value is <c>15</c>. Zero means the indexer will check child
            process status every second. This value is capped at
            <c>4294967295</c>, equivalent to <see cref="F:System.UInt32.MaxValue"/>.
            </remarks>
            <value>
            A value that specifies in seconds how often the indexer checks the status
            of the child operating system processes it has launched to see if it can
            launch new processes for queued requests.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.QuarantineFutureSecs">
            <summary>
            Gets or sets a value that specifies in seconds when new events are
            dropped into a quarantine bucket.
            </summary>
            <remarks>
            Events with a timestamp newer than <c>now</c> plus this value are dropped
            into a quarantine bucket. This is a mechanism to prevent main hot buckets
            from being polluted with fringe events. The default value is
            <c>2592000</c>, equivalent to thirty days.
            </remarks>
            <value>
            A value that specifies in seconds when new events are dropped into a
            quarantine bucket.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.QuarantinePastSecs">
            <summary>
            Gets or sets a value that specifies in seconds when old events are
            dropped into a quarantine bucket.
            </summary>
            <remarks>
            Events with a timestamp older than <c>now</c> plus this value are dropped
            into a quarantine bucket. This is a mechanism to prevent main hot buckets
            from being polluted with fringe events. The default value is
            <c>77760000</c>, equivalent to 900 days.
            </remarks>
            <value>
            A value that specifies in seconds when old events are dropped into a
            quarantine bucket.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.RawChunkSizeBytes">
            <summary>
            Gets or sets a value that specifies a target uncompressed size in bytes
            for individual raw slice in the raw data journal of an
            <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            The default value is <c>131072</c>, equivalent to 128 KB. Zero is not a
            valid value. If zero is specified, rawChunkSizeBytes is set to the
            default value.
            <note type="note">
            This value only specifies a target chunk size. The actual chunk size may
            be slightly larger by an amount proportional to an individual event
            size.</note>
            <note type="caution">
            This is an advanced property. Only change it if you are instructed to do
            so by Splunk Support.</note>
            </remarks>
            <value>
            A value that specifies a target uncompressed size in bytes for individual
            raw slice in the raw data journal of an <see cref="T:Splunk.Client.Index"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.RepFactor">
            <summary>
            Gets or sets a value that controls index replication.
            </summary>
            <remarks>
            This property only applies to Splunk Enterprise clustering slaves.
            Specify a value of <c>"auto</c> to use the master index replication
            configuration value. Specify a value of <c>"0"</c> to turn replication
            off. The default is <c>"0"</c>.
            </remarks>
            <value>
            A value that controls index replication.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.RotatePeriodInSecs">
            <summary>
            Gets or sets a value that specifies in seconds how frequently to check if
            a new hot bucket needs to be created as well as if there are any
            warm/cold buckets that should be rolled/frozen.
            </summary>
            <remarks>
            The default value is <c>60</c>, equivalent to one minute.
            </remarks>
            <value>
            A value that specifies in seconds how frequently to check if a new hot
            bucket needs to be created as well as if there are any warm/cold buckets
            that should be rolled/frozen.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.ServiceMetaPeriod">
            <summary>
            Gets or sets a value that specifies in seconds how frequently metadata is
            synced to disk.
            </summary>
            <remarks>
            The default value is <c>25</c>. You may want to set this to a higher
            value if the sum of your metadata file sizes is larger than many tens of
            megabytes to avoid the hit on I/O in the indexing fast path.
            </remarks>
            <value>
            A value that specifies in seconds how frequently metadata is synced to
            disk.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.SyncMeta">
            <summary>
            Gets or sets a value that indicates whether a sync operation is called
            before a file descriptor is closed on metadata file updates.
            </summary>
            <remarks>
            The default value is <c>true</c>. This improves integrity of metadata
            files, especially in regards to operating system crashes and machine
            failures.
            <notes type="caution">
            Do not change this parameter without the input of a Splunk Support.
            </notes>
            </remarks>
            <value>
            <c>true</c>, if a sync operation is called before a file descriptor is
            closed on metadata file updates; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.ThrottleCheckPeriod">
            <summary>
            Gets or sets a value that specifies in seconds how frequently to check
            for an <see cref="T:Splunk.Client.Index"/> throttling condition.
            </summary>
            <remarks>
            The default value is <c>15</c>.
            <notes type="caution">
            Do not change this parameter without the input of a Splunk Support.
            </notes>
            </remarks>
            <value>
            A value that specifies in seconds how frequently to check for an
            <see cref="T:Splunk.Client.Index"/> throttling condition.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.TStatsHomePath">
            <summary>
            Gets or sets the location to store datamodel acceleration .tsidx data for
            an <see cref="T:Splunk.Client.Index"/>.
            </summary>
            <remarks>
            Restart splunkd after changing this value. It must be defined in terms of
            a volume definition and the location must be writable. The default is
            volume:_splunk_summaries/$_index_name/tstats.
            </remarks>
            <value>
            The location to store datamodel acceleration .tsidx data for an
            <see cref="T:Splunk.Client.Index"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexAttributes.WarmToColdScript">
            <summary>
            Gets or sets the location of a script to run when moving data from warm
            to cold.
            </summary>
            <remarks>
            This property is supported for backwards compatibility with Splunk
            versions older than 4.0. Contact Splunk support if you need help.
            <note type="caution">
            Migrating data across file systems is now handled natively by splunkd. If
            you specify a script here, the script becomes responsible for moving the
            event data, and Splunk-native data migration will not be used.</note>
            </remarks>
            <value>
            The location of a script to run when moving data from warm to cold.
            </value>
        </member>
        <member name="T:Splunk.Client.IndexCollection">
            <summary>
            Provides an object representation of a collection of Splunk data indexes.
            </summary>
            <seealso cref="T:Splunk.Client.EntityCollection{Splunk.Client.Index,Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IIndexCollection{Splunk.Client.Index}"/>
        </member>
        <member name="M:Splunk.Client.IndexCollection.#ctor(Splunk.Client.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ConfigurationCollection"/>
            class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.IndexCollection.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.IndexCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.IndexCollection.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.IndexCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.IndexCollection.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.IndexCollection"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.IndexCollection.CreateAsync(System.String,Splunk.Client.IndexAttributes,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.IndexCollection.GetSliceAsync(Splunk.Client.IndexCollection.Filter)">
            <inheritdoc/>
        </member>
        <member name="F:Splunk.Client.IndexCollection.ClassResourceName">
            <summary>
            Name of the class resource.
            </summary>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Messages">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Pagination">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.IndexCollection.Filter">
            <summary>
            Provides arguments for retrieving an <see cref="T:Splunk.Client.IndexCollection"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/qVZ6wJ">REST API Reference: GET data/indexes</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.IndexCollection.Filter}"/>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Filter.Count">
            <summary>
            Gets or sets the maximum number of <see cref="T:Splunk.Client.Index"/> entries to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is <c>0</c>, then all available entries are
            returned. The default is <c>30</c>.
            </remarks>
            <value>
            The maximum number of <see cref="T:Splunk.Client.Index"/> entries to return.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Filter.Offset">
            <summary>
            Gets or sets a value specifying the first result (inclusive)
            from which to begin returning <see cref="T:Splunk.Client.Index"/> entries.
            </summary>
            <remarks>
            This value is zero-based and cannot be negative. The default value is
            zero.
            </remarks>
            <value>
            Index of the first result (inclusive) from which to begin returning
            <see cref="T:Splunk.Client.Index"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Filter.Search">
            <summary>
            Gets or sets a search expression to filter <see cref="T:Splunk.Client.Index"/>
            entries.
            </summary>
            <remarks>
            Use this expression to filter the entries returned based on search
            <see cref="T:Splunk.Client.Index"/> properties. The default is <c>null</c>.
            </remarks>
            <value>
            A search expression to filter <see cref="T:Splunk.Client.Index"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Filter.SortDirection">
            <summary>
            Gets or sets a value specifying the sort direction for
            <see cref="T:Splunk.Client.Index"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.IndexCollection.Filter.SortDirection"/>.Ascending.
            </remarks>
            <value>
            The sort direction for <see cref="T:Splunk.Client.Index"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Filter.SortKey">
            <summary>
            Gets or sets the <see cref="T:Splunk.Client.Index"/> property to use for sorting entries.
            </summary>
            <remarks>
            The default <see cref="T:Splunk.Client.Index"/> property to use for sorting is
            <c>"name"</c>.
            </remarks>
            <value>
            The <see cref="T:Splunk.Client.Index"/> property to use for sorting entries.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Filter.SortMode">
            <summary>
            Gets or sets a value specifying the sort mode for <see cref="T:Splunk.Client.Index"/>
            entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.IndexCollection.Filter.SortMode"/>.Automatic.
            </remarks>
            <value>
            The sort mode for <see cref="T:Splunk.Client.Index"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.IndexCollection.Filter.Summarize">
            <summary>
            Gets or sets a value indicating whether to leave out certain
            <see cref="T:Splunk.Client.Index"/> details in order to provide a faster
            response.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if certain <see cref="T:Splunk.Client.Index"/> details should be left out in
            order to provide a faster response.
            </value>
        </member>
        <member name="T:Splunk.Client.Int32Converter">
            <summary>
            Provides a converter to convert strings to <see cref="T:System.Int32"/> values.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.Int32}"/>
        </member>
        <member name="F:Splunk.Client.Int32Converter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.EnumConverter`1"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.Int32Converter.Convert(System.Object)">
            <summary>
            Converts the string representation of the <paramref name="input"/>
            object to a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.Int32"/>
            value.
            </exception>
        </member>
        <member name="T:Splunk.Client.Int64Converter">
            <summary>
            Provides a converter to convert strings to <see cref="T:System.Int64"/> values.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.Int64}"/>
        </member>
        <member name="F:Splunk.Client.Int64Converter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.Int64Converter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.Int64Converter.Convert(System.Object)">
            <summary>
            Converts the string representation of the <paramref name="input"/>
            object to a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.Int64"/>
            value.
            </exception>
        </member>
        <member name="T:Splunk.Client.InternalServerErrorException">
            <summary>
            The exception that is thrown when a request to retrieve a
            <see cref="T:Splunk.Client.BaseResource"/> results in
            <see cref="T:System.Net.HttpStatusCode"/>.InternalServerError.
            </summary>
            <seealso cref="T:Splunk.Client.RequestException"/>
        </member>
        <member name="M:Splunk.Client.InternalServerErrorException.#ctor(System.Net.Http.HttpResponseMessage,System.Collections.ObjectModel.ReadOnlyCollection{Splunk.Client.Message})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Splunk.Client.InternalServerErrorException"/>
            class.
            </summary>
            <param name="message">
            An object representing an HTTP response message including the status code
            and data.
            </param>
            <param name="details">
            A sequence of <see cref="T:Splunk.Client.Message"/> instances detailing the cause of the
            <see cref="T:Splunk.Client.ResourceNotFoundException"/>.
            </param>
        </member>
        <member name="T:Splunk.Client.ISavedSearch">
            <summary>
            Provids an operational interface to Splunk saved search entities.
            </summary>
            <seealso cref="T:IEntity"/>
        </member>
        <member name="M:Splunk.Client.ISavedSearch.DispatchAsync(Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
            <summary>
            Dispatches the current <see cref="T:Splunk.Client.SavedSearch"/> just like the scheduler
            would.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/AfzBJO">POST
            saved/searches/{name}/dispatch</a> endpoint to dispatch the current
            <see cref="T:Splunk.Client.SavedSearch"/>. It then uses the
            <a href="http://goo.gl/C9qc98">GET search/jobs/{search_id}</a> endpoint
            to retrieve the <see cref="T:Splunk.Client.Job"/> object that it returns.
            </remarks>
            <param name="dispatchArgs">
            A set of arguments to the dispatcher.
            </param>
            <param name="templateArgs">
            A set of template arguments to the saved search.
            </param>
            <returns>
            An object representing the search job created by the dispatcher.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearch.GetAsync(Splunk.Client.SavedSearch.Filter)">
            <summary>
            Asynchronously retrieves information about the current
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/L4JLwn">GET
            saved/searches/{name}</a> endpoint to get information about the current
            <see cref="T:Splunk.Client.SavedSearch"/> instance.
            </remarks>
            <param name="criteria">
            Constrains the information returned about the current instance.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearch.GetHistoryAsync">
            <summary>
            Asynchronously retrieves the collection of jobs created from the current
            instance.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/kv9L1l">GET
            saved/searches/{name}/history</a> endpoint to construct the
            <see cref="T:Splunk.Client.JobCollection"/> object it returns.
            </remarks>
            <returns>
            An object representing the collection of jobs created from the current
            instance.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearch.GetScheduledTimesAsync(System.String,System.String)">
            <summary>
            Asynchronously retrieves the scheduled times for the current
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/jFifZ7">GET
            saved/searches/{name}/scheduled_times</a> endpoint to retrieve the
            scheduled times it returns.
            </remarks>
            <param name="earliestTime">
            An absolute or relative time string specifying a lower-bound for the
            scheduled time range.
            </param>
            <param name="latestTime">
            An absolute or relative time string specifying a upper-bound for the
            scheduled time range.
            </param>
            <returns>
            The scheduled times asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearch.ScheduleAsync(System.Nullable{System.DateTime})">
            <summary>
            Asynchronously reschedules the saved search represented by the current
            instance.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/SJcEr5">POST
            saved/searches/{name}/reschedule</a> endpoint to reschedule the saved
            search represented by the current instance.
            </remarks>
            <param name="scheduleTime">
            A time string specifying the next time to run the search. This value
            defaults to null indicating that the saved search should be run as soon
            as possible.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearch.UpdateAsync(System.String,Splunk.Client.SavedSearchAttributes,Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
             <summary>
             Asynchronously updates the saved search represented by the current
             instance.
             </summary>
             <remarks>
             This method uses the <a href="http://goo.gl/aV9eiZ">POST
             saved/searches{name}</a> endpoint to update the saved search represented
             by the current instance.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             <paramref name="attributes"/>, <paramref name="dispatchArgs"/>, and
             <paramref name="templateArgs"/> are <c>null</c>.
             </exception>
             <param name="search">
             The search command for the current <see cref="T:Splunk.Client.SavedSearch"/>.
             </param>
             <param name="attributes">
             New attributes for the saved search to be updated.
             </param>
             <param name="dispatchArgs">
             New dispatch arguments for the saved search to be updated.
             </param>
             <param name="templateArgs">
             New template arguments for the saved search to be updated.
             </param>
             <returns>
             <c>true</c> if the current snapshot was also updated.
             </returns>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.Actions">
            <summary>
            Gets the actions.
            </summary>
            <value>
            The actions.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.Alert">
            <summary>
            Gets the alert.
            </summary>
            <value>
            The alert.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.AutoSummarize">
            <summary>
            Gets the automatic summarize.
            </summary>
            <value>
            The automatic summarize.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.CronSchedule">
            <summary>
            Gets the Cron schedule to execute the current <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The cron schedule.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.Description">
            <summary>
            Gets the human-readable description of the current
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.Dispatch">
            <summary>
            Gets the dispatch.
            </summary>
            <value>
            The dispatch.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.Display">
            <summary>
            Gets the display.
            </summary>
            <value>
            The display.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.Eai">
            <summary>
            Gets the extensible administration interface properties for the current
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.IsDisabled">
            <summary>
            Gets a value that indicates if the current <see cref="T:Splunk.Client.SavedSearch"/>
            is disabled.
            </summary>
            <remarks>
            Disabled saved searches are not visible in Splunk Web.
            </remarks>
            <value>
            <c>true</c> if this object is disabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.IsScheduled">
            <summary>
            Gets a value that indicates whether the current
            <see cref="T:Splunk.Client.SavedSearch"/> runs on a schedule.
            </summary>
            <value>
            <c>true</c> if this object is scheduled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.IsVisible">
            <summary>
            Gets a value that indicates whether the current
            <see cref="T:Splunk.Client.SavedSearch"/> appears in the list of saved searches on
            Splunk Web.
            </summary>
            <value>
            <c>true</c> if this object is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.MaxConcurrent">
            <summary>
            Gets the maximum concurrent.
            </summary>
            <value>
            The maximum concurrent.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.NextScheduledTime">
            <summary>
            Gets the next scheduled time.
            </summary>
            <value>
            The next scheduled time.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.QualifiedSearch">
            <summary>
            Gets the qualified search.
            </summary>
            <value>
            The qualified search.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.RealTimeSchedule">
            <summary>
            Gets a value indicating whether the real time schedule.
            </summary>
            <value>
            <c>true</c> if real time schedule, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.Request">
            <summary>
            Gets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.RestartOnSearchPeerAdd">
            <summary>
            Gets a value indicating whether the restart on search peer add.
            </summary>
            <value>
            <c>true</c> if restart on search peer add, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.RunOnStartup">
            <summary>
            Gets a value indicating whether the run on startup.
            </summary>
            <value>
            <c>true</c> if run on startup, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.ScheduledTimes">
            <summary>
            Gets a list of times of the scheduled.
            </summary>
            <value>
            A list of times of the scheduled.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearch.Search">
            <summary>
            Gets the search command for the current <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The search.
            </value>
        </member>
        <member name="T:Splunk.Client.ISavedSearchCollection`1">
            <summary>
            Provides an operational interface to a Splunk saved search entity
            collection.
            </summary>
            <typeparam name="TSavedSearch">
            Type of the saved search.
            </typeparam>
            <seealso cref="T:IPaginated"/>
            <seealso cref="T:IEntityCollection{TSavedSearch"/>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollection`1.CreateAsync(System.String,System.String,Splunk.Client.SavedSearchAttributes,Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
            <summary>
            Asynchronously creates a new saved search.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/EPQypw">POST
            saved/searches</a> endpoint to create the <see cref="T:Splunk.Client.SavedSearch"/>
            represented by the current instance.
            </remarks>
            <param name="name">
            Name of the saved search to be created.
            </param>
            <param name="search">
            A Splunk search command.
            </param>
            <param name="attributes">
            Attributes of the saved search to be created.
            </param>
            <param name="dispatchArgs">
            Dispatch arguments for the saved search to be created.
            </param>
            <param name="templateArgs">
            Template arguments for the saved search to be created.
            </param>
            <returns>
            The new asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollection`1.GetSliceAsync(Splunk.Client.SavedSearchCollection.Filter)">
            <summary>
            Asynchronously retrieves select entities in the current saved search
            entity collection.
            </summary>
            <remarks>
            Following completion of the operation the list of entities in the current
            saved search entity collection will contain all changes since the select
            entities were last retrieved.
            </remarks>
            <param name="criteria">
            The criteria.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="T:Splunk.Client.ISavedSearchCollectionContract`1">
            <summary>
            A saved search collection contract.
            </summary>
            <typeparam name="TSavedSearch">
            Type of the saved search.
            </typeparam>
            <seealso cref="T:Splunk.Client.ISavedSearchCollection{TSavedSearch}"/>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollectionContract`1.CreateAsync(System.String,System.String,Splunk.Client.SavedSearchAttributes,Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
            <summary>
            Asyncrhonously creates a new <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <param name="name">
            Name of the <see cref="T:Splunk.Client.SavedSearch"/>.
            </param>
            <param name="search">
            The Splunk search command to save.
            </param>
            <param name="attributes">
            Optional attributes of the <see cref="T:Splunk.Client.SavedSearch"/>.
            </param>
            <param name="dispatchArgs">
            Optional dispatch arguments for the <see cref="T:Splunk.Client.SavedSearch"/>.
            </param>
            <param name="templateArgs">
            Optional template arguments for the <see cref="T:Splunk.Client.SavedSearch"/>.
            </param>
            <returns>
            The <see cref="T:Splunk.Client.SavedSearch"/> created.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollectionContract`1.GetSliceAsync(Splunk.Client.SavedSearchCollection.Filter)">
            <summary>
            Gets slice asynchronous.
            </summary>
            <param name="criteria">
            The criteria.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollectionContract`1.GetAsync(System.String)">
            <summary>
            Asynchronously retrieves a <see cref="T:Splunk.Client.SavedSearch"/> by name.
            </summary>
            <param name="name">
            Name of the <see cref="T:Splunk.Client.SavedSearch"/> to retrieve.
            </param>
            <returns>
            The <see cref="T:Splunk.Client.SavedSearch"/> retrieved.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollectionContract`1.GetAllAsync">
            <summary>
            Gets all asynchronously.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollectionContract`1.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>
            The enumerator.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollectionContract`1.GetSliceAsync(Splunk.Client.Argument[])">
            <summary>
            Gets slice asynchronous.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollectionContract`1.GetSliceAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Gets slice asynchronous.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.ISavedSearchCollectionContract`1.ReloadAsync">
            <summary>
            Reload asynchronous.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.ISavedSearchCollectionContract`1.Item(System.Int32)">
            <summary>
            Indexer to get items within this collection using array index syntax.
            </summary>
            <param name="index">
            Zero-based index of the entry to access.
            </param>
            <returns>
            The indexed item.
            </returns>
        </member>
        <member name="P:Splunk.Client.ISavedSearchCollectionContract`1.Count">
            <summary>
            Gets the number of. 
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearchCollectionContract`1.Messages">
            <summary>
            Gets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Splunk.Client.ISavedSearchCollectionContract`1.Pagination">
            <summary>
            Gets the pagination.
            </summary>
            <value>
            The pagination.
            </value>
        </member>
        <member name="T:Splunk.Client.IServer">
            <summary>
            Interface for server.
            </summary>
        </member>
        <member name="M:Splunk.Client.IServer.GetInfoAsync">
            <summary>
            Asynchronously retrieves information about the current
            <see cref="T:Splunk.Client.Server"/>.
            </summary>
            <returns>
            An object representing information about the Splunk server.
            </returns>
        </member>
        <member name="M:Splunk.Client.IServer.GetSettingsAsync">
            <summary>
            Asynchronously retrieves <see cref="T:Splunk.Client.ServerSettings"/> from the current
            <see cref="T:Splunk.Client.Server"/> endpoint.
            </summary>
            <returns>
            An object representing the server settings from the Splunk server
            represented by the current instance.
            </returns>
        </member>
        <member name="M:Splunk.Client.IServer.RestartAsync(System.Int32,System.Int32)">
             <summary>
             Asynchronously restarts the current <see cref="T:Splunk.Client.Server"/> and then
             optionally checks for a specified period of time for server availability.
             </summary>
            
             <exception cref="T:System.ArgumentOutOfRangeException">
             <paramref name="millisecondsDelay"/> is less than <c>-1</c>.
             </exception>
             <exception cref="T:System.Net.Http.HttpRequestException">
             The restart operation failed.
             </exception>
             <exception cref="T:System.OperationCanceledException">
             The check for server availability was canceled after
             <paramref name="millisecondsDelay"/>.
             </exception>
             <exception cref="T:Splunk.Client.UnauthorizedAccessException">
             Insufficient privileges to restart the current <see cref="T:Splunk.Client.Server"/>.
             </exception>
             <param name="millisecondsDelay">
             The time to wait before canceling the check for server availability. The
             default value is <c>60000</c> specifying that the check for server
             avaialability will continue for up to 60 seconds. A value of <c>0</c>
             specifices that no check should be made. A value of
             <c>-1</c> specifies an infinite wait time.
             </param>
             <param name="retryInterval">
             The time to wait between checks for server availability in milliseconds.
             The default value is <c>250</c> specifying that the time between checks
             for server availability is one quarter of a second.
             </param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
             </returns>
        </member>
        <member name="M:Splunk.Client.IServer.UpdateSettingsAsync(Splunk.Client.ServerSettingValues)">
            <summary>
            Asynchronously updates setting values on the current <see cref="T:Splunk.Client.Server"/>.
            </summary>
            <param name="values">
            An object representing the setting values to be changed.
            </param>
            <returns>
            An object representing the updated server settings.
            </returns>
        </member>
        <member name="P:Splunk.Client.IServer.Messages">
            <summary>
            Gets the server messages collection associated with the current
            <see cref="T:Splunk.Client.Server"/>.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="T:Splunk.Client.IServerContract">
            <summary>
            A server contract.
            </summary>
            <seealso cref="T:Splunk.Client.IServer"/>
        </member>
        <member name="M:Splunk.Client.IServerContract.GetInfoAsync">
            <summary>
            Asynchronously retrieves information about the current
            <see cref="T:Splunk.Client.Server"/>.
            </summary>
            <returns>
            An object representing information about the Splunk server.
            </returns>
            <seealso cref="M:Splunk.Client.IServer.GetInfoAsync()"/>
        </member>
        <member name="M:Splunk.Client.IServerContract.GetSettingsAsync">
            <summary>
            Asynchronously retrieves <see cref="T:Splunk.Client.ServerSettings"/> from the current
            <see cref="T:Splunk.Client.Server"/> endpoint.
            </summary>
            <returns>
            An object representing the server settings from the Splunk server
            represented by the current instance.
            </returns>
            <seealso cref="M:Splunk.Client.IServer.GetSettingsAsync()"/>
        </member>
        <member name="M:Splunk.Client.IServerContract.RestartAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously restarts the current <see cref="T:Splunk.Client.Server"/> and then
            optionally checks for a specified period of time for server availability.
            </summary>
            <param name="millisecondsDelay">
            The time to wait before canceling the check for server availability. The
            default value is <c>60000</c> specifying that the check for server
            avaialability will continue for up to 60 seconds. A value of <c>0</c>
            specifices that no check should be made. A value of
            <c>-1</c> specifies an infinite wait time.
            </param>
            <param name="retryInterval">
            The time to wait between checks for server availability in milliseconds.
            The default value is <c>250</c> specifying that the time between checks
            for server availability is one quarter of a second.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
            <seealso cref="M:Splunk.Client.IServer.RestartAsync(int,int)"/>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="millisecondsDelay"/> is less than <c>-1</c>.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The restart operation failed.
            </exception>
            <exception cref="T:System.OperationCanceledException">
            The check for server availability was canceled after
            <paramref name="millisecondsDelay"/>.
            </exception>
            <exception cref="T:Splunk.Client.UnauthorizedAccessException">
            Insufficient privileges to restart the current <see cref="T:Splunk.Client.Server"/>.
            </exception>
        </member>
        <member name="M:Splunk.Client.IServerContract.UpdateSettingsAsync(Splunk.Client.ServerSettingValues)">
            <summary>
            Asynchronously updates setting values on the current <see cref="T:Splunk.Client.Server"/>.
            </summary>
            <param name="values">
            An object representing the setting values to be changed.
            </param>
            <returns>
            An object representing the updated server settings.
            </returns>
            <seealso cref="M:Splunk.Client.IServer.UpdateSettingsAsync(ServerSettingValues)"/>
        </member>
        <member name="P:Splunk.Client.IServerContract.Messages">
            <summary>
            Gets the server messages collection associated with the current
            <see cref="T:Splunk.Client.Server"/>.
            </summary>
            <value>
            The messages.
            </value>
            <seealso cref="P:Splunk.Client.IServer.Messages"/>
        </member>
        <member name="T:Splunk.Client.IServerInfo">
            <summary>
            Provides an operational interface to the Splunk server info resource.
            </summary>
            <seealso cref="T:IBaseResource"/>
        </member>
        <member name="P:Splunk.Client.IServerInfo.ActiveLicenseGroup">
            <summary>
            Gets the name of the active license group for the Splunk server instance.
            </summary>
            <value>
            The active license group.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.AddOns">
            <summary>
            Gets the add ons installed on the Splunk server instance.
            </summary>
            <value>
            The add ons.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.Build">
            <summary>
            Gets the build number for the Splunk server instance.
            </summary>
            <value>
            The build.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.CpuArchitecture">
            <summary>
            Gets CPU architecture information for the computer hosting splunkd.
            </summary>
            <value>
            The CPU architecture.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.Eai">
            <summary>
            Gets the extensible administration interface properties for the Splunk
            server instance.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.Guid">
            <summary>
            Gets the <see cref="P:Splunk.Client.IServerInfo.Guid"/> identifying the Splunk server instance.
            </summary>
            <value>
            The <see cref="P:Splunk.Client.IServerInfo.Guid"/> identifying the Splunk server instance.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.IsFree">
            <summary>
            Gets a value indicating whether the server instance is running under a
            free license.
            </summary>
            <value>
            <c>true</c> if this object is free, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.IsRealTimeSearchEnabled">
            <summary>
            Gets a value indicating whether the server instance is realtime search
            enabled.
            </summary>
            <value>
            <c>true</c> if a real time search is enabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.IsTrial">
            <summary>
            Gets a value indicating whether the server instance is running under a
            trial license.
            </summary>
            <value>
            <c>true</c> if this object is trial, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.LicenseKeys">
            <summary>
            Gets the list of license keys installed on the server instance.
            </summary>
            <value>
            The license keys.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.LicenseLabels">
            <summary>
            Gets the list of labels for the license keys installed on the server
            instance.
            </summary>
            <value>
            The license labels.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.LicenseSignature">
            <summary>
            Gets the has signature for the license keys installed on the server
            instance.
            </summary>
            <value>
            The license signature.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.LicenseState">
            <summary>
            Gets the status of the licenses installed on the serve instance.
            </summary>
            <value>
            The license state.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.MasterGuid">
            <summary>
            Gets the <see cref="P:Splunk.Client.IServerInfo.Guid"/> identifying the license master for the Splunk
            server instance.
            </summary>
            <value>
            Unique identifier of the master.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.Mode">
            <summary>
            Gets a value that specifies whether the Splunk server is a dedicated
            forwarder or a normal instance.
            </summary>
            <value>
            A value specifying whether the Splunk server is a dedicated forwarder
            or a normal instance.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.NumberOfCores">
            <summary>
            Gets the number of processor cores installed on the Splunk server
            instance.
            </summary>
            <value>
            The total number of cores.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.OSBuild">
            <summary>
            Gets build information for the operating system running splunkd.
            </summary>
            <value>
            The operating system build.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.OSName">
            <summary>
            Gets the name of the operating system running splunkd.
            </summary>
            <value>
            The name of the operating system.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.OSVersion">
            <summary>
            Gets version information for the operating system running splunkd.
            </summary>
            <value>
            The operating system version.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.PhysicalMemoryMB">
            <summary>
            Gets the number of megabytes of physical memory installed on the Splunk
            server instance.
            </summary>
            <value>
            The physical memory megabytes.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.RealTimeSearchEnabled">
            <summary>
            Gets a value that indicates whether realtime search is enabled on the
            Splunk server instance.
            </summary>
            <value>
            <c>true</c> if real time search enabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.ServerName">
            <summary>
            Gets the fully qualified name of the Splunk server instance.
            </summary>
            <value>
            The name of the server.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.StartupTime">
            <summary>
            Gets the time that the Splunk server instance last started up.
            </summary>
            <value>
            The startup time.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerInfo.Version">
            <summary>
            Gets the version of the Splunk server instance.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="T:Splunk.Client.IServerMessage">
            <summary>
            Provides an object representation of a Splunk server message entity.
            </summary>
            <seealso cref="T:IEntity"/>
        </member>
        <member name="P:Splunk.Client.IServerMessage.Eai">
            <summary>
            Gets the extensible administration interface properties.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerMessage.Severity">
            <summary>
            Gets the severity.
            </summary>
            <value>
            The severity.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerMessage.Text">
            <summary>
            Gets the text of the server message.
            </summary>
            <value>
            Text of the server messages.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerMessage.TimeCreated">
            <summary>
            Gets the Date/Time of the time created.
            </summary>
            <value>
            The time created.
            </value>
        </member>
        <member name="T:Splunk.Client.IServerMessageCollection`1">
            <summary>
            Provides a class for accessing Splunk server messages.
            </summary>
            <remarks>
            Most messages are created by splunkd to inform the user of system
            problems. Splunk Web typically displays these as bulletin board messages.
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/w3Rmjp">REST API: messages</a>.
            </description></item>
            </list>
            </remarks>
            <typeparam name="TServerMessage">
            Type of the server message.
            </typeparam>
            <seealso cref="T:IPaginated"/>
            <seealso cref="T:IEntityCollection{TServerMessage"/>
        </member>
        <member name="M:Splunk.Client.IServerMessageCollection`1.CreateAsync(System.String,Splunk.Client.ServerMessageSeverity,System.String)">
            <summary>
            Asyncrhonously creates a new <see cref="T:Splunk.Client.ServerMessage"/>.
            </summary>
            <param name="name">
            Name of the server message to create.
            </param>
            <param name="type">
            The severity of the server message.
            </param>
            <param name="text">
            The text of the server message.
            </param>
            <returns>
            An object representing the newly created server message.
            </returns>
        </member>
        <member name="M:Splunk.Client.IServerMessageCollection`1.GetSliceAsync(Splunk.Client.ServerMessageCollection.Filter)">
            <summary>
            Asynchronously retrieves select entities from the list of entites in the
            current <see cref="T:Splunk.Client.ServerMessageCollection"/>.
            </summary>
            <remarks>
            Following completion of the operation the list of entities in the current
            <see cref="T:Splunk.Client.ServerMessageCollection"/> will contain all changes since the
            select entites were last retrieved.
            </remarks>
            <param name="criteria">
            The criteria.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="T:Splunk.Client.IServerMessageCollectionContract`1">
            <summary>
            A server message collection contract.
            </summary>
            <typeparam name="TServerMessage">
            Type of the server message.
            </typeparam>
            <seealso cref="T:Splunk.Client.IServerMessageCollection{TServerMessage}"/>
        </member>
        <member name="T:Splunk.Client.IServerSettings">
            <summary>
            Provides an operational interface the Splunk server settings resource.
            </summary>
            <seealso cref="T:IBaseResource"/>
        </member>
        <member name="P:Splunk.Client.IServerSettings.Eai">
            <summary>
            Gets the extensible administration interface properties for the Splunk
            server instance.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.SplunkDB">
            <summary>
            Gets the path to the default index for Splunk.
            </summary>
            <value>
            The splunk database.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.SplunkHome">
            <summary>
            Gets the path to the local installation of Splunk.
            </summary>
            <value>
            The splunk home.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.EnableSplunkWebSsl">
            <summary>
            Gets a value that indicates whether Splunk web is enabled for HTTPS or
            HTTP.
            </summary>
            <remarks>
            A value of <c>true</c> indicates that Splunk Web is enabled for HTTPS and
            SSL. A value of <c>false</c> indicates that Splunk Web is enabled for
            HTTP and that SSL is disabled.
            </remarks>
            <value>
            <c>true</c> if enable splunk web ssl, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.Host">
            <summary>
            Gets the default hostname to use for data inputs that do not override
            this setting.
            </summary>
            <value>
            The default hostname.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.HttpPort">
            <summary>
            Gets the port on which Splunk Web is listening.
            </summary>
            <value>
            The HTTP port.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.ManagementHostPort">
            <summary>
            Gets the port on which splunkd is listening for management operations.
            </summary>
            <value>
            The management host port.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.MinFreeSpace">
            <summary>
            Gets the amount of space in megabytes that must exist for splunkd to
            continue operating.
            </summary>
            <remarks>
            This value affects search and indexing. Before attempting to launch a
            search, Splunk requires this amount of free space on the file system
            where the dispatch directory is located:
            <c> "$SPLUNK_HOME/var/run/splunk/dispatch</c>). It is applied
            similarly to the search quota values in <c>authorize.conf</c>
            and <c>limits.conf</c>. Splunk periodically checks space on all
            partitions that contain indexes as specified by <c>indexes.conf</c>. When
            you need to clear more disk space indexing is paused and Splunk posts a
            UI banner and warning.
            </remarks>
            <value>
            The minimum free space.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.Pass4SymmetricKey">
            <summary>
            Gets the password string that is prefixed to the Splunk symmetric key,
            generating the final key to sign all traffic between master/slave
            licensers.
            </summary>
            <value>
            The pass 4 symmetric key.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.ServerName">
            <summary>
            Gets an ASCII String to use as the name of a Splunk instance for features
            such as distributed search.
            </summary>
            <remarks>
            The default value is &lt;![CDATA[&lt;hostname&gt;-&lt;user-running-
            splunk&gt;]]&gt;.
            </remarks>
            <value>
            The name of the server.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.SessionTimeout">
            <summary>
            Gets the amount of time before a user session times out.
            </summary>
            <value>
            The session timeout.
            </value>
            <remarks>
            This value is expressed as a search-like time range.
            <example>Examples:</example>
            <code>
            args.SessionTimeout = "24h"; // 24 hours
            args.SessionTimeout = "3d";  // 3 days
            args.SessionTimeout = 7200s; // 7,200 seconds or two hours
            </code>
            </remarks>
        </member>
        <member name="P:Splunk.Client.IServerSettings.StartWebServer">
            <summary>
            Gets a value indicating whether Splunk Web is enabled.
            </summary>
            <remarks>
            A value of <c>true</c> indicates that Splunk Web is enabled.
            </remarks>
            <value>
            <c>true</c> if start web server, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.IServerSettings.TrustedIP">
            <summary>
            Gets the IP address of the authenticating proxy.
            </summary>
            <remarks>
            If the authentication proxy is disabled, a value of <c>null</c> is
            returned.
            </remarks>
            <value>
            The trusted IP.
            </value>
        </member>
        <member name="T:Splunk.Client.IService">
            <summary>
            Provides an operational interface to the Splunk REST API.
            </summary>
        </member>
        <member name="M:Splunk.Client.IService.GetCapabilitiesAsync">
            <summary>
            Asynchronously retrieves the list of all Splunk system capabilities.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/kgTKvM">GET
            authorization/capabilities</a> endpoint to construct a list of all Splunk
            system capabilities.
            </remarks>
            <returns>
            An object representing the list of all Splunk system capabilities.
            </returns>
        </member>
        <member name="M:Splunk.Client.IService.LogOnAsync(System.String,System.String)">
            <summary>
            Provides user authentication asynchronously.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/hdNhwA">POST auth/login</a>
            endpoint. The session key this endpoint returns is used for subsequent
            requests. It is accessible via the <see cref="P:Splunk.Client.IService.SessionKey"/> property.
            </remarks>
            <param name="username">
            Splunk account username.
            </param>
            <param name="password">
            Splunk account password for username.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IService.LogOffAsync">
            <summary>
            Ends the session by associated with the current instance.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/hdNhwA">DELETE
            authentication/httpauth-tokens/{name}</a> endpoint to end the the session
            by removing <see cref="P:Splunk.Client.IService.SessionKey"/>.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IService.DispatchSavedSearchAsync(System.String,Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
            <summary>
            Asynchronously dispatches a <see cref="T:Splunk.Client.SavedSearch"/> just like the
            scheduler would.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/AfzBJO">POST
            saved/searches/{name}/dispatch</a> endpoint to dispatch the
            <see cref="T:Splunk.Client.SavedSearch"/> identified by <paramref name="name"/>.
            </remarks>
            <param name="name">
            The name of the <see cref="T:Splunk.Client.SavedSearch"/> to dispatch.
            </param>
            <param name="dispatchArgs">
            A set of arguments to the dispatcher.
            </param>
            <param name="templateArgs">
            A set of template arguments to the <see cref="T:Splunk.Client.SavedSearch"/>.
            </param>
            <returns>
            The search <see cref="T:Splunk.Client.Job"/> that was dispatched.
            </returns>
        </member>
        <member name="M:Splunk.Client.IService.ExportSearchPreviewsAsync(System.String,Splunk.Client.SearchExportArgs)">
            <summary>
            Asynchronously exports an observable sequence of search result previews.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/vJvIXv">GET
            search/jobs/export</a> endpoint to export an obervable sequence of search
            result previews.
            </remarks>
            <param name="search">
            Splunk search command.
            </param>
            <param name="args">
            Optional export arguments.
            </param>
            <returns>
            An object representing an observable sequence of search result previews.
            </returns>
        </member>
        <member name="M:Splunk.Client.IService.ExportSearchResultsAsync(System.String,Splunk.Client.SearchExportArgs)">
            <summary>
            Asynchronously exports an observable sequence of search results.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/vJvIXv">GET
            search/jobs/export</a> endpoint to export an observable sequence of
            search results.
            </remarks>
            <param name="search">
            A Splunk search command.
            </param>
            <param name="args">
            Optional export arguments.
            </param>
            <returns>
            An object representing an observable sequence of search result previews.
            </returns>
        </member>
        <member name="M:Splunk.Client.IService.SearchAsync(System.String,System.Int32,Splunk.Client.ExecutionMode,Splunk.Client.JobArgs,Splunk.Client.CustomJobArgs)">
            <summary>
            Asycnrononusly creates and executes a normal or blocking Splunk search job.
            </summary>
            <param name="search">
            
            </param>
            <param name="count">
                                
            </param>
            <param name="mode">
            
            </param>
            <param name="args">
            
            </param>
            <param name="customArgs">
            
            </param>
            <returns>
            An object representing the Splunk search job created.
            </returns>
        </member>
        <member name="M:Splunk.Client.IService.SearchOneShotAsync(System.String,System.Int32,Splunk.Client.JobArgs,Splunk.Client.CustomJobArgs)">
            <summary>
            Asynchronously executes a one shot search.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/b02g1d">POST search/jobs</a>
            endpoint to execute a one shot search.
            </remarks>
            <param name="search">
            Search string.
            </param>
            <param name="count">
            
            </param>
            <param name="args">
            Optional job arguments.
            </param>
            <param name="customArgs">
            
            </param>
            <returns>
            An object representing the stream search results.
            </returns>
        </member>
        <member name="P:Splunk.Client.IService.Context">
            <summary>
            Gets the <see cref="P:Splunk.Client.IService.Context"/> instance for this <see cref="T:Splunk.Client.Service"/>.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.Namespace">
            <summary>
            Gets the <see cref="P:Splunk.Client.IService.Namespace"/> used by this <see cref="T:Splunk.Client.Service"/>.
            </summary>
            <value>
            The namespace.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.SessionKey">
            <summary>
            Gets or sets the session key used by this <see cref="T:Splunk.Client.Service"/>.
            </summary>
            <value>
            The session key.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.Applications">
            <summary>
            Gets the applications.
            </summary>
            <value>
            The applications.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.Configurations">
            <summary>
            Gets the configurations.
            </summary>
            <value>
            The configurations.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.Indexes">
            <summary>
            Gets the indexes.
            </summary>
            <value>
            The indexes.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.Jobs">
            <summary>
            Gets an object representing the collection of Splunk search jobs.
            </summary>
            <value>
            An object representing the collection of Splunk search jobs.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.SavedSearches">
            <summary>
            Gets an object representing the collection of Splunk saved searches.
            </summary>
            <value>
            An object representing the collection of Splunk saved searches.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.Server">
            <summary>
            Gets the server.
            </summary>
            <value>
            The server.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.StoragePasswords">
            <summary>
            Gets the storage passwords.
            </summary>
            <value>
            The storage passwords.
            </value>
        </member>
        <member name="P:Splunk.Client.IService.Transmitter">
            <summary>
            Gets the transmitter.
            </summary>
            <value>
            The transmitter.
            </value>
        </member>
        <member name="T:Splunk.Client.IServiceContract">
            <summary>
            A service contract.
            </summary>
            <seealso cref="T:Splunk.Client.IService"/>
        </member>
        <member name="T:Splunk.Client.IStoragePassword">
            <summary>
            Interface for storage password.
            </summary>
            <seealso cref="T:IEntity"/>
        </member>
        <member name="M:Splunk.Client.IStoragePassword.UpdateAsync(System.String)">
             <summary>
             Asynchronously updates the storage password represented by the current
             instance.
             </summary>
             <remarks>
             This method uses the <a href="http://goo.gl/s0Bw7H">POST
             storage/passwords/{name}</a> endpoint to update the storage password
             represented by the current instance.
             </remarks>
            
             <exception cref="T:System.ArgumentNullException">
             <paramref name="password"/> is <c>null</c>.
             </exception>
             <exception cref="T:Splunk.Client.RequestException">
             
             </exception>
             <exception cref="T:Splunk.Client.ResourceNotFoundException">
             
             </exception>
             <exception cref="T:Splunk.Client.UnauthorizedAccessException">
             
             </exception>
             <param name="password">
             New storage password.
             </param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
             </returns>
        </member>
        <member name="P:Splunk.Client.IStoragePassword.ClearPassword">
            <summary>
            Gets the plain text version of the current <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The clear password.
            </value>
        </member>
        <member name="P:Splunk.Client.IStoragePassword.Eai">
            <summary>
            Gets the extensible administration interface properties for the current
            <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
        </member>
        <member name="P:Splunk.Client.IStoragePassword.EncryptedPassword">
            <summary>
            Gets an encrypted version of the current <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The encrypted password.
            </value>
        </member>
        <member name="P:Splunk.Client.IStoragePassword.Password">
            <summary>
            Gets the masked version of the current <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <remarks>
            This is always stored as <c>"********"</c>.
            </remarks>
            <value>
            The password.
            </value>
        </member>
        <member name="P:Splunk.Client.IStoragePassword.Realm">
            <summary>
            Gets the realm in which the current <see cref="T:Splunk.Client.StoragePassword"/>
            is valid.
            </summary>
            <value>
            The realm.
            </value>
        </member>
        <member name="P:Splunk.Client.IStoragePassword.Username">
            <summary>
            Gets the Splunk username associated with the current
            <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="T:Splunk.Client.IStoragePasswordContract">
            <summary>
            A storage password contract.
            </summary>
            <seealso cref="T:Splunk.Client.IStoragePassword"/>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordContract.GetAsync">
            <summary>
            Asynchronously retrieves a fresh copy of the current <see cref="T:Splunk.Client.StoragePassword"/> that contains all changes to it since it was 
            last retrieved.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordContract.RemoveAsync">
            <summary>
            Removes the asynchronous.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordContract.UpdateAsync(Splunk.Client.Argument[])">
            <summary>
            Asynchronously updates the storage password represented by the current
            instance.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordContract.UpdateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously updates the storage password represented by the current
            instance.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordContract.UpdateAsync(System.String)">
             <summary>
             Asynchronously updates the storage password represented by the current
             instance.
             </summary>
             <param name="password">
             New storage password.
             </param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
             </returns>
             <seealso cref="M:Splunk.Client.IStoragePassword.UpdateAsync(string)"/>
            
             <exception cref="T:System.ArgumentNullException">
             <paramref name="password"/> is <c>null</c>.
             </exception>
             <exception cref="T:Splunk.Client.RequestException">
             
             </exception>
             <exception cref="T:Splunk.Client.ResourceNotFoundException">
             
             </exception>
             <exception cref="T:Splunk.Client.UnauthorizedAccessException">
             
             </exception>
        </member>
        <member name="P:Splunk.Client.IStoragePasswordContract.ClearPassword">
            <summary>
            Gets the plain text version of the current <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The clear password.
            </value>
            <seealso cref="P:Splunk.Client.IStoragePassword.ClearPassword"/>
        </member>
        <member name="P:Splunk.Client.IStoragePasswordContract.Eai">
            <summary>
            Gets the extensible administration interface properties for the current
            <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The extensible administration interface properties.
            </value>
            <seealso cref="P:Splunk.Client.IStoragePassword.Eai"/>
        </member>
        <member name="P:Splunk.Client.IStoragePasswordContract.EncryptedPassword">
            <summary>
            Gets an encrypted version of the current <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The encrypted password.
            </value>
            <seealso cref="P:Splunk.Client.IStoragePassword.EncryptedPassword"/>
        </member>
        <member name="P:Splunk.Client.IStoragePasswordContract.Password">
            <summary>
            Gets the masked version of the current <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The password.
            </value>
            <seealso cref="P:Splunk.Client.IStoragePassword.Password"/>
        </member>
        <member name="P:Splunk.Client.IStoragePasswordContract.Realm">
            <summary>
            Gets the realm in which the current <see cref="T:Splunk.Client.StoragePassword"/>
            is valid.
            </summary>
            <value>
            The realm.
            </value>
            <seealso cref="P:Splunk.Client.IStoragePassword.Realm"/>
        </member>
        <member name="P:Splunk.Client.IStoragePasswordContract.Username">
            <summary>
            Gets the Splunk username associated with the current
            <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The username.
            </value>
            <seealso cref="P:Splunk.Client.IStoragePassword.Username"/>
        </member>
        <member name="T:Splunk.Client.IStoragePasswordCollection`1">
            <summary>
            Interface for storage password collection.
            </summary>
            <typeparam name="TStoragePassword">
            Type of the storage password.
            </typeparam>
            <seealso cref="T:IPaginated"/>
            <seealso cref="T:IEntityCollection{TStoragePassword"/>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordCollection`1.CreateAsync(System.String,System.String,System.String)">
            <summary>
            Asynchronously creates a new <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/JgyIeN">POST
            storage/passwords</a> endpoint to create a <see cref="T:Splunk.Client.StoragePassword"/>
            identified by <paramref name="username"/> and <paramref name="realm"/>.
            </remarks>
            <param name="password">
            Password to be stored.
            </param>
            <param name="username">
            The username associated with the password to be stored.
            </param>
            <param name="realm">
            Optional domain or realm name associated with the password to be stored.
            </param>
            <returns>
            The new asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordCollection`1.GetAsync(System.String,System.String)">
            <summary>
            Asynchronously retrieves a <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/HL3c0T">GET
            storage/passwords/{name}</a> endpoint to retrieve the
            <see cref="T:Splunk.Client.StoragePassword"/> identified by <paramref name="username"/>
            and
            <paramref name="realm"/>.
            </remarks>
            <param name="username">
            The username associated with the password to be retrieved.
            </param>
            <param name="realm">
            Optional domain or realm name associated with the password to be
            retrieved.
            </param>
            <returns>
            An object representing the storage password retrieved.
            </returns>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordCollection`1.GetOrNullAsync(System.String,System.String)">
            <summary>
            Asynchronously retrieves a <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/HL3c0T">GET
            storage/passwords/{name}</a> endpoint to retrieve the
            <see cref="T:Splunk.Client.StoragePassword"/> identified by <paramref name="username"/>
            and
            <paramref name="realm"/>.
            </remarks>
            <param name="username">
            The username associated with the password to be retrieved.
            </param>
            <param name="realm">
            Optional domain or realm name associated with the password to be
            retrieved.
            </param>
            <returns>
            An object representing the storage password retrieved or <c>null</c>, if
            no such storage password exists.
            </returns>
        </member>
        <member name="M:Splunk.Client.IStoragePasswordCollection`1.GetSliceAsync(Splunk.Client.StoragePasswordCollection.Filter)">
            <summary>
            Asynchronously retrieves select storage passwords from Splunk.
            </summary>
            <param name="criteria">
            Specifies the criteria used in selecting storage passwords.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="T:Splunk.Client.IStoragePasswordCollectionContract`1">
            <summary>
            A storage password collection contract.
            </summary>
            <typeparam name="TStoragePassword">
            Type of the storage password.
            </typeparam>
            <seealso cref="T:Splunk.Client.IStoragePasswordCollection{TStoragePassword}"/>
        </member>
        <member name="T:Splunk.Client.ITransmitter">
            <summary>
            Interface for transmitter.
            </summary>
        </member>
        <member name="M:Splunk.Client.ITransmitter.SendAsync(System.IO.Stream,System.String,Splunk.Client.TransmitterArgs)">
            <summary>
            Asynchronously sends a stream of raw events to Splunk.
            </summary>
            <remarks>
            This method the <a href="http://goo.gl/zFKzMp">POST receivers/stream</a>
            endpoint to send raw events to Splunk as they become available on
            <paramref name="eventStream"/>.
            </remarks>
            <param name="eventStream">
            The event stream.
            </param>
            <param name="indexName">
            Name of the index.
            </param>
            <param name="args">
            Arguments identifying the event type and destination.
            </param>
            <returns>
            A <see cref="T:System.IO.Stream"/> used to send events to Splunk.
            </returns>
        </member>
        <member name="M:Splunk.Client.ITransmitter.SendAsync(System.String,System.String,Splunk.Client.TransmitterArgs)">
            <summary>
            Asynchronously sends a single raw event to Splunk.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/GPLUVg">POST
            receivers/simple</a> endpoint to obtain the <see cref="T:Splunk.Client.SearchResult"/>
            that it returns.
            </remarks>
            <param name="eventText">
            Raw event text.
            </param>
            <param name="indexName">
            Name of the index.
            </param>
            <param name="args">
            Arguments identifying the event type and destination.
            </param>
            <returns>
            An object representing the event created by Splunk.
            </returns>
        </member>
        <member name="T:Splunk.Client.ITransmitterContract">
            <summary>
            A transmitter contract.
            </summary>
            <seealso cref="T:Splunk.Client.ITransmitter"/>
        </member>
        <member name="M:Splunk.Client.ITransmitterContract.SendAsync(System.IO.Stream,System.String,Splunk.Client.TransmitterArgs)">
            <summary>
            Asynchronously sends a stream of raw events to Splunk.
            </summary>
            <param name="eventStream">
            The event stream.
            </param>
            <param name="indexName">
            Name of the index.
            </param>
            <param name="args">
            The arguments.
            </param>
            <returns>
            A <see cref="T:System.IO.Stream"/> used to send events to Splunk.
            </returns>
            <seealso cref="M:Splunk.Client.ITransmitter.SendAsync(Stream,string,TransmitterArgs)"/>
        </member>
        <member name="M:Splunk.Client.ITransmitterContract.SendAsync(System.String,System.String,Splunk.Client.TransmitterArgs)">
            <summary>
            Asynchronously sends a single raw event to Splunk.
            </summary>
            <param name="eventText">
            Raw event text.
            </param>
            <param name="indexName">
            Name of the index.
            </param>
            <param name="args">
            Arguments identifying the event type and destination.
            </param>
            <returns>
            An object representing the event created by Splunk.
            </returns>
            <seealso cref="M:Splunk.Client.ITransmitter.SendAsync(string,string,TransmitterArgs)"/>
        </member>
        <member name="T:Splunk.Client.Job">
            <summary>
            Provides an object representation of a Splunk search job.
            </summary>
            <seealso cref="T:Splunk.Client.Entity{Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IJob"/>
        </member>
        <member name="M:Splunk.Client.Job.#ctor(Splunk.Client.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Application"/> class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <param name="name">
            An object identifying a Splunk resource within
            <paramref name="service"/>.<see cref="T:Splunk.Client.Namespace"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> or <paramref name="name"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Job.#ctor(Splunk.Client.Context,Splunk.Client.AtomEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Application"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="entry">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="entry"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="entry"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.Job.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Job"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="name">
            Name of the search <see cref="T:Splunk.Client.Job"/>.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is <c>null</c> or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.Job.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the <see cref="T:Splunk.Client.Job"/>
            class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Job.GetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.GetAsync(Splunk.Client.DispatchState,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.TransitionAsync(Splunk.Client.DispatchState,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.UpdateAsync(Splunk.Client.CustomJobArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.GetSearchResultsAsync(Splunk.Client.SearchResultArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.GetSearchEventsAsync(Splunk.Client.SearchEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.GetSearchPreviewAsync(Splunk.Client.SearchResultArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.CancelAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.DisablePreviewAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.EnablePreviewAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.FinalizeAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.PauseAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.SaveAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.SetPriorityAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.SetTtlAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.TouchAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.UnpauseAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.UnsaveAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Job.ReconstructSnapshotAsync(Splunk.Client.Response)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.CanSummarize">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.CursorTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.DefaultSaveTtl">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.DefaultTtl">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.DiskUsage">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.DispatchState">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.DoneProgress">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.DropCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Eai">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.EarliestTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.EventAvailableCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.EventCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.EventFieldCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.EventIsStreaming">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.EventIsTruncated">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.EventSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.EventSorting">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IndexEarliestTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IndexLatestTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsBatchModeSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsDone">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsFailed">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsFinalized">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsPaused">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsPreviewEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsRealTimeSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsRemoteTimeline">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsSaved">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsSavedSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.IsZombie">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Keywords">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.LatestTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.NormalizedSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.NumPreviews">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Performance">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Pid">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Priority">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.RemoteSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.ReportSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Request">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.ResultCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.ResultIsStreaming">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.ResultPreviewCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.RunDuration">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Runtime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.ScanCount">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Search">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.SearchEarliestTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.SearchLatestTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.SearchProviders">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Sid">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.StatusBuckets">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.Ttl">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.Job.RuntimeAdapter">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.RuntimeAdapter.AutoCancel">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Job.RuntimeAdapter.AutoPause">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.JobArgs">
            <summary>
            Provides arguments for creating a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/OWTUws">REST API Reference: POST search/jobs</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.JobArgs}"/>
        </member>
        <member name="P:Splunk.Client.JobArgs.AutoCancel">
            <summary>
            Gets or sets a value that specifies how long a <see cref="T:Splunk.Client.Job"/>
            may be inactive before it is automatically cancelled.
            </summary>
            <remarks>
            A value of <c>0</c> specifies that a <see cref="T:Splunk.Client.Job"/> is never
            automatically cancelled.
            </remarks>
            <value>
            A value that specifies how long a <see cref="T:Splunk.Client.Job"/> may be inactive
            before it is automatically cancelled.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.AutoFinalizeEventCount">
            <summary>
            Gets or sets a value that specifies how many events a <see cref="T:Splunk.Client.Job"/>
            must process before it is automatically finalized.
            </summary>
            <remarks>
            A value of <c>0</c> specifies that a <see cref="T:Splunk.Client.Job"/> is never
            automatically finalized.
            </remarks>
            <value>
            A value that specifies how many events a <see cref="T:Splunk.Client.Job"/> must process
            before it is automatically finalized.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.AutoPause">
            <summary>
            Gets or sets a value that specifies how long a <see cref="T:Splunk.Client.Job"/>
            may run before it is automatically paused.
            </summary>
            <remarks>
            A value of <c>0</c> specifies that a <see cref="T:Splunk.Client.Job"/> is never
            automatically paused.
            </remarks>
            <value>
            A value that specifies how long a <see cref="T:Splunk.Client.Job"/> may run before it is
            automatically paused.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.EarliestTime">
            <summary>
            Gets or sets a time string that specifies the earliest inclusive time
            bounds for a <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The time string can be either a UTC time (with fractional seconds), a
            relative time specifier (to now) or a formatted time string. Refer to
            <a href="http://goo.gl/4P41jH">Time modifiers for search
            </a> for information and examples of specifying a time string.
            </remarks>
            <value>
            A time string that specifies the earliest inclusive time bounds for a
            <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.EnableLookups">
            <summary>
            Gets or sets a value that indicates whether lookups should be applied to
            events processed by a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The default value is <c>true</c>. Depending on the nature of the lookups
            a search <see cref="T:Splunk.Client.Job"/> may take significantly longer to execute when
            the value of this property is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if lookups should be applied to events processed by the
            search <see cref="T:Splunk.Client.Job"/>; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.ForceBundleReplication">
            <summary>
            Gets or sets a value that specifies whether a <see cref="T:Splunk.Client.Job"/>
            should cause (and wait, depending on the value of
            <see cref="P:Splunk.Client.JobArgs.SyncBundleReplication"/> for bundle synchronization 
            with all search peers.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the <see cref="T:Splunk.Client.Job"/> should cause (and wait, 
            depending on the value of <see cref="P:Splunk.Client.JobArgs.SyncBundleReplication"/>) for
            bundle synchronization with all search peers.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.Id">
            <summary>
            Gets or sets the search ID (SID) for a <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            A random SID is generated by default.
            </remarks>
            <value>
            The SID for the <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.IndexEarliest">
            <summary>
            Gets or sets a time string that specifies the earliest inclusive time
            bounds for a <see cref="T:Splunk.Client.Job"/> based on the index time bounds.
            </summary>
            <remarks>
            The time string can be either a UTC time (with fractional seconds), a
            relative time specifier (to now) or a formatted time string. Refer to
            <a href="http://goo.gl/4P41jH">Time modifiers for search
            </a> for information and examples of specifying a time string.
            </remarks>
            <value>
            A time string that specifies the earliest inclusive time bounds for a
            <see cref="T:Splunk.Client.Job"/> based on the index time bounds.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.IndexLatest">
            <summary>
            Gets or sets a time string that specifies the latest exclusive time
            bounds for a <see cref="T:Splunk.Client.Job"/> based on the index time bounds.
            </summary>
            <remarks>
            The time string can be either a UTC time (with fractional seconds), a
            relative time specifier (to now) or a formatted time string. Refer to
            <a href="http://goo.gl/4P41jH">Time modifiers for search
            </a> for information and examples of specifying a time string.
            </remarks>
            <value>
            A time string that specifies the latest exclusive time bounds for a
            <see cref="T:Splunk.Client.Job"/> based on the index time bounds.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.LatestTime">
            <summary>
            Gets or sets a time string that specifies the latest exclusive time
            bounds for a <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The time string can be either a UTC time (with fractional seconds), a
            relative time specifier (to now) or a formatted time string. Refer to
            <a href="http://goo.gl/4P41jH">Time modifiers for search
            </a> for information and examples of specifying a time string.
            </remarks>
            <value>
            A time string that specifies the latest exclusive time bounds for a
            <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.MaxCount">
            <summary>
            Gets or sets the number of events that can be accessible in any given
            status bucket.
            </summary>
            <remarks>
            In transforming mode this value also specifies the maximum number of
            results to store. The default value is <c>10000</c>.
            </remarks>
            <value>
            The number of events that can be accessible in any given status bucket.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.MaxTime">
            <summary>
            Gets or sets the number of seconds to run a <see cref="T:Splunk.Client.Job"/>
            before finalizing.
            </summary>
            <remarks>
            A value of <c>0</c> specifies that a <see cref="T:Splunk.Client.Job"/> should never
            finalize.
            </remarks>
            <value>
            The number of seconds to run a <see cref="T:Splunk.Client.Job"/> before finalizing.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.Namespace">
            <summary>
            Gets or sets the application namespace in which to restrict searches.
            </summary>
            <remarks>
            The namespace corresponds to the identifier recognized in the
            /services/apps/local endpoint.
            </remarks>
            <value>
            The application namespace in which to restrict searches.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.Now">
            <summary>
            Gets or sets a time string to set the absolute time used for any relative
            time specifier in a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The default value is the current system time. You can specify a relative
            time modifier for this property. For example, set the value to
            <c>"+2d"</c> to specify the current time plus two days. If you specify a
            relative time modifier both in this parameter and in the search string,
            the search string modifier takes precedence. See
            <a href="http://goo.gl/PbEO2j">Time modifiers for search</a>
            for details on relative time modifiers.
            </remarks>
            <value>
            A time string to set the absolute time used for any relative time
            specifier in a search <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.RealTimeBlocking">
            <summary>
            Gets or sets a value indicating whether the indexer blocks if the queue
            for a realtime search <see cref="T:Splunk.Client.Job"/> is full.
            </summary>
            <remarks>
            The default value is <c>false</c>. This property only applies to realtime
            search jobs.
            </remarks>
            <value>
            <c>true</c>, if the indexer should block if the queue for a realtime
            search <see cref="T:Splunk.Client.Job"/> is full; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.RealTimeIndexFilter">
            <summary>
            Gets or sets a value indicating whether the indexer prefilters events.
            </summary>
            <remarks>
            The default value is <c>true</c>. This property only applies to realtime
            search jobs.
            </remarks>
            <value>
            <c>true</c>, if the indexer should prefilter events; <c>false</c>
            otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.RealTimeMaxBlockSeconds">
            <summary>
            Gets or sets a value that specifies the maximum time to block when
            <see cref="P:Splunk.Client.JobArgs.RealTimeBlocking"/> is <c>true</c>.
            </summary>
            <remarks>
            This property only applies to realtime search jobs. The default value is
            <c>60</c>, equivalent to one minute. Specify a value of
            <c>0</c> to block for an indefinite period of time.
            </remarks>
            <value>
            The maximum time to block when <see cref="P:Splunk.Client.JobArgs.RealTimeBlocking"/> is
            <c>true</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.RealTimeQueueSize">
            <summary>
            Gets or sets the queue size in events that the indexer should use for a
            realtime search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            This property only applies to realtime search jobs. The default value is
            <c>10000</c> events.
            </remarks>
            <value>
            The queue size in events for the realtime search <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.ReduceFrequency">
            <summary>
            Gets or sets a value that specifies how frequently to run the map/reduce
            reduce phase on accumulated map values.
            </summary>
            <remarks>
            The default value is <c>0</c>.
            </remarks>
            <value>
            A value that specifies how frequently to run the map/reduce reduce phase
            on accumulated map values.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.ReloadMacros">
            <summary>
            Gets or sets a value that indicates whether macro definitions should be
            reloaded from <a href="http://goo.gl/4iCRz4"><c>
            macros.conf</c></a>.
            </summary>
            <remarks>
            The default value is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if macro definitions should be reloaded from <a href=
            "http://goo.gl/4iCRz4"><c>macros.conf</c></a>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.RemoteServerList">
            <summary>
            Gets or sets a comma-separated list of servers from which raw events
            should be pulled.
            </summary>
            <remarks>
            The server names may be specified as wildcard names.
            </remarks>
            <value>
            A comma-separated list of servers from which raw events should be pulled.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.RequiredFieldList">
            <summary>
            Gets or sets a required field list to a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            These fields, even if not referenced or used directly by the search
            <see cref="T:Splunk.Client.Job"/>, are still included by the events and summary
            endpoints. Splunk Web uses them to prepopulate panels in the Search view.
            </remarks>
            <value>
            A list of required fields for the search <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.ReuseMaxSecondsAgo">
            <summary>
            Gets or sets a value that specifies the number of seconds ago to check
            when an identical search <see cref="T:Splunk.Client.Job"/> was started and returns that
            search ID instead of starting a new <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <value>
            The number of seconds ago to check when an identical search
            <see cref="T:Splunk.Client.Job"/> was started.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.SearchListener">
            <summary>
            Gets or sets a value used to register a search state listener with a
            search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            Express this value as a string of the form <![CDATA[<search-state>;<results-condition>;<http-method>;<uri>;]]>.
            <example>Example:</example>
            <code>
            job.SearchListener = "onResults;true;POST;/servicesNS/admin/search/saved/search/foobar/notify;";
            </code>
            </remarks>
            <value>
            Search state listener registration entry.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.SearchMode">
            <summary>
            Gets or sets the mode for a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.JobArgs.SearchMode"/><c>.Normal</c>. If set to
            <see cref="P:Splunk.Client.JobArgs.SearchMode"/><c>.RealTime</c>realtime, the search
            <see cref="T:Splunk.Client.Job"/> runs over live data. A real-time search may also be
            indicated by setting the <see cref="P:Splunk.Client.JobArgs.EarliestTime"/> and
            <see cref="P:Splunk.Client.JobArgs.LatestTime"/> properties to <c>"rt"</c> even if the
            <c>SearchMode</c> is set to <see cref="P:Splunk.Client.JobArgs.SearchMode"/><c>.Normal</c>.
            <para>
            For a real-time search, if both <see cref="P:Splunk.Client.JobArgs.EarliestTime"/> and
            <see cref="P:Splunk.Client.JobArgs.LatestTime"/> are set to <c>"rt"</c>, the search
            represents all appropriate live data received since the start of the
            search. Additionally, if <see cref="P:Splunk.Client.JobArgs.EarliestTime"/> and/or
            <see cref="P:Splunk.Client.JobArgs.LatestTime"/> are set to <c>"rt"</c> followed by a
            relative time specifier then a sliding window is used where the time
            bounds of the window are determined by the relative time specifiers and
            are continuously updated based on the wall-clock time.
            </para>
            </remarks>
            <value>
            The mode for a search <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.SpawnProcess">
            <summary>
            Gets or sets a value that indicates whether a search <see cref="T:Splunk.Client.Job"/>
            should run in a separate spawned process.
            </summary>
            <remarks>
            The default value is <c>true</c>. Searches against indexes must run in a
            separate process.
            </remarks>
            <value>
            <c>true</c>, if the search <see cref="T:Splunk.Client.Job"/> should run in a separate
            spawned process; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.StatusBuckets">
            <summary>
            Gets or sets a value that specifies the maximum number of status buckets
            to generate for a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The default value is <c>0</c>.
            </remarks>
            <value>
            The maximum number of status buckets to generate for the search
            <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.SyncBundleReplication">
            <summary>
            Gets or sets a value that indicates whether a <see cref="T:Splunk.Client.Job"/>
            should wait for bundle synchronization with all search peers.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the <see cref="T:Splunk.Client.Job"/> should wait for bundle
            synchronization with all search peers; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.TimeFormat">
            <summary>
            Gets or sets a format string used to convert a formatted time string from
            {start,end}_time into UTC seconds.
            </summary>
            <remarks>
            The default value is the ISO-8601 format.
            </remarks>
            <value>
            A time format string.
            </value>
        </member>
        <member name="P:Splunk.Client.JobArgs.Timeout">
            <summary>
            Gets or sets a value that specifies the number of seconds to keep a
            search <see cref="T:Splunk.Client.Job"/> after processing has stopped.
            </summary>
            <remarks>
            The default value is <c>86400</c>, equivalent to 24 hours.
            </remarks>
            <value>
            The number of seconds to keep the search <see cref="T:Splunk.Client.Job"/>after
            processing has stopped.
            </value>
        </member>
        <member name="T:Splunk.Client.JobCollection">
            <summary>
            Provides an object representation of a collection of Splunk search jobs.
            </summary>
            <seealso cref="T:Splunk.Client.EntityCollection{Splunk.Client.Job,Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IJobCollection{Splunk.Client.Job}"/>
        </member>
        <member name="M:Splunk.Client.JobCollection.#ctor(Splunk.Client.Service)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.JobCollection"/>
             class.
             </summary>
             <param name="service">
             An object representing a root Splunk service endpoint.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="service"/> is <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.JobCollection.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.JobCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.JobCollection.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.JobCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.JobCollection.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.JobCollection"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.JobCollection.CreateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Asynchronously creates a new search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            An object representing the search job that was created.
            </returns>
            <remarks>
            This method uses the <a href="http://goo.gl/JZcPEb">POST search/jobs</a>
            endpoint to start a new search <see cref="T:Splunk.Client.Job"/> as specified by
            <paramref name="arguments"/>.
            </remarks>
        </member>
        <member name="M:Splunk.Client.JobCollection.CreateAsync(System.String,System.Int32,Splunk.Client.ExecutionMode,Splunk.Client.JobArgs,Splunk.Client.CustomJobArgs,Splunk.Client.DispatchState)">
            <summary>
            Asynchronously creates a new search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/JZcPEb">POST search/jobs</a>
            endpoint to start a new search <see cref="T:Splunk.Client.Job"/> as specified by
            <paramref name="args"/>.
            </remarks>
            <param name="search">
            Search string.
            </param>
            <param name="count">
                                
            </param>
            <param name="mode">
                               
            </param>
            <param name="args">
            Optional search arguments.
            </param>
            <param name="customArgs">
            
            </param>
            <param name="requiredState">
            
            </param>
            <returns>
            An object representing the search job that was created.
            </returns>
        </member>
        <member name="M:Splunk.Client.JobCollection.GetSliceAsync(Splunk.Client.JobCollection.Filter)">
            <summary>
            Asynchronously retrieves a filtered collection of all running search jobs.
            </summary>
            <remarks>
            This method uses the <a href="http://goo.gl/ja2Sev">GET search/jobs</a>
            endpoint to get the filtered collection of running search jobs.
            </remarks>
            <param name="criteria">
            The criteria.
            </param>
            <returns>
            The slice asynchronous.
            </returns>
        </member>
        <member name="F:Splunk.Client.JobCollection.ClassResourceName">
            <summary>
            Name of the class resource.
            </summary>
        </member>
        <member name="P:Splunk.Client.JobCollection.Messages">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.JobCollection.Pagination">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.JobCollection.Filter">
            <summary>
            Provides arguments for retrieving a <see cref="T:Splunk.Client.JobCollection"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/ja2Sev">REST API Reference: GET search/jobs</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.JobCollection.Filter}"/>
        </member>
        <member name="P:Splunk.Client.JobCollection.Filter.Count">
            <summary>
            Gets or sets the maximum number of <see cref="T:Splunk.Client.Job"/> entries to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is <c>0</c>, then all available entries are
            returned. The default is <c>30</c>.
            </remarks>
            <value>
            The maximum number of <see cref="T:Splunk.Client.Job"/> entries to return.
            </value>
        </member>
        <member name="P:Splunk.Client.JobCollection.Filter.Offset">
            <summary>
            Gets or sets a value specifying the first result (inclusive)
            from which to begin returning <see cref="T:Splunk.Client.Job"/> entries.
            </summary>
            <remarks>
            The <c>Offset</c> property is zero-based and cannot be negative. The
            default value is zero.
            </remarks>
            <value>
            Index of the first result (inclusive) from which to begin returning
            <see cref="T:Splunk.Client.Job"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.JobCollection.Filter.Search">
            <summary>
            Gets or sets a search expression to filter <see cref="T:Splunk.Client.Job"/>
            entries.
            </summary>
            <remarks>
            Use this expression to filter the entries returned based on search
            <see cref="T:Splunk.Client.Job"/> properties. The default is <c>null</c>.
            </remarks>
            <value>
            A search expression to filter <see cref="T:Splunk.Client.Job"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.JobCollection.Filter.SortDirection">
            <summary>
            Gets or sets a value specifying the sort direction for <see cref="T:Splunk.Client.Job"/>
            entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.JobCollection.Filter.SortDirection"/>.Ascending.
            </remarks>
            <value>
            The sort direction for <see cref="T:Splunk.Client.Job"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.JobCollection.Filter.SortKey">
            <summary>
            Gets or sets the <see cref="T:Splunk.Client.Job"/> property to use for sorting entries.
            </summary>
            <remarks>
            The default <see cref="T:Splunk.Client.Job"/> property to use for sorting is
            <c>"dispatch_time"</c>.
            </remarks>
            <value>
            The <see cref="T:Splunk.Client.Job"/> property to use for sorting entries.
            </value>
        </member>
        <member name="T:Splunk.Client.LicenseState">
            <summary>
            Specifies the state of the license installed on a Splunk server instance.
            </summary>
        </member>
        <member name="F:Splunk.Client.LicenseState.Expired">
            <summary>
            The license is expired.
            </summary>
        </member>
        <member name="F:Splunk.Client.LicenseState.Ok">
            <summary>
            The license is in force.
            </summary>
        </member>
        <member name="T:Splunk.Client.Message">
            <summary>
            Provides a class that represents a Splunk service response message.
            </summary>
            <seealso cref="T:System.IComparable"/>
            <seealso cref="T:System.IComparable{Splunk.Client.Message}"/>
            <seealso cref="T:System.IEquatable{Splunk.Client.Message}"/>
        </member>
        <member name="M:Splunk.Client.Message.#ctor(Splunk.Client.MessageType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Message"/> class.
            </summary>
            <param name="type">
            The message type.
            </param>
            <param name="text">
            The message text.
            </param>
        </member>
        <member name="M:Splunk.Client.Message.CompareTo(System.Object)">
            <summary>
            Compares the current <see cref="T:Splunk.Client.Message"/> with another object and
            returns an integer that indicates whether the current
            <see cref="T:Splunk.Client.Message"/> precedes, follows, or appears in the same position
            in the sort order as the other object.
            </summary>
            <param name="other">
            The object to compare to the current <see cref="T:Splunk.Client.Message"/>.
            </param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes,
            follows, or appears in the same position in the sort order as
            <paramref name="other"/>.
            <list type="table">
            <listheader>
              <term>
                Value
              </term>
              <description>
                Condition
              </description>
            </listheader>
            <item>
              <term>
                Less than zero
              </term>
              <description>
                This instance precedes <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Zero
              </term>
              <description>
                This instance is in the same position in the sort order as paramref
                name="other"/&gt;.
              </description>
            </item>
            <item>
              <term>
                Greater than zero
              </term>
              <description>
                This instance follows <paramref name="other"/>,
                <paramref name="other"/> is not a <see cref="T:Splunk.Client.Message"/>, or
                <paramref name="other"/> is <c>null</c>.
              </description>
            </item>
            </list>
            </returns>
            <seealso cref="M:System.IComparable.CompareTo(object)"/>
        </member>
        <member name="M:Splunk.Client.Message.CompareTo(Splunk.Client.Message)">
            <summary>
            Compares the current <see cref="T:Splunk.Client.Message"/> with another one and returns
            an integer that indicates whether the current <see cref="T:Splunk.Client.Message"/>
            precedes, follows, or appears in the same position in the sort order as
            the other one.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Message"/>.
            </param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes,
            follows, or appears in the same position in the sort order as
            <paramref name="other"/>.
            <list type="table">
            <listheader>
              <term>
                Value
              </term>
              <description>
                Condition
              </description>
            </listheader>
            <item>
              <term>
                Less than zero
              </term>
              <description>
                This instance precedes <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Zero
              </term>
              <description>
                This instance is in the same position in the sort order as
                 <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Greater than zero
              </term>
              <description>
                This instance follows <paramref name="other"/> or
                <paramref name="other"/> is <c>null</c>.
              </description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Splunk.Client.Message.Equals(System.Object)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.Message"/> and another object
            are equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Message"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is a non <c>null</c>
            <see cref="T:Splunk.Client.Message"/> and is the same as the current
            <see cref="T:Splunk.Client.Message"/>;
            otherwise, <c>false</c>.
            </returns>
            <seealso cref="M:System.Object.Equals(object)"/>
        </member>
        <member name="M:Splunk.Client.Message.Equals(Splunk.Client.Message)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.Message"/> and another one are
            equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Message"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is non <c>null</c> and is the
            same as the current <see cref="T:Splunk.Client.Message"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Message.GetHashCode">
            <summary>
            Computes the hash code for the current <see cref="T:Splunk.Client.Message"/>.
            </summary>
            <returns>
            The hash code for the current <see cref="T:Splunk.Client.Message"/>.
            </returns>
            <seealso cref="M:System.Object.GetHashCode()"/>
        </member>
        <member name="M:Splunk.Client.Message.op_GreaterThan(Splunk.Client.Message,Splunk.Client.Message)">
            <summary>
            Greater-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Message.op_GreaterThanOrEqual(Splunk.Client.Message,Splunk.Client.Message)">
            <summary>
            Greater-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Message.op_Equality(Splunk.Client.Message,Splunk.Client.Message)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.Message"/> instances have the same
            value.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is the same as the value
            of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Message.op_Inequality(Splunk.Client.Message,Splunk.Client.Message)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.Message"/> instances have different
            values.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is different than the
            value of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Message.ToString">
            <summary>
            Gets a string representation for the current <see cref="T:Splunk.Client.Message"/>.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Message"/>.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="M:Splunk.Client.Message.op_LessThan(Splunk.Client.Message,Splunk.Client.Message)">
            <summary>
            Less-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Message.op_LessThanOrEqual(Splunk.Client.Message,Splunk.Client.Message)">
            <summary>
            Less-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Message"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Message.ReadMessagesAsync(System.Xml.XmlReader)">
            <summary>
            Reads messages asynchronously.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            The messages.
            </returns>
        </member>
        <member name="P:Splunk.Client.Message.Text">
            <summary>
            Gets the text of the current <see cref="T:Splunk.Client.Message"/>.
            </summary>
            <value>
            Text of the current <see cref="T:Splunk.Client.Message"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.Message.MessageType">
            <summary>
            Gets the type of the current <see cref="T:Splunk.Client.Message"/>.
            </summary>
            <value>
            Type of the current <see cref="T:Splunk.Client.Message"/>.
            </value>
        </member>
        <member name="T:Splunk.Client.MessageType">
            <summary>
            Specifies the type of a server response <see cref="T:Splunk.Client.Message"/>.
            </summary>
        </member>
        <member name="F:Splunk.Client.MessageType.Debug">
            <summary>
            Specifies a debug  messages.
            </summary>
        </member>
        <member name="F:Splunk.Client.MessageType.Information">
            <summary>
            Specifies an information message.
            </summary>
        </member>
        <member name="F:Splunk.Client.MessageType.Warning">
            <summary>
            Specifies a warning message.
            </summary>
        </member>
        <member name="F:Splunk.Client.MessageType.Error">
            <summary>
            Specifies an error message.
            </summary>
        </member>
        <member name="F:Splunk.Client.MessageType.Fatal">
            <summary>
            Specifies a fatal error message.
            </summary>
        </member>
        <member name="T:Splunk.Client.Namespace">
            <summary>
            Specifies the user/app context for a resource.
            </summary>
            <seealso cref="T:System.IComparable"/>
            <seealso cref="T:System.IComparable{Splunk.Client.Namespace}"/>
            <seealso cref="T:System.IEquatable{Splunk.Client.Namespace}"/>
        </member>
        <member name="F:Splunk.Client.Namespace.AllUsers">
            <summary>
            All users wildcard.
            </summary>
        </member>
        <member name="F:Splunk.Client.Namespace.AllApps">
            <summary>
            All apps wildcard.
            </summary>
        </member>
        <member name="M:Splunk.Client.Namespace.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Namespace"/> class with a
            user and app name.
            </summary>
            <param name="user">
            The name of a user or <see cref="T:Splunk.Client.Namespace"/><c>.AllUsers</c>.
            </param>
            <param name="app">
            The name of an application or <see cref="T:Splunk.Client.Namespace"/><c>.AllApps</c>.
            </param>
        </member>
        <member name="F:Splunk.Client.Namespace.Default">
            <summary>
            The default.
            </summary>
        </member>
        <member name="M:Splunk.Client.Namespace.CompareTo(System.Object)">
            <summary>
            Compares the current <see cref="T:Splunk.Client.Namespace"/> with another object and
            returns an integer that indicates whether the current
            <see cref="T:Splunk.Client.Namespace"/> precedes, follows, or appears in the same
            position in the sort order as the other object.
            </summary>
            <param name="other">
            The object to compare to the current <see cref="T:Splunk.Client.Namespace"/>.
            </param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes,
            follows, or appears in the same position in the sort order as
            <paramref name="other"/>.
            <list type="table">
            <listheader>
              <term>
                Value
              </term>
              <description>
                Condition
              </description>
            </listheader>
            <item>
              <term>
                Less than zero
              </term>
              <description>
                This instance precedes <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Zero
              </term>
              <description>
                This instance is in the same position in the sort order as
                <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Greater than zero
              </term>
              <description>
                This instance follows <paramref name="other"/>,
                <paramref name="other"/> is not a <see cref="T:Splunk.Client.Namespace"/>, or
                <paramref name="other"/> is <c>null</c>.
              </description>
            </item>
            </list>
            </returns>
            <seealso cref="M:System.IComparable.CompareTo(object)"/>
        </member>
        <member name="M:Splunk.Client.Namespace.CompareTo(Splunk.Client.Namespace)">
            <summary>
            Compares the current <see cref="T:Splunk.Client.Namespace"/> with another one and returns
            an integer that indicates whether the current <see cref="T:Splunk.Client.Namespace"/>
            precedes, follows, or appears in the same position in the sort order as
            the other one.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Namespace"/>.
            </param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes,
            follows, or appears in the same position in the sort order as
            <paramref name="other"/>.
            <list type="table">
            <listheader>
              <term>
                Value
              </term>
              <description>
                Condition
              </description>
            </listheader>
            <item>
              <term>
                Less than zero
              </term>
              <description>
                This instance precedes <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Zero
              </term>
              <description>
                This instance is in the same position in the sort order as
                 <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Greater than zero
              </term>
              <description>
                This instance follows <paramref name="other"/> or
                <paramref name="other"/> is <c>null</c>.
              </description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Splunk.Client.Namespace.Equals(System.Object)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.Namespace"/> and another object
            are equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Namespace"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is a non <c>null</c>
            <see cref="T:Splunk.Client.Namespace"/> and is the same as the current
            <see cref="T:Splunk.Client.Namespace"/>; otherwise, <c>false</c>.
            </returns>
            <seealso cref="M:System.Object.Equals(object)"/>
        </member>
        <member name="M:Splunk.Client.Namespace.Equals(Splunk.Client.Namespace)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.Namespace"/> and another one
            are equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Namespace"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is non <c>null</c> and is the
            same as the current <see cref="T:Splunk.Client.Namespace"/>; otherwise,
            <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Namespace.GetHashCode">
            <summary>
            Computes the hash code for the current <see cref="T:Splunk.Client.Namespace"/>.
            </summary>
            <returns>
            The hash code for the current <see cref="T:Splunk.Client.Namespace"/>.
            </returns>
            <seealso cref="M:System.Object.GetHashCode()"/>
        </member>
        <member name="M:Splunk.Client.Namespace.op_GreaterThan(Splunk.Client.Namespace,Splunk.Client.Namespace)">
            <summary>
            Greater-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Namespace.op_GreaterThanOrEqual(Splunk.Client.Namespace,Splunk.Client.Namespace)">
            <summary>
            Greater-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Namespace.op_Equality(Splunk.Client.Namespace,Splunk.Client.Namespace)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.Namespace"/> instances have the same
            value.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is the same as the value
            of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Namespace.op_Inequality(Splunk.Client.Namespace,Splunk.Client.Namespace)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.Namespace"/> instances have different
            values.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is different than the
            value of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Namespace.op_LessThan(Splunk.Client.Namespace,Splunk.Client.Namespace)">
            <summary>
            Less-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Namespace.op_LessThanOrEqual(Splunk.Client.Namespace,Splunk.Client.Namespace)">
            <summary>
            Less-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Namespace"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Namespace.ToString">
            <summary>
            Converts the value of the current <see cref="T:Splunk.Client.Namespace"/> to its
            equivalent string representation.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Namespace"/>
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="M:Splunk.Client.Namespace.ToUriString">
            <summary>
            Converts the value of the current <see cref="T:Splunk.Client.Namespace"/> object to its
            equivalent URI encoded string representation.
            </summary>
            <remarks>
            The value is converted using <see cref="M:System.Uri.EscapeUriString(System.String)"/>.
            </remarks>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Namespace"/>
            </returns>
        </member>
        <member name="P:Splunk.Client.Namespace.App">
            <summary>
            Gets the application.
            </summary>
            <value>
            The application.
            </value>
        </member>
        <member name="P:Splunk.Client.Namespace.IsSpecific">
            <summary>
            Gets a value indicating whether this object is specific.
            </summary>
            <value>
            <c>true</c> if this object is specific, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.Namespace.IsWildcard">
            <summary>
            Gets a value indicating whether this object is wildcard.
            </summary>
            <value>
            <c>true</c> if this object is wildcard, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.Namespace.User">
            <summary>
            Gets the user of the current <see cref="T:Splunk.Client.Namespace"/>.
            </summary>
            <value>
            The user of the current <see cref="T:Splunk.Client.Namespace"/>.
            </value>
        </member>
        <member name="T:Splunk.Client.Observable`1">
            <summary>
            Defines a provider for push-based notification.
            </summary>
            <typeparam name="T">
            Generic type parameter.
            </typeparam>
            <seealso cref="T:System.IObservable{T}"/>
        </member>
        <member name="M:Splunk.Client.Observable`1.OnCompleted">
            <summary>
            Notifies all observers that the provider has finished sending push-based
            notifications.
            </summary>
        </member>
        <member name="M:Splunk.Client.Observable`1.OnError(System.Exception)">
            <summary>
            Notifies all observers that the provider has experienced an error
            condition.
            </summary>
            <param name="error">
            An <see cref="T:System.Exception"/> representing the error condition.
            </param>
        </member>
        <member name="M:Splunk.Client.Observable`1.OnNext(`0)">
            <summary>
            Provides all observers with new data.
            </summary>
            <param name="observation">
            The data to be provided.
            </param>
        </member>
        <member name="M:Splunk.Client.Observable`1.PushObservations">
            <summary>
            Pushes observations to observers and then completes.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing this asychronous operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Observable`1.Subscribe(System.IObserver{`0})">
            <summary>
            Notifies the current <see cref="T:Splunk.Client.SearchPreviewStream"/> that an observer
            is to receive notifications.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Thrown when one or more required arguments are null.
            </exception>
            <param name="observer">
            The object that is to receive notifications.
            </param>
            <returns>
            A reference to an interface that allows observers to stop receiving
            notifications before the current <see cref="T:Splunk.Client.SearchPreviewStream"/>
            has finished sending them.
            </returns>
        </member>
        <member name="T:Splunk.Client.Observable`1.Subscription">
            <summary>
            Represents a disposable subscription to the
            <see cref="T:Splunk.Client.Observable`1"/>.
            </summary>
            <remarks>
            This class implements <see cref="T:System.IDisposable"/>, but does not require
            finalization because it does not access unmanaged resources.
            </remarks>
            <seealso cref="T:System.IObservable{T}"/>
        </member>
        <member name="T:Splunk.Client.Observer`1">
            <summary>
            Provides a class for faking git requests and responses from a Splunk server.
            </summary>
        </member>
        <member name="M:Splunk.Client.Observer`1.#ctor(System.Action{`0},System.Action,System.Action{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Observer`1"/> 
            class.
            </summary>
        </member>
        <member name="M:Splunk.Client.Observer`1.OnCompleted">
            <summary>
            Executes the completed action.
            </summary>
        </member>
        <member name="M:Splunk.Client.Observer`1.OnError(System.Exception)">
            <summary>
            Executes the error action.
            </summary>
            <param name="error">
            The error.
            </param>
        </member>
        <member name="M:Splunk.Client.Observer`1.OnNext(`0)">
            <summary>
            Executes the next action.
            </summary>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="T:Splunk.Client.Pagination">
            <summary>
            A pagination.
            </summary>
            <seealso cref="T:IEquatable{Pagination}"/>
        </member>
        <member name="M:Splunk.Client.Pagination.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Pagination class.
            </summary>
            <param name="itemsPerPage">
            
            </param>
            <param name="startIndex">
            
            </param>
            <param name="totalResults">
            
            </param>
        </member>
        <member name="F:Splunk.Client.Pagination.None">
            <summary>
            A readonly instance of the <see cref="T:Splunk.Client.Pagination"/> structure that is all
            zeros.
            </summary>
        </member>
        <member name="M:Splunk.Client.Pagination.Equals(Splunk.Client.Pagination)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.Pagination"/> and another one
            are equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Pagination"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is non <c>null</c> and is the
            same as the current <see cref="T:Splunk.Client.Pagination"/>; otherwise,
            <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.Pagination.Equals(System.Object)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.Pagination"/> and another
            object are equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.Pagination"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is a non <c>null</c>
            <see cref="T:Splunk.Client.Pagination"/> and is the same as the current
            <see cref="T:Splunk.Client.Pagination"/>; otherwise, <c>false</c>.
            </returns>
            <seealso cref="M:System.ValueType.Equals(object)"/>
        </member>
        <member name="M:Splunk.Client.Pagination.GetHashCode">
            <summary>
            Computes the hash code for the current <see cref="T:Splunk.Client.Pagination"/>.
            </summary>
            <returns>
            The hash code for the current <see cref="T:Splunk.Client.Pagination"/>.
            </returns>
            <seealso cref="M:System.ValueType.GetHashCode()"/>
        </member>
        <member name="M:Splunk.Client.Pagination.op_Equality(Splunk.Client.Pagination,Splunk.Client.Pagination)">
            <summary>
            Equality operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Pagination"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Pagination"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Pagination.op_Inequality(Splunk.Client.Pagination,Splunk.Client.Pagination)">
            <summary>
            Inequality operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.Pagination"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.Pagination"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Pagination.ToString">
            <summary>
            Gets a string representation for the current <see cref="T:Splunk.Client.Pagination"/>.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Pagination"/>.
            </returns>
            <seealso cref="M:System.ValueType.ToString()"/>
        </member>
        <member name="P:Splunk.Client.Pagination.ItemsPerPage">
            <summary>
            Gets the number of entries returned by an operation.
            </summary>
            <remarks>
            The maximum number of entries returned by a GET operation on an entity
            collection is specified by the <c>Count</c> property. The default value
            of the <c>Count</c> parameter is <c>30</c>. This property gets the actual
            number of entries received.
            </remarks>
            <value>
            The number of entries returned.
            </value>
        </member>
        <member name="P:Splunk.Client.Pagination.StartIndex">
            <summary>
            Gets the offset of the first entry returned.
            </summary>
            <remarks>
            Use the offset parameter in a GET operation on an entity collection to
            override the default value of <c>0</c> which specifies that the first
            <see cref="P:Splunk.Client.Pagination.ItemsPerPage"/> items in the entity collection should be
            returned.
            </remarks>
            <value>
            Offset of the first entry returned.
            </value>
        </member>
        <member name="P:Splunk.Client.Pagination.TotalResults">
            <summary>
            Gets the total number of entries that can be returned for an operation.
            </summary>
            <value>
            The total number of entries that can be returned.
            </value>
        </member>
        <member name="T:Splunk.Client.PaperOrientation">
            <summary>
            Specifies the page orientation for a report.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperOrientation.Landscape">
            <summary>
            Height of the display area is less than the width.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperOrientation.Portrait">
            <summary>
            Height of the display area is greater than the width.
            </summary>
        </member>
        <member name="T:Splunk.Client.PaperSize">
            <summary>
            Specifies the paper size of a PDF report.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperSize.Letter">
            <summary>
            8.5 × 11 inches.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperSize.A2">
            <summary>
            420 x 594 millimeters.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperSize.A3">
            <summary>
            297 x 420 millimeters.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperSize.A4">
            <summary>
            210 x 297 millimeters.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperSize.A5">
            <summary>
            148 x 210 millimeters.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperSize.Ledger">
            <summary>
            17 × 11 inches.
            </summary>
        </member>
        <member name="F:Splunk.Client.PaperSize.Legal">
            <summary>
            8.5 × 14 inches.
            </summary>
        </member>
        <member name="T:Splunk.Client.Permissions">
            <summary>
            Provides access to read/write permissions.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.Permissions}"/>
        </member>
        <member name="P:Splunk.Client.Permissions.Read">
            <summary>
            Gets the set of Splunk user account names with read permissions.
            </summary>
            <value>
            The set of Splunk user account names with read permissions.
            </value>
        </member>
        <member name="P:Splunk.Client.Permissions.Write">
            <summary>
            Gets the set of Splunk user account names with write permissions.
            </summary>
            <value>
            The set of Splunk user account names with write permissions.
            </value>
        </member>
        <member name="T:Splunk.Client.ReadOnlyCollectionConverter`3">
            <summary>
            Provides a converter to convert an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            object to a collection.
            </summary>
            <typeparam name="TValue">
            Type of the value.
            </typeparam>
            <typeparam name="TCollection">
            Type of the collection.
            </typeparam>
            <typeparam name="TConverter">
            Type of the converter.
            </typeparam>
            <seealso cref="T:Splunk.Client.ValueConverter{TCollection}"/>
        </member>
        <member name="F:Splunk.Client.ReadOnlyCollectionConverter`3.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.ReadOnlyCollectionConverter`3"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.ReadOnlyCollectionConverter`3.Convert(System.Object)">
            <summary>
            Converts the given input.
            </summary>
            <param name="input">
            The input.
            </param>
            <returns>
            A read only collection of <typeparamref name="TValue"/>.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a collection of
            <typeparamref name="TValue"/> items.
            </exception>
        </member>
        <member name="T:Splunk.Client.ResourceCollection">
            <summary>
            Provides a base class that represents a Splunk resource as an object.
            </summary>
            <seealso cref="T:Splunk.Client.BaseResource"/>
        </member>
        <member name="M:Splunk.Client.ResourceCollection.#ctor(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ResourceCollection"/> class.
            </summary>
            <param name="entry">
            An object representing a Splunk atom entry response.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            feed containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.ResourceCollection.#ctor(Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ResourceCollection"/> class.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.ResourceCollection.#ctor(System.Dynamic.ExpandoObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ResourceCollection"/> class.
            </summary>
            <param name="expandObject">
            An object containing the dynamic members of the newly created
            <see cref="T:Splunk.Client.ResourceCollection"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.ResourceCollection.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ResourceCollection"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.ResourceCollection.Initialize(Splunk.Client.AtomEntry,System.Version)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ResourceCollection.Initialize(Splunk.Client.AtomFeed)">
            <summary>
            Infrastructure. Initializes the current uninitialized
            <see cref="T:Splunk.Client.ResourceCollection"/>.
            </summary>
            <remarks>
            This method may be called once to initialize a
            <see cref="T:Splunk.Client.ResourceCollection"/>
            instantiated by the default constructor. Override this method to provide
            special initialization code. Call this base method before initialization
            is complete.
            <note type="note">
            This method supports the Splunk client infrastructure and is not intended
            to be used directly from your code.
            </note>
            </remarks>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
            <seealso cref="M:Splunk.Client.BaseResource.Initialize(AtomFeed)"/>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="feed"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Splunk.Client.ResourceCollection"/> is already initialized.
            </exception>
        </member>
        <member name="M:Splunk.Client.ResourceCollection.Initialize``1(Splunk.Client.AtomFeed)">
            <summary>
            Infrastructure. Initializes the current uninitialized
            <see cref="T:Splunk.Client.ResourceCollection"/>.
            </summary>
            <remarks>
            This method may be called once to initialize a
            <see cref="T:Splunk.Client.ResourceCollection"/>
            instantiated by the default constructor. Override this method to provide
            special initialization code. Call this base method before initialization
            is complete.
            <note type="note">
            This method supports the Splunk client infrastructure and is not intended
            to be used directly from your code.
            </note>
            </remarks>
            <typeparam name="TResource">
            Type of the resource.
            </typeparam>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="feed"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Splunk.Client.ResourceCollection"/> is already initialized.
            </exception>
        </member>
        <member name="M:Splunk.Client.ResourceCollection.ToString">
            <summary>
            Gets a string identifying the current <see cref="T:Splunk.Client.ResourceCollection"/>.
            </summary>
            <returns>
            A string representing the identity of the current
            <see cref="T:Splunk.Client.ResourceCollection"/>.
            </returns>
            <seealso cref="M:Splunk.Client.BaseResource.ToString()"/>
        </member>
        <member name="T:Splunk.Client.ResourceName">
            <summary>
            Represents a Splunk resource name.
            </summary>
            <seealso cref="T:System.Collections.ObjectModel.ReadOnlyCollection{T}"/>
            <seealso cref="T:System.IComparable"/>
            <seealso cref="T:System.IComparable{T}"/>
            <seealso cref="T:System.IEquatable{T}"/>
        </member>
        <member name="M:Splunk.Client.ResourceName.#ctor(Splunk.Client.ResourceName,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ResourceName"/> class.
            </summary>
            <param name="resourceName">
            Another resource name.
            </param>
            <param name="parts">
            Names to be appended <paramref name="resourceName"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.ResourceName.#ctor(System.String[])">
            <summary>
            Intializes a new instance of the <see cref="T:Splunk.Client.ResourceName"/> class.
            </summary>
            <param name="parts">
            
            </param>
        </member>
        <member name="M:Splunk.Client.ResourceName.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Intializes a new instance of the <see cref="T:Splunk.Client.ResourceName"/> class.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when one or more arguments have unsupported or illegal values.
            </exception>
            <param name="parts">
            
            </param>
        </member>
        <member name="M:Splunk.Client.ResourceName.CompareTo(System.Object)">
            <summary>
            Compares the current <see cref="T:Splunk.Client.ResourceName"/> with another object and
            returns an integer that indicates whether the current
            <see cref="T:Splunk.Client.ResourceName"/> precedes, follows, or appears in the same
            position in the sort order as the other object.
            </summary>
            <param name="other">
            The object to compare to the current <see cref="T:Splunk.Client.ResourceName"/>.
            </param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes,
            follows, or appears in the same position in the sort order as
            <paramref name="other"/>.
            <list type="table">
            <listheader>
              <term>
                Value
              </term>
              <description>
                Condition
              </description>
            </listheader>
            <item>
              <term>
                Less than zero
              </term>
              <description>
                This instance precedes <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Zero
              </term>
              <description>
                This instance is in the same position in the sort order as
                <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Greater than zero
              </term>
              <description>
                This instance follows <paramref name="other"/>,
                <paramref name="other"/> is not a <see cref="T:Splunk.Client.ResourceName"/>, or
                <paramref name="other"/> is <c>null</c>.
              </description>
            </item>
            </list>
            </returns>
            <seealso cref="M:System.IComparable.CompareTo(object)"/>
        </member>
        <member name="M:Splunk.Client.ResourceName.CompareTo(Splunk.Client.ResourceName)">
            <summary>
            Compares the current <see cref="T:Splunk.Client.ResourceName"/> with another one and
            returns an integer that indicates whether the current
            <see cref="T:Splunk.Client.ResourceName"/> precedes, follows, or appears in the same
            position in the sort order as the other one.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.ResourceName"/>.
            </param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes,
            follows, or appears in the same position in the sort order as
            <paramref name="other"/>.
            <list type="table">
            <listheader>
              <term>
                Value
              </term>
              <description>
                Condition
              </description>
            </listheader>
            <item>
              <term>
                Less than zero
              </term>
              <description>
                This instance precedes <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Zero
              </term>
              <description>
                This instance is in the same position in the sort order as
                <paramref name="other"/>.
              </description>
            </item>
            <item>
              <term>
                Greater than zero
              </term>
              <description>
                This instance follows <paramref name="other"/> or
                <paramref name="other"/> is <c>null</c>.
              </description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Splunk.Client.ResourceName.Equals(System.Object)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.ResourceName"/> and another
            object are equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.ResourceName"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is a non <c>null</c>
            <see cref="T:Splunk.Client.ResourceName"/> and is the same as the current
            <see cref="T:Splunk.Client.ResourceName"/>; otherwise, <c>false</c>.
            </returns>
            <seealso cref="M:System.Object.Equals(object)"/>
        </member>
        <member name="M:Splunk.Client.ResourceName.Equals(Splunk.Client.ResourceName)">
            <summary>
            Determines whether the current <see cref="T:Splunk.Client.ResourceName"/> and another one
            are equal.
            </summary>
            <param name="other">
            The object to compare with the current <see cref="T:Splunk.Client.ResourceName"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="other"/> is non <c>null</c> and is the
            same as the current <see cref="T:Splunk.Client.ResourceName"/>; otherwise,
            <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.ResourceName.GetHashCode">
            <summary>
            Computes the hash code for the current <see cref="T:Splunk.Client.ResourceName"/>.
            </summary>
            <returns>
            The hash code for the current <see cref="T:Splunk.Client.ResourceName"/>.
            </returns>
            <seealso cref="M:System.Object.GetHashCode()"/>
        </member>
        <member name="M:Splunk.Client.ResourceName.op_GreaterThan(Splunk.Client.ResourceName,Splunk.Client.ResourceName)">
            <summary>
            Greater-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ResourceName.op_GreaterThanOrEqual(Splunk.Client.ResourceName,Splunk.Client.ResourceName)">
            <summary>
            Greater-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ResourceName.op_Equality(Splunk.Client.ResourceName,Splunk.Client.ResourceName)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.ResourceName"/> instances have the same
            value.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is the same as the value
            of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.ResourceName.op_Inequality(Splunk.Client.ResourceName,Splunk.Client.ResourceName)">
            <summary>
            Determines whether two <see cref="T:Splunk.Client.ResourceName"/> instances have
            different values.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <returns>
            <c>true</c> if the value of <paramref name="a"/> is different than the
            value of <paramref name="b"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Splunk.Client.ResourceName.op_LessThan(Splunk.Client.ResourceName,Splunk.Client.ResourceName)">
            <summary>
            Less-than comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ResourceName.op_LessThanOrEqual(Splunk.Client.ResourceName,Splunk.Client.ResourceName)">
            <summary>
            Less-than-or-equal comparison operator.
            </summary>
            <param name="a">
            The first <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <param name="b">
            The second <see cref="T:Splunk.Client.ResourceName"/> to compare or <c>null</c>.
            </param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.ResourceName.ToString">
            <summary>
            Converts the value of the current <see cref="T:Splunk.Client.Namespace"/> to its
            equivalent string representation.
            </summary>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Namespace"/>
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="M:Splunk.Client.ResourceName.ToUriString">
            <summary>
            Converts the value of the current <see cref="T:Splunk.Client.Namespace"/> object to its
            equivalent URI encoded string representation.
            </summary>
            <remarks>
            The value is converted using <see cref="M:System.Uri.EscapeUriString(System.String)"/>.
            </remarks>
            <returns>
            A string representation of the current <see cref="T:Splunk.Client.Namespace"/>
            </returns>
        </member>
        <member name="P:Splunk.Client.ResourceName.Collection">
            <summary>
            Gets the collection.
            </summary>
            <value>
            The collection.
            </value>
        </member>
        <member name="P:Splunk.Client.ResourceName.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:Splunk.Client.ResourceNotFoundException">
            <summary>
            The exception that is thrown when a request to retrieve a resource
            results in <see cref="F:System.Net.HttpStatusCode.NotFound"/>.
            </summary>
            <seealso cref="T:Splunk.Client.RequestException"/>
        </member>
        <member name="M:Splunk.Client.ResourceNotFoundException.#ctor(System.Net.Http.HttpResponseMessage,System.Collections.ObjectModel.ReadOnlyCollection{Splunk.Client.Message})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ResourceNotFoundException"/>
            class.
            </summary>
            <param name="message">
            An object representing an HTTP response message including the status code
            and data.
            </param>
            <param name="details">
            A sequence of <see cref="T:Splunk.Client.Message"/> instances detailing the cause of the
            <see cref="T:Splunk.Client.ResourceNotFoundException"/>.
            </param>
        </member>
        <member name="T:Splunk.Client.Response">
            <summary>
            Represents a Splunk service response.
            </summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="M:Splunk.Client.Response.CreateAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Asynchronously creates a <see cref="T:Splunk.Client.Response"/> object from an
            <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="message">
            The <see cref="T:System.Net.Http.HttpResponseMessage"/> from which to create a
            <see cref="T:Splunk.Client.Response"/> object.
            </param>
            <returns>
            The <see cref="T:Splunk.Client.Response"/> object created.
            </returns>
        </member>
        <member name="M:Splunk.Client.Response.Dispose">
            <summary>
            Releases all disposable resources used by the current
            <see cref="T:Splunk.Client.Response"/>.
            </summary>
            <seealso cref="M:System.IDisposable.Dispose()"/>
        </member>
        <member name="M:Splunk.Client.Response.EnsureStatusCodeAsync(System.Net.HttpStatusCode)">
            <summary>
            Throws a <see cref="T:Splunk.Client.RequestException"/> if the current
            <see cref="T:Splunk.Client.Response"/>.Message.StatusCode is different than expected.
            </summary>
            <param name="expected">
            The expected <see cref="T:System.Net.HttpStatusCode"/>.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Response.EnsureStatusCodeAsync(System.Net.HttpStatusCode,System.Net.HttpStatusCode)">
            <summary>
            Throws a <see cref="T:Splunk.Client.RequestException"/> if the current
            <see cref="T:Splunk.Client.Response"/>.Message.StatusCode is different than expecteds.
            </summary>
            <param name="expected1">
            Another expected <see cref="T:System.Net.HttpStatusCode"/>.
            </param>
            <param name="expected2">
            The second expected.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.Response.ThrowRequestExceptionAsync">
            <summary>
            Throw request exception asynchronous.
            </summary>
            <exception cref="T:Splunk.Client.RequestException">
            Thrown when a Request error condition occurs.
            </exception>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.Response.Message">
            <summary>
            Gets the HTTP response message associated with the current
            <see cref="T:Splunk.Client.Response"/>.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Splunk.Client.Response.Stream">
            <summary>
            Gets the <see cref="P:Splunk.Client.Response.Stream"/> associated with the current
            <see cref="P:Splunk.Client.Response.Message"/>.
            </summary>
            <remarks>
            This object is the one returned by
            <see cref="M:System.Net.Http.HttpContent.ReadAsStreamAsync"/>.
            </remarks>
            <value>
            The stream.
            </value>
        </member>
        <member name="P:Splunk.Client.Response.XmlReader">
            <summary>
            Gets the <see cref="P:Splunk.Client.Response.XmlReader"/> for reading HTTP body data from the
            current <see cref="P:Splunk.Client.Response.Stream"/>.
            </summary>
            <value>
            The XML reader.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch">
            <summary>
            Provides an object representation of a Splunk saved search.
            </summary>
            <seealso cref="T:Splunk.Client.Entity{Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.ISavedSearch"/>
        </member>
        <member name="M:Splunk.Client.SavedSearch.#ctor(Splunk.Client.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.SavedSearch"/> class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <param name="name">
            An object identifying a Splunk resource within
            <paramref name="service"/>.<see cref="T:Splunk.Client.Namespace"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.SavedSearch.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.SavedSearch"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
        </member>
        <member name="M:Splunk.Client.SavedSearch.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,System.String)">
            <summary>
            Initalizes a new instance of the <see cref="T:Splunk.Client.SavedSearch"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="name">
            Name of the <see cref="T:Splunk.Client.SavedSearch"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.SavedSearch.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.SavedSearch"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.SavedSearch.DispatchAsync(Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.SavedSearch.GetAsync(Splunk.Client.SavedSearch.Filter)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.SavedSearch.GetHistoryAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.SavedSearch.GetScheduledTimesAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.SavedSearch.ScheduleAsync(System.Nullable{System.DateTime})">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.SavedSearch.UpdateAsync(System.String,Splunk.Client.SavedSearchAttributes,Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Actions">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Alert">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarize">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.CronSchedule">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Description">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Dispatch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Display">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Eai">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.IsDisabled">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.IsScheduled">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.IsVisible">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.MaxConcurrent">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.NextScheduledTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.RealTimeSchedule">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Request">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.RestartOnSearchPeerAdd">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.QualifiedSearch">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.RunOnStartup">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ScheduledTimes">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Search">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.SavedSearch.Filter">
            <summary>
            Provides the arguments required for retrieving information about a
            <see cref="T:Splunk.Client.SavedSearch"/>
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
                <a href="http://goo.gl/bKrRK0">REST API: GET saved/searches</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.SavedSearch.Filter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Filter.EarliestTime">
            <summary>
            Gets or sets the lower bound of the time window for which saved search
            schedules should be returned.
            </summary>
            <remarks>
            This property specifies that all the scheduled times starting from this
            time (not just the next run time) should be returned.
            </remarks>
            <value>
            The earliest time.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Filter.LatestTime">
            <summary>
            Gets or sets the upper bound of the time window for which saved search
            schedules should be returned.
            </summary>
            <remarks>
            This property specifies that all the scheduled times ending with this
            time (not just the next run time) should be returned.
            </remarks>
            <value>
            The latest time.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.Filter.ListDefaultActions">
            <summary>
            Gets or sets a value indicating whether to list default actions for
            <see cref="T:Splunk.Client.SavedSearch"/> entries.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c> if list default actions, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.ActionsAdapter">
            <summary>
            The actions adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.ActionsAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Email">
            <summary>
            Gets the e-mail.
            </summary>
            <value>
            The e-mail.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.PopulateLookup">
            <summary>
            Gets the populate lookup.
            </summary>
            <value>
            The populate lookup.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Rss">
            <summary>
            Gets the RSS.
            </summary>
            <value>
            The RSS.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Script">
            <summary>
            Gets the script.
            </summary>
            <value>
            The script.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.SummaryIndex">
            <summary>
            Gets the zero-based index of the summary.
            </summary>
            <value>
            The summary index.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.ActionsAdapter.Action`1">
            <summary>
            An action.
            </summary>
            <typeparam name="TAction">
            Type of the action.
            </typeparam>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{TAction}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Action`1.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Action`1.IsEnabled">
            <summary>
            Gets a value indicating whether this object is enabled.
            </summary>
            <value>
            <c>true</c> if this object is enabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Action`1.MaxResults">
            <summary>
            Gets the maximum results.
            </summary>
            <value>
            The maximum results.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Action`1.MaxTime">
            <summary>
            Gets the maximum time.
            </summary>
            <value>
            The maximum time.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Action`1.TrackAlert">
            <summary>
            Gets a value indicating whether the track alert.
            </summary>
            <value>
            <c>true</c> if track alert, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.Action`1.Ttl">
            <summary>
            Gets the TTL.
            </summary>
            <value>
            The TTL.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter">
            <summary>
            An e-mail adapter.
            </summary>
            <seealso cref="T:Splunk.Client.SavedSearch.ActionsAdapter.Action{Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.AuthPassword">
            <summary>
            Gets the authentication password.
            </summary>
            <value>
            The authentication password.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.AuthUsername">
            <summary>
            Gets the authentication username.
            </summary>
            <value>
            The authentication username.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.Bcc">
            <summary>
            Gets the Bcc.
            </summary>
            <value>
            The Bcc.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.CC">
            <summary>
            Gets the CC e-mail address list to use.
            </summary>
            <value>
            The CC e-mail address list to use.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.Format">
            <summary>
            Gets the format of text in the e-mail.
            </summary>
            <value>
            The format of text in the e-mail.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.From">
            <summary>
            Gets the e-mail address from which the e-mail action originates.
            </summary>
            <value>
            The e-mail address from which the e-mail action originates.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.Inline">
            <summary>
            Gets a value that indicates whether the search results are 
            contained in the body of the e-mail.
            </summary>
            <value>
            <c>true</c> if inline, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.MailServer">
            <summary>
            Gets the mail server.
            </summary>
            <value>
            The mail server.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.ReportCidFontList">
            <summary>
            Gets a list of report CID fonts.
            </summary>
            <value>
            A List of report cid fonts.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.ReportIncludeSplunkLogo">
            <summary>
            Gets a value indicating whether the report include splunk logo.
            </summary>
            <value>
            <c>true</c> if report include splunk logo, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.ReportPaperOrientation">
            <summary>
            Gets the report paper orientation.
            </summary>
            <value>
            The report paper orientation.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.ReportPaperSize">
            <summary>
            Gets the size of the report paper.
            </summary>
            <value>
            The size of the report paper.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.ReportServerEnabled">
            <summary>
            Gets a value indicating whether the report server is enabled.
            </summary>
            <value>
            <c>true</c> if report server enabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.SendPdf">
            <summary>
            Gets a value indicating whether the send PDF.
            </summary>
            <value>
            <c>true</c> if send PDF, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.SendResults">
            <summary>
            Gets a value indicating whether the send results.
            </summary>
            <value>
            <c>true</c> if send results, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.SubjectAlert">
            <summary>
            Gets the subject alert.
            </summary>
            <value>
            The subject alert.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.SubjectReport">
            <summary>
            Gets the subject report.
            </summary>
            <value>
            The subject report.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.To">
            <summary>
            Gets the list of recipient e-mail addresses.
            </summary>
            <value>
            The list of recipient e-mail addresses.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.UseSsl">
            <summary>
            Gets a value indicating whether this object use ssl.
            </summary>
            <value>
            <c>true</c> if use ssl, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.UseTls">
            <summary>
            Gets a value indicating whether this object use TLS.
            </summary>
            <value>
            <c>true</c> if use tls, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.EmailAdapter.WidthSortColumns">
            <summary>
            Gets a value indicating whether the width sort columns.
            </summary>
            <value>
            <c>true</c> if width sort columns, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.ActionsAdapter.PopulateLookupAdapter">
            <summary>
            A populate lookup adapter.
            </summary>
            <seealso cref="T:Splunk.Client.SavedSearch.ActionsAdapter.Action{Splunk.Client.SavedSearch.ActionsAdapter.PopulateLookupAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.PopulateLookupAdapter.Destination">
            <summary>
            Gets the Destination for the.
            </summary>
            <value>
            The destination.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.PopulateLookupAdapter.Hostname">
            <summary>
            Gets the hostname.
            </summary>
            <value>
            The hostname.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.ActionsAdapter.RssAdapter">
            <summary>
            The RSS adapter.
            </summary>
            <seealso cref="T:Splunk.Client.SavedSearch.ActionsAdapter.Action{Splunk.Client.SavedSearch.ActionsAdapter.RssAdapter}"/>
        </member>
        <member name="T:Splunk.Client.SavedSearch.ActionsAdapter.ScriptAdapter">
            <summary>
            A script adapter.
            </summary>
            <seealso cref="T:Splunk.Client.SavedSearch.ActionsAdapter.Action{Splunk.Client.SavedSearch.ActionsAdapter.ScriptAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.ScriptAdapter.FileName">
            <summary>
            Gets the filename of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.ScriptAdapter.Hostname">
            <summary>
            Gets the hostname.
            </summary>
            <value>
            The hostname.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.ActionsAdapter.SummaryIndexAdapter">
            <summary>
            A summary index adapter.
            </summary>
            <seealso cref="T:Splunk.Client.SavedSearch.ActionsAdapter.Action{Splunk.Client.SavedSearch.ActionsAdapter.SummaryIndexAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.SummaryIndexAdapter.Inline">
            <summary>
            Gets a value indicating whether the inline.
            </summary>
            <value>
            <c>true</c> if inline, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.ActionsAdapter.SummaryIndexAdapter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.AlertAdapter">
            <summary>
            An alert adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.AlertAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.AlertType">
            <summary>
            Gets the type of the alert.
            </summary>
            <value>
            The type of the alert.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.Comparator">
            <summary>
            Gets the comparator.
            </summary>
            <value>
            The comparator.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.Condition">
            <summary>
            Gets the condition.
            </summary>
            <value>
            The condition.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.DigestMode">
            <summary>
            Gets a value indicating whether the digest mode.
            </summary>
            <value>
            <c>true</c> if digest mode, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.Expires">
            <summary>
            Gets the expires.
            </summary>
            <value>
            The expires.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.Severity">
            <summary>
            Gets the severity.
            </summary>
            <value>
            The severity.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.Suppress">
            <summary>
            Gets the suppress.
            </summary>
            <value>
            The suppress.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.Threshold">
            <summary>
            Gets the threshold.
            </summary>
            <value>
            The threshold.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.Track">
            <summary>
            Gets the track.
            </summary>
            <value>
            The track.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.AlertAdapter.SuppressAdapter">
            <summary>
            The suppress adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.AlertAdapter.SuppressAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.SuppressAdapter.IsEnabled">
            <summary>
            Gets a value indicating whether this object is enabled.
            </summary>
            <value>
            <c>true</c> if this object is enabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.SuppressAdapter.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AlertAdapter.SuppressAdapter.Period">
            <summary>
            Gets the period.
            </summary>
            <value>
            The period.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.AutoSummarizeAdapter">
            <summary>
            An automatic summarize adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.AutoSummarizeAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.IsEnabled">
            <summary>
            Gets a value indicating whether this object is enabled.
            </summary>
            <value>
            <c>true</c> if this object is enabled, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.CronSchedule">
            <summary>
            Gets the cron schedule.
            </summary>
            <value>
            The cron schedule.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.Dispatch">
            <summary>
            Gets the dispatch.
            </summary>
            <value>
            The dispatch.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.MaxDisabledBuckets">
            <summary>
            Gets the maximum disabled buckets.
            </summary>
            <value>
            The maximum disabled buckets.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.MaxSummaryRatio">
            <summary>
            Gets the maximum summary ratio.
            </summary>
            <value>
            The maximum summary ratio.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.MaxSummarySize">
            <summary>
            Gets the size of the maximum summary.
            </summary>
            <value>
            The size of the maximum summary.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.MaxTime">
            <summary>
            Gets the maximum time.
            </summary>
            <value>
            The maximum time.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.SuspendPeriod">
            <summary>
            Gets the suspend period.
            </summary>
            <value>
            The suspend period.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.AutoSummarizeAdapter.DispatchAdapter">
            <summary>
            A dispatch adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.AutoSummarizeAdapter.DispatchAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.DispatchAdapter.EarliestTime">
            <summary>
            Gets the earliest time.
            </summary>
            <value>
            The earliest time.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.DispatchAdapter.LatestTime">
            <summary>
            Gets the latest time.
            </summary>
            <value>
            The latest time.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.DispatchAdapter.TimeFormat">
            <summary>
            Gets the time format.
            </summary>
            <value>
            The time format.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.AutoSummarizeAdapter.DispatchAdapter.Ttl">
            <summary>
            Gets the TTL.
            </summary>
            <value>
            The TTL.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DispatchAdapter">
            <summary>
            A dispatch adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DispatchAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.Buckets">
            <summary>
            Gets the buckets.
            </summary>
            <value>
            The buckets.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.EarliestTime">
            <summary>
            Gets the earliest time.
            </summary>
            <value>
            The earliest time.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.Lookups">
            <summary>
            Gets a value indicating whether the lookups.
            </summary>
            <value>
            <c>true</c> if lookups, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.MaxCount">
            <summary>
            Gets the number of maximums.
            </summary>
            <value>
            The number of maximums.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.MaxTime">
            <summary>
            Gets the maximum time.
            </summary>
            <value>
            The maximum time.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.ReduceFreq">
            <summary>
            Gets the reduce frequency.
            </summary>
            <value>
            The reduce frequency.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.RealTimeBackfill">
            <summary>
            Gets a value indicating whether the real time backfill.
            </summary>
            <value>
            <c>true</c> if real time backfill, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.SpawnProcess">
            <summary>
            Gets a value indicating whether the spawn process.
            </summary>
            <value>
            <c>true</c> if spawn process, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.TimeFormat">
            <summary>
            Gets the time format.
            </summary>
            <value>
            The time format.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DispatchAdapter.Ttl">
            <summary>
            Gets the TTL.
            </summary>
            <value>
            The TTL.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter">
            <summary>
            A display adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.Events">
            <summary>
            Gets the events.
            </summary>
            <value>
            The events.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.General">
            <summary>
            Gets the general.
            </summary>
            <value>
            The general.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.Page">
            <summary>
            Gets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.Statistics">
            <summary>
            Gets the statistics.
            </summary>
            <value>
            The statistics.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.Visualizations">
            <summary>
            Gets the visualizations.
            </summary>
            <value>
            The visualizations.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter">
            <summary>
            The events adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.List">
            <summary>
            Gets the list.
            </summary>
            <value>
            The list.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.MaxLines">
            <summary>
            Gets the maximum lines.
            </summary>
            <value>
            The maximum lines.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.Raw">
            <summary>
            Gets the raw.
            </summary>
            <value>
            The raw.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.RowNumbers">
            <summary>
            Gets a value indicating whether the row numbers.
            </summary>
            <value>
            <c>true</c> if row numbers, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.Table">
            <summary>
            Gets the table.
            </summary>
            <value>
            The table.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.EventsType">
            <summary>
            Gets the type of the events.
            </summary>
            <value>
            The type of the events.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.ListAdapter">
            <summary>
            A list adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.ListAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.ListAdapter.Drilldown">
            <summary>
            Gets the drilldown.
            </summary>
            <value>
            The drilldown.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.ListAdapter.Wrap">
            <summary>
            Gets a value indicating whether the wrap.
            </summary>
            <value>
            <c>true</c> if wrap, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.RawAdapter">
            <summary>
            A raw adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.RawAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.RawAdapter.Drilldown">
            <summary>
            Gets the drilldown.
            </summary>
            <value>
            The drilldown.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.TableAdapter">
            <summary>
            A table adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.TableAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.TableAdapter.Drilldown">
            <summary>
            Gets a value indicating whether the drilldown.
            </summary>
            <value>
            <c>true</c> if drilldown, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.EventsAdapter.TableAdapter.Wrap">
            <summary>
            Gets a value indicating whether the wrap.
            </summary>
            <value>
            <c>true</c> if wrap, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter">
            <summary>
            A general adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter.EnablePreview">
            <summary>
            Gets a value indicating whether the preview is enabled.
            </summary>
            <value>
            <c>true</c> if enable preview, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter.MigratedFromViewState">
            <summary>
            Gets a value indicating whether the migrated from view state.
            </summary>
            <value>
            <c>true</c> if migrated from view state, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter.TimeRangePicker">
            <summary>
            Gets the time range picker.
            </summary>
            <value>
            The time range picker.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter.GeneralType">
            <summary>
            Gets the type of the general.
            </summary>
            <value>
            The type of the general.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter.TimeRangePickerAdapter">
            <summary>
            A time range picker adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter.TimeRangePickerAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.GeneralAdapter.TimeRangePickerAdapter.Show">
            <summary>
            Gets a value indicating whether this object is shown.
            </summary>
            <value>
            <c>true</c> if show, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter">
            <summary>
            A page adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.Pivot">
            <summary>
            Gets the pivot.
            </summary>
            <value>
            The pivot.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.Search">
            <summary>
            Gets the search.
            </summary>
            <value>
            The search.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.PivotAdapter">
            <summary>
            A pivot adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.PivotAdapter}"/>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter">
            <summary>
            A search adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter.Mode">
            <summary>
            Gets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter.ShowFields">
            <summary>
            Gets a value indicating whether the fields is shown.
            </summary>
            <value>
            <c>true</c> if show fields, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter.Search">
            <summary>
            Gets the search.
            </summary>
            <value>
            The search.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter.TimelineAdapter">
            <summary>
            A timeline adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter.TimelineAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter.TimelineAdapter.Format">
            <summary>
            Gets the format to use.
            </summary>
            <value>
            The format.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.PageAdapter.SearchAdapter.TimelineAdapter.Scale">
            <summary>
            Gets the scale.
            </summary>
            <value>
            The scale.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.StatisticsAdapter">
            <summary>
            The statistics adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.StatisticsAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.StatisticsAdapter.Drilldown">
            <summary>
            Gets the drilldown.
            </summary>
            <value>
            The drilldown.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.StatisticsAdapter.Overlay">
            <summary>
            Gets a value indicating whether the overlay.
            </summary>
            <value>
            <c>true</c> if overlay, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.StatisticsAdapter.RowNumbers">
            <summary>
            Gets a value indicating whether the row numbers.
            </summary>
            <value>
            <c>true</c> if row numbers, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.StatisticsAdapter.Wrap">
            <summary>
            Gets a value indicating whether the wrap.
            </summary>
            <value>
            <c>true</c> if wrap, <c>false</c> if not.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter">
            <summary>
            The visualizations adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter.ChartHeight">
            <summary>
            Gets the height of the chart.
            </summary>
            <value>
            The height of the chart.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter.Charting">
            <summary>
            Gets the charting.
            </summary>
            <value>
            The charting.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter.Show">
            <summary>
            Gets a value indicating whether this object is shown.
            </summary>
            <value>
            <c>true</c> if show, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter.VisualizationsType">
            <summary>
            Gets the type of the visualizations.
            </summary>
            <value>
            The type of the visualizations.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter.ChartingAdapter">
            <summary>
            A charting adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter.ChartingAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.DisplayAdapter.VisualizationsAdapter.ChartingAdapter.Drilldown">
            <summary>
            Gets the drilldown.
            </summary>
            <value>
            The drilldown.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearch.RequestAdapter">
            <summary>
            A request adapter.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter{Splunk.Client.SavedSearch.RequestAdapter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearch.RequestAdapter.UIDispatchApp">
            <summary>
            Gets the dispatch application.
            </summary>
            <value>
            The user interface dispatch application.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearch.RequestAdapter.UIDispatchView">
            <summary>
            Gets the dispatch view.
            </summary>
            <value>
            The user interface dispatch view.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearchAttributes">
            <summary>
            Provides the arguments for creating a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/khXMdf">REST API: POST saved/searches.</a>
            </description></item>
            <item><description>
              <a href="http://goo.gl/csTpM2">REST API: POST saved/searches/{name}.</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.SavedSearchAttributes}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.Actions">
            <summary>
            Gets or sets a comma-separated list of actions to enable for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            No actions are enabled by default.
            </remarks>
            <value>
            A comma-separated list of actions to enable for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailAuthPassword">
            <summary>
            Gets or sets a password for authenticating with the SMTP server for the e-
            mail action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            A password for authenticating with the SMTP server for the e-mail action
            of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailAuthUsername">
            <summary>
            Gets or sets a username for authenticating with the SMTP server for the e-
            mail action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            A username for authenticating with the SMTP server for the e-mail action
            of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailBcc">
            <summary>
            Gets or sets the e-mail addresses of the blind carbon copy (BCC)
            recipients for the e-mail action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The e-mail addresses of the blind carbon copy (BCC) recipients for the e-
            mail action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailCC">
            <summary>
            Gets or sets the e-mail addresses of the carbon copy (CC)
            recipients for the e-mail action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The e-mail addresses of the carbon copy (CC) recipients for the e-mail
            action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailCommand">
            <summary>
            Gets or sets the search command which is responsible for executing the e-
            mail action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Generally the command is a template search pipeline which is realized
            with values from the <see cref="T:Splunk.Client.SavedSearch"/>. Reference template
            arguments by enclosing their names in dollar signs ($). For example, to
            reference <see cref="T:Splunk.Client.SavedSearch"/>.Name use
            <c>$name$</c>. To reference <see cref="T:Splunk.Client.SavedSearch"/>.Search use
            <c>$search$</c>.
            </remarks>
            <value>
            The search command which is responsible for executing the e-mail action
            for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailFormat">
            <summary>
            Gets or sets the format of the e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This value also applies to any attachments.
            </remarks>
            <value>
            The format of the e-mail action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailFrom">
            <summary>
            Gets or sets the e-mail address from which the e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/> originates.
            </summary>
            <remarks>
            This vaulue defaults to <c>splunk@$LOCALHOST</c> or whatever value is set
            in <a href="http://goo.gl/odNige">alert_actions.conf</a>.
            </remarks>
            <value>
            The e-mail address from which the e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/> originates.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailInline">
            <summary>
            Gets or sets a value indicating whether search results should be
            contained in the body of the action e-mail for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Search results can be either inline or attached. See
            <see cref="P:Splunk.Client.SavedSearchAttributes.ActionEmailSendResults"/>.
            </remarks>
            <value>
            A value indicating whether search results should be contained in the body
            of the action e-mail for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailMailServer">
            <summary>
            Gets or sets the address of the MTA server to be used to send the action
            e-mail for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This value defaults to localhost or whatever value is set in
            <a href="http://goo.gl/odNige">alert_actions.conf</a>.
            </remarks>
            <value>
            The address of the MTA server to be used to send the action e-mail for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailMaxResults">
            <summary>
            Gets or sets the global maximum number of search results to send when the
            e-mail for a <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </summary>
            <remarks>
            The default value is <c>100</c>.
            </remarks>
            <value>
            The global maximum number of search results to send when the e-mail for a
            <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailMaxTime">
            <summary>
            Gets or sets the maximum period of time the e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ("s"|"m"|"h"|"d")]]&gt;</c>. The default is <c>"5m"</c>.
            </remarks>
            <value>
            The maximum period of time the e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailReportCidFontList">
            <summary>
            Gets or sets the set and load order of CID fonts for handling Simplified
            Chinese (gb), Traditional Chinese (cns), Japanese (jp), and Korean (kor)
            in Integrated PDF Rendering.
            </summary>
            <remarks>
            The default value is <c>"gb cns jp kor"</c>.
            </remarks>
            <value>
            The set and load order of CID fonts for handling Simplified Chinese (gb),
            Traditional Chinese (cns), Japanese (jp), and Korean (kor) in Integrated
            PDF Rendering.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailReportIncludeSplunkLogo">
            <summary>
            Gets or sets a value indicating whether to include the Splunk logo with
            the report on an e-mail action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the report on an e-mail action for a <see cref="T:Splunk.Client.SavedSearch"/> should include the Splunk logo; otherwise
            <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailReportPaperOrientation">
            <summary>
            Gets or sets the paper orientation for the report on an e-mail action for
            a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default is <see cref="T:Splunk.Client.PaperOrientation"/><c>.Portrait</c>.
            </remarks>
            <value>
            The paper orientation for the report on an e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailReportPaperSize">
            <summary>
            Gets or sets the paper size for the report on an e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default is <see cref="T:Splunk.Client.PaperSize"/><c>.Letter</c>.
            </remarks>
            <value>
            The paper size for the report on an e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailReportServerEnabled">
            <summary>
            Gets or sets a value that indicates whether the PDF server is enabled on
            the e-mail action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the PDF server is enabled on the e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/>; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailSendPdf">
            <summary>
            Gets or sets a value that indicates whether to create and send the
            results of the e-mail action for a <see cref="T:Splunk.Client.SavedSearch"/> as a PDF
            report.
            </summary>
            <remarks>
            The default value is <c>false</c>
            </remarks>
            <value>
            <c>true</c>, if the results of the e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/> should be created and sent as a PDF report;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailSendResults">
            <summary>
            Gets or sets a value that indicates whether search results should be
            included in the action e-mail for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Results can be either attached or inline. See
            <see cref="P:Splunk.Client.SavedSearchAttributes.ActionEmailInline"/>. The default value is <c>false</c>
            </remarks>
            <value>
            <c>true</c>, if search results should be included in the action e-mail
            for a <see cref="T:Splunk.Client.SavedSearch"/>; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailSubject">
            <summary>
            Gets or sets an alternate subject for the action e-mail on a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is <c>"SplunkAlert-"&lt;saved-search-name&gt;</c>.
            </remarks>
            <value>
            An alternate subject for the action e-mail on a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailTo">
            <summary>
            Gets or sets the e-mail addresses of the recipients for the e-mail action
            of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            Ehe e-mail addresses of the recipients for the e-mail action of a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailTrackAlert">
            <summary>
            Gets or sets a value that indicates whether the e-mail action of a
            <see cref="T:Splunk.Client.SavedSearch"/> signifies a trackable alert.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the e-mail action of a <see cref="T:Splunk.Client.SavedSearch"/>
            signifies a trackable alert; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailTtl">
            <summary>
            Gets or sets the minimum time-to-live for artifacts of the e-mail action
            for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ["p"] ]]&gt;</c>. If <c>p</c> follows &lt;![CDATA[&lt;integer&gt;]]&gt;,
            the unit of time is the number of scheduled periods. Otherwise, the unit
            of time is seconds. The default is 86,400 seconds; equivalent to 24 hours.
            </remarks>
            <value>
            The minimum time-to-live for artifacts of the e-mail action for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailUseSsl">
            <summary>
            Gets or sets a value indicating whether to use SSL when communicating
            with the SMTP server.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if SSL should be used when communicatin with the SMTP server;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailUseTls">
            <summary>
            Gets or sets a value indicating whether to use TLS when communicating
            with the SMTP server.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if TLS should be used when communication with the SMTP
            server.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionEmailWidthSortColumns">
            <summary>
            Gets or sets a value indicating whether columns should be sorted from
            least wide to most wide, left to right.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if columns should be sorted from least wide to most wide,
            left to right; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionPopulateLookupCommand">
            <summary>
            Gets or sets the search command which is responsible for executing the
            populate lookup action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Generally the command is a template search pipeline which is realized
            with values from the <see cref="T:Splunk.Client.SavedSearch"/>. Reference template
            arguments by enclosing their names in dollar signs ($). For example, to
            reference <see cref="T:Splunk.Client.SavedSearch"/>.Name use
            <c>$name$</c>. To reference <see cref="T:Splunk.Client.SavedSearch"/>.Search use
            <c>$search$</c>.
            </remarks>
            <value>
            The search command which is responsible for executing the populate lookup
            action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionPopulateLookupDestination">
            <summary>
            Gets or sets the name of the lookup table or lookup path to fill in the
            lookup action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The name of the lookup table or lookup path to fill in the lookup action
            of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionPopulateLookupHostName">
            <summary>
            Gets or sets the hostname used in the web link (URI) that is sent in the
            populate lookup action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Valid forms are <c>"hostname"</c> and <c>"protocol://hostname:port"</c>.
            </remarks>
            <value>
            The hostname used in the web link (URI) that is sent in the populate
            lookup action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionPopulateLookupMaxResults">
            <summary>
            Gets or sets the global maximum number of search results to send when the
            populate lookup action for a <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </summary>
            <remarks>
            The default value is <c>100</c>.
            </remarks>
            <value>
            The global maximum number of search results to send when the populate
            lookup action for a <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionPopulateLookupMaxTime">
            <summary>
            Gets or sets the maximum period of time the populate lookup action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ("s"|"m"|"h"|"d")]]&gt;</c>. The default is <c>"5m"</c>.
            </remarks>
            <value>
            The maximum period of time the populate lookup action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionPopulateLookupTrackAlert">
            <summary>
            Gets or sets a value that indicates whether the populate lookup action
            for a <see cref="T:Splunk.Client.SavedSearch"/> signifies a trackable alert.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the populate lookup action for a
            <see cref="T:Splunk.Client.SavedSearch"/> signifies a trackable alert; <c>false</c>
            otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionPopulateLookupTtl">
            <summary>
            Gets or sets the minimum time-to-live for artifacts of the populate
            lookup action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ["p"] ]]&gt;</c>. If <c>p</c> follows &lt;![CDATA[&lt;integer&gt;]]&gt;,
            the unit of time is the number of scheduled periods. Otherwise, the unit
            of time is seconds. The default is 86,400 seconds; equivalent to 24 hours.
            </remarks>
            <value>
            The minimum time-to-live for artifacts of the populate lookup action for
            a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionRssCommand">
            <summary>
            Gets or sets the search command which is responsible for executing the
            RSS action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Generally the command is a template search pipeline which is realized
            with values from the <see cref="T:Splunk.Client.SavedSearch"/>. Reference template
            arguments by enclosing their names in dollar signs ($). For example, to
            reference <see cref="T:Splunk.Client.SavedSearch"/>.Name use
            <c>$name$</c>. To reference <see cref="T:Splunk.Client.SavedSearch"/>.Search use
            <c>$search$</c>.
            </remarks>
            <value>
            The search command which is responsible for executing the RSS action for
            a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionRssMaxResults">
            <summary>
            Gets or sets the global maximum number of search results to send when the
            RSS action for a <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </summary>
            <remarks>
            The default value is <c>100</c>.
            </remarks>
            <value>
            The global maximum number of search results to send when the RSS action
            for a <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionRssMaxTime">
            <summary>
            Gets or sets the maximum period of time the RSS action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ("s"|"m"|"h"|"d")]]&gt;</c>. The default is <c>"1m"</c>.
            </remarks>
            <value>
            The maximum period of time the RSS action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionRssTrackAlert">
            <summary>
            Gets or sets a value that indicates whether the RSS action of a
            <see cref="T:Splunk.Client.SavedSearch"/> signifies a trackable alert.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the RSS action of a <see cref="T:Splunk.Client.SavedSearch"/>
            signifies a trackable alert; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionRssTtl">
            <summary>
            Gets or sets the minimum time-to-live for artifacts of the RSS action for
            a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ["p"] ]]&gt;</c>. If <c>p</c> follows &lt;![CDATA[&lt;integer&gt;]]&gt;,
            the unit of time is the number of scheduled periods. Otherwise, the unit
            of time is seconds. The default is 86,400 seconds; equivalent to 24 hours.
            </remarks>
            <value>
            The minimum time-to-live for artifacts of the RSS action for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionScriptCommand">
            <summary>
            Gets or sets the search command which is responsible for executing the
            script action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Generally the command is a template search pipeline which is realized
            with values from the <see cref="T:Splunk.Client.SavedSearch"/>. Reference template
            arguments by enclosing their names in dollar signs ($). For example, to
            reference <see cref="T:Splunk.Client.SavedSearch"/>.Name use
            <c>$name$</c>. To reference <see cref="T:Splunk.Client.SavedSearch"/>.Search use
            <c>$search$</c>.
            </remarks>
            <value>
            The search command which is responsible for executing the script action
            for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionScriptFileName">
            <summary>
            Gets or sets the file name of the script to invoke when the script action
            of a <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </summary>
            <remarks>
            A value is required when the script action of a
            <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </remarks>
            <value>
            The file name of the script to invoke when the script action of a
            <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionScriptHostName">
            <summary>
            Gets or sets the hostname used in the web link (URI) that is sent in the
            script action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Valid forms are <c>"hostname"</c> and <c>"protocol://hostname:port"</c>.
            </remarks>
            <value>
            The hostname used in the web link (URI) that is sent in the script action
            for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionScriptMaxResults">
            <summary>
            Gets or sets the global maximum number of search results to send when the
            script action for a <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </summary>
            <remarks>
            The default value is <c>100</c>.
            </remarks>
            <value>
            The global maximum number of search results to send when the script
            action for a <see cref="T:Splunk.Client.SavedSearch"/> is enabled.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionScriptMaxTime">
            <summary>
            Gets or sets the maximum period of time the script action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ("s"|"m"|"h"|"d")]]&gt;</c>. The default is <c>"5m"</c>.
            </remarks>
            <value>
            The maximum period of time the script action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionScriptTrackAlert">
            <summary>
            Gets or sets a value that indicates whether the script action of a
            <see cref="T:Splunk.Client.SavedSearch"/> signifies a trackable alert.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the script action of a <see cref="T:Splunk.Client.SavedSearch"/>
            signifies a trackable alert; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionScriptTtl">
            <summary>
            Gets or sets the minimum time-to-live for artifacts of the script action
            for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ["p"] ]]&gt;</c>. If <c>p</c> follows &lt;![CDATA[&lt;integer&gt;]]&gt;,
            the unit of time is the number of scheduled periods. Otherwise, the unit
            of time is seconds. The default is 600 seconds; equivalent to 10 minutes.
            </remarks>
            <value>
            The minimum time-to-live for artifacts of the script action for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionSummaryIndexCommand">
            <summary>
            Gets or sets the search command which is responsible for executing the
            summary index action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Generally the command is a template search pipeline which is realized
            with values from the <see cref="T:Splunk.Client.SavedSearch"/>. Reference template
            arguments by enclosing their names in dollar signs ($). For example, to
            reference <see cref="T:Splunk.Client.SavedSearch"/>.Name use
            <c>$name$</c>. To reference <see cref="T:Splunk.Client.SavedSearch"/>.Search use
            <c>$search$</c>.
            </remarks>
            <value>
            The search command which is responsible for executing the summary index
            action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionSummaryIndexInline">
            <summary>
            Gets or sets a value indicating whether to execute the summary index
            action of a <see cref="T:Splunk.Client.SavedSearch"/> as part of the
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This option is considered only if the summary index action is enabled and
            is always executed. The default value is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if the index action of a <see cref="T:Splunk.Client.SavedSearch"/>
            should execute the summary index action as part of the
            <see cref="T:Splunk.Client.SavedSearch"/>; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionSummaryIndexMaxResults">
            <summary>
            Gets or sets the maximum number of search results sent via alerts for the
            index action of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is <c>100</c>.
            </remarks>
            <value>
            The maximum number of search results sent via alerts for the index action
            of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionSummaryIndexMaxTime">
            <summary>
            Gets or sets the maximum period of time the summary index action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ("s"|"m"|"h"|"d")]]&gt;</c>. The default is <c>"5m"</c>.
            </remarks>
            <value>
            The maximum period of time the summary index action for a
            <see cref="T:Splunk.Client.SavedSearch"/> may execute before it is aborted.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionSummaryIndexName">
            <summary>
            Gets or sets the name of the summary index where the results of the
            <see cref="T:Splunk.Client.SavedSearch"/> are stored.
            </summary>
            <remarks>
            The default summary index name is <c>"summary"</c>.
            </remarks>
            <value>
            The name of the summary index where the results of the
            <see cref="T:Splunk.Client.SavedSearch"/> are stored.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionSummaryIndexTrackAlert">
            <summary>
            Gets or sets a value that indicates whether the summary index action of a
            <see cref="T:Splunk.Client.SavedSearch"/> signifies a trackable alert.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the summary index action of a <see cref="T:Splunk.Client.SavedSearch"/>
            signifies a trackable alert; <c>false</c>
            otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.ActionSummaryIndexTtl">
            <summary>
            Gets or sets the minimum time-to-live for artifacts of the summary index
            action for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ["p"] ]]&gt;</c>. If <c>p</c> follows &lt;![CDATA[&lt;integer&gt;]]&gt;,
            the unit of time is the number of scheduled periods. Otherwise, the unit
            of time is seconds. The default is ten scheduled periods.
            </remarks>
            <value>
            The minimum time-to-live for artifacts of the summary index action for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AlertComparator">
            <summary>
            Gets or sets the comparator used with <see cref="P:Splunk.Client.SavedSearchAttributes.AlertThreshold"/>
            to trigger alert actions.
            </summary>
            <value>
            The comparator used with <see cref="P:Splunk.Client.SavedSearchAttributes.AlertThreshold"/> to trigger alert
            actions.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AlertCondition">
            <summary>
            Gets or sets a conditional search that is evaluated against the results
            of a saved search.
            </summary>
            <remarks>
            Alerts are triggered if the search yields a non-empty result. If you
            specify a value, do not set <c>counttype</c>, <c>relation</c>, or
            <c>quantity</c>.
            </remarks>
            <value>
            A conditional search that is evaluated against the results of a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AlertDigestMode">
            <summary>
            Gets or sets a value indicating whether Splunk applies the alert actions
            to the entire result set or on each individual result.
            </summary>
            <remarks>
            The default value is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if Splunk should apply the alert actions to the entire
            result set or on each individual result; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AlertExpires">
            <summary>
            Gets or sets the period of time to show the alert in the dashboard.
            </summary>
            <remarks>
            Express this value as a string of the form <c>&lt;![CDATA[ &lt;integer&gt;
            ("s"|"m"|"h"|"d")]]&gt;</c>. The default is <c>"24h"</c>.
            </remarks>
            <value>
            The period of time to show the alert in the dashboard.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AlertSeverity">
            <summary>
            Gets or sets the alert severity level for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.SavedSearchAttributes.AlertSeverity"/>.Warning.
            </remarks>
            <value>
            The alert severity level for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AlertThreshold">
            <summary>
            Gets or sets a string that specifies an absolute or percentage value to
            compare using <see cref="P:Splunk.Client.SavedSearchAttributes.AlertComparator"/> before triggering the alert
            actions for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This value is specified as a string of the form &lt;![CDATA[&lt;
            integer&gt; *1"%"]]&gt;.
            </remarks>
            <value>
            A string that specifies an absolute or percentage value to compare using
            <see cref="P:Splunk.Client.SavedSearchAttributes.AlertComparator"/> before triggering the alert actions for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AlertTrack">
            <summary>
            Gets or sets a value indicating whether to track the actions triggered by
            a scheduled <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.SavedSearchAttributes.AlertTrack"/>.Automatic.
            </remarks>
            <value>
            <c>true</c>, if the actions triggered by a scheduled
            <see cref="T:Splunk.Client.SavedSearch"/> should be tracked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AlertType">
            <summary>
            Gets or sets a value that specifies the basis of an alert.
            </summary>
            <remarks>
            This value is overriden by <see cref="P:Splunk.Client.SavedSearchAttributes.AlertCondition"/> if it is also
            specified.
            </remarks>
            <value>
            A value that specifies the basis of an alert.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarize">
            <summary>
            Gets or sets a value that indicates whether the scheduler should ensure
            that the data for a <see cref="T:Splunk.Client.SavedSearch"/> is automatically summarized.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the scheduler should ensure that the data for a
            <see cref="T:Splunk.Client.SavedSearch"/> is automatically summarized;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeCommand">
            <summary>
            Gets or sets a search command template that constructs the auto
            summarization for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This is an advanced feature. Do not set this value unless you understand
            the architecture of auto summarization of saved searches. The default
            value is:
            <code>
                summarize override=partial
                timespan=$auto_summarize.timespan$
                max_summary_size=$auto_summarize.max_summary_size$
                max_summary_ratio=$auto_summarize.max_summary_ratio$
                max_disabled_buckets=$auto_summarize.max_disabled_buckets$
                max_time=$auto_summarize.max_time$
                [ $search$ ]
            </code>
            </remarks>
            <value>
            A search command template that constructs the auto summarization for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeCronSchedule">
            <summary>
            Gets or sets a Cron schedule for auto-summarization of a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is <c>"*/10 * * * *"</c> which schedules auto-
            summarization on a ten hour schedule.
            </remarks>
            <value>
            A Cron schedule for auto-summarization of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchEarliestTime">
            <summary>
            Gets or sets a time string that specifies the earliest time for
            summarizing a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This value can be specified as a relative or absolute time string. You
            must use the <see cref="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchTimeFormat"/> to specify an
            absolute time string.
            </remarks>
            <value>
            A time string that specifies the earliest time for summarizing a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchLatestTime">
            <summary>
            Gets or sets a time string that specifies the latest time for summarizing
            a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This value can be specified as a relative or absolute time string. You
            must use the <see cref="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchTimeFormat"/> to specify an
            absolute time string.
            </remarks>
            <value>
            A time string that specifies the latest time for summarizing a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchTimeFormat">
            <summary>
            Gets or sets the time format that Splunk uses to parse the values of
            <see cref="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchEarliestTime"/> and
            <see cref="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchLatestTime"/> when they are
            specified as absolute times.
            </summary>
            <remarks>
            The default value is <c>"%FT%T.%Q%:z"</c>.
            </remarks>
            <value>
            The time format that Splunk uses to parse the values of
            <see cref="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchEarliestTime"/> and
            <see cref="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchLatestTime"/> when they are specified as
            absolute times.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeDispatchTtl">
            <summary>
            Gets or sets a string that specifies the time to live in seconds or
            periods for the artifacts of the summarization of a scheduled
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is <c>"60"</c>, equivalent to one minute.
            </remarks>
            <value>
            A string that specifies the time to live in seconds or periods for the
            artifacts of the summarization of a scheduled <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeMaxDisabledBuckets">
            <summary>
            Gets or sets the maximum number of buckets with suspended summarization
            before a summarization search is completely stopped.
            </summary>
            <remarks>
            The summarization of the search is suspended for
            <see cref="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeSuspendPeriod"/> when this value is reached. The
            default value is <c>2</c>.
            </remarks>
            <value>
            The maximum number of buckets with suspended summarization before a
            summarization search is completely stopped.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeMaxSummaryRatio">
            <summary>
            Gets or sets the ratio of summary_size/bucket_size which specifies when
            to stop summarization and deem it unhelpful for a bucket.
            </summary>
            <remarks>
            This value is only checked when the summary_size is larger than
            <see cref="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeMaxSummarySize"/>. The default value is
            <c>0.1</c>.
            </remarks>
            <value>
            The ratio of summary_size/bucket_size which specifies when to stop
            summarization and deem it unhelpful for a bucket.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeMaxSummarySize">
            <summary>
            Gets or sets the minimum summary size, in bytes, before testing whether
            the summarization is helpful.
            </summary>
            <remarks>
            The default value is <c>52428800</c>, equivalent to 5MB.
            </remarks>
            <value>
            The minimum summary size, in bytes, before testing whether the
            summarization is helpful.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeMaxTime">
            <summary>
            Gets or sets the maximum time in seconds that a summary search is allowed
            to run.
            </summary>
            <remarks>
            The default value is <c>3600</c>, equivalent to 60 minutes. This is an
            approximate time as the summary search stops at clean bucket boundaries.
            </remarks>
            <value>
            The maximum time in seconds that a summary search is allowed to run.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.AutoSummarizeSuspendPeriod">
            <summary>
            Gets or sets a time specfier that tells Splunk when to suspend
            summarization of a <see cref="T:Splunk.Client.SavedSearch"/>, if the summarization is
            deemed unhelpful.
            </summary>
            <remarks>
            The default time is <c>"24h"</c>.
            </remarks>
            <value>
            A time specfier that tells Splunk when to suspend summarization of a
            <see cref="T:Splunk.Client.SavedSearch"/>, if the summarization is deemed unhelpful.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.CronSchedule">
            <summary>
            Gets or sets the Cron schedule to execute a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            Use standard Cron notation to define the scheduled search interval.
            Splunk recommends that you schedule your searches so that they are
            staggered over time. This reduces system load. Running all of them every
            20 minutes (*/20) means they would all launch at hh:00, hh:20, and hh:40
            and this might slow your system every twenty minutes.
            </remarks>
            <value>
            The Cron schedule to execute a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.Description">
            <summary>
            Gets or sets the human-readable description of a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The default value is an empty string.
            </remarks>
            <value>
            The human-readable description of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.Disabled">
            <summary>
            Gets or sets a value that indicates if a <see cref="T:Splunk.Client.SavedSearch"/>
            should be disabled.
            </summary>
            <remarks>
            Disabled saved searches are not visible in Splunk Web.
            </remarks>
            <value>
            <c>true</c>, if the <see cref="T:Splunk.Client.SavedSearch"/> should be disabled;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchBuckets">
            <summary>
            Gets or sets the maximum number of timeline buckets for a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This default value is <c>0</c>.
            </remarks>
            <value>
            The maximum number of timeline buckets for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchEarliestTime">
            <summary>
            Gets or sets a value specifying the earliest time to begin a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The value can be a relative or absolute time. If it is an absolute time,
            use the <see cref="P:Splunk.Client.SavedSearchAttributes.DispatchTimeFormat"/> to format it.
            </remarks>
            <value>
            A value specifying the earliest time to begin a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchLatestTime">
            <summary>
            Gets or sets a value specifying the latest time to begin a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            The value can be a relative or absolute time. If it is an absolute time,
            use the <see cref="P:Splunk.Client.SavedSearchAttributes.DispatchTimeFormat"/> to format it.
            </remarks>
            <value>
            A value specifying the latest time to begin a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchLookups">
            <summary>
            Gets or sets a value indicating whether lookups are enabled.
            </summary>
            <remarks>
            The default value is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if lookups are enabled; <c>false</c> othwerwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchMaxCount">
            <summary>
            Gets or sets the maximum number of results to produce before finalizing a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The maximum number of results to produce before finalizing a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchMaxTime">
            <summary>
            Gets or sets the maximum length of time to run before finalizing a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <value>
            The maximum length of time to run before finalizing a
            <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchReduceFrequency">
            <summary>
            Gets or sets a value specifying how frequently Splunk runs the map/reduce
            phase on accumulated map values.
            </summary>
            <remarks>
            The default value is <c>10</c>.
            </remarks>
            <value>
            A value specifying how frequently Splunk runs the map/reduce phase on
            accumulated map values.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchRealTimeBackfill">
            <summary>
            Gets or sets a value indicating whether to back fill the real-time window
            for a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <remarks>
            This value only applies to real-time searches.
            </remarks>
            <value>
            <c>true</c>, if the real-time window for a <see cref="T:Splunk.Client.SavedSearch"/>
            should be back filled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchSpawnProcess">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:Splunk.Client.SavedSearch"/>
            should run in its own process.
            </summary>
            <remarks>
            The default value is <c>false</c>. A searches against an index must run
            in its own process.
            </remarks>
            <value>
            <c>true</c>, if a <see cref="T:Splunk.Client.SavedSearch"/> should run in its own process;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchTimeFormat">
            <summary>
            Gets or sets a value specifying the time format Splunk should use for the
            earliest and latest times of a search.
            </summary>
            <remarks>
            The default value is <c>"%FT%T.%Q%:z"</c>.
            </remarks>
            <value>
            A value specifying the time format Splunk should use for the earliest and
            latest times of a <see cref="T:Splunk.Client.SavedSearch"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.DispatchTtl">
            <summary>
            Gets or sets the time to live (in seconds) for the artifacts of a
            <see cref="T:Splunk.Client.SavedSearch"/>, if no actions are triggered.
            </summary>
            <remarks>
            <para>
            The default value is <c>"2p"</c> (two scheduled search periods).
            </para><para>
            If an action is triggered, Splunk changes the time to live (TTL) to that
            action's TTL. If multiple actions are triggered, Splunk applies the
            maximum TTL to the artifacts. To set an action's TTL, refer to
            <a href="http://goo.gl/6YNR2X">alert_actions.conf.spec</a> in the
            Splunk Admin Manual.</para>
            </remarks>
            <value>
            The time to live (in seconds) for the artifacts of a
            <see cref="T:Splunk.Client.SavedSearch"/>, if no actions are triggered.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.IsScheduled">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:Splunk.Client.SavedSearch"/>
            is to be run on a schedule.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if a <see cref="T:Splunk.Client.SavedSearch"/> is to be run on a schedule;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.IsVisible">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:Splunk.Client.SavedSearch"/>
            should appear in the list of saved searches on Splunk Web.
            </summary>
            <remarks>
            The default value is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if a <see cref="T:Splunk.Client.SavedSearch"/> should appear in the list of
            saved searches on Splunk Web; <c>false</c> othwerwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.MaxConcurrent">
            <summary>
            Gets or sets the maximum number of concurrent instances of a
            <see cref="T:Splunk.Client.SavedSearch"/> the scheduler is allowed to run.
            </summary>
            <remarks>
            The default value is <c>1</c>.
            </remarks>
            <value>
            The maximum number of concurrent instances of a
            <see cref="T:Splunk.Client.SavedSearch"/> the scheduler is allowed to run.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.RealTimeSchedule">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:Splunk.Client.SavedSearch"/>
            is to be run on a realtime schedule.
            </summary>
            <remarks>
            The default value is <c>true</c>. The scheduler bases its determination
            of the next scheduled <see cref="T:Splunk.Client.SavedSearch"/> run time or the current
            time. If this value is <c>false</c>, the scheduler bases its
            determination of the next scheduled <see cref="T:Splunk.Client.SavedSearch"/> on the
            last run time. This is called continuous scheduling.
            <para>
            The scheduler never skips scheduled execution periods when a
            <see cref="T:Splunk.Client.SavedSearch"/> is configured for continuous scheduling.
            However, the execution of the <see cref="T:Splunk.Client.SavedSearch"/> might fall behind
            depending on the scheduler's load. Use continuous scheduling whenever you
            enable the summary index option.</para>
            <para>
            When a <see cref="T:Splunk.Client.SavedSearch"/> is configured for realtime scheduling,
            the scheduler might skip some execution periods to make sure that the
            scheduler is executing the searches running over the most recent time
            range. The scheduler tries to execute searches configured for realtime
            scheduling before it executes searches that have continuous
            scheduling.</para>
            </remarks>
            <value>
            <c>true</c>, if a <see cref="T:Splunk.Client.SavedSearch"/> is to be run on a realtime
            schedule; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.RestartOnSearchPeerAdd">
            <summary>
            Gets or sets a value indicating whether to restart a realtime
            <see cref="T:Splunk.Client.SavedSearch"/> managed by the scheduler when a new
            search peer becomes available.
            </summary>
            <remarks>
            The default value is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if a realtime <see cref="T:Splunk.Client.SavedSearch"/> managed by the
            scheduler should be restarted when a new search peer becomes available;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchAttributes.RunOnStartup">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:Splunk.Client.SavedSearch"/>
            runs when Splunk starts.
            </summary>
            <remarks>
            The default value is <c>false</c> indicating that after Splunk starts,
            the <see cref="T:Splunk.Client.SavedSearch"/> runs at its next scheduled time.
            </remarks>
            <value>
            <c>true</c>, if a <see cref="T:Splunk.Client.SavedSearch"/> runs when Splunk starts;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearchCollection">
            <summary>
            Represents a collection of saved searches.
            </summary>
            <seealso cref="T:Splunk.Client.EntityCollection{Splunk.Client.SavedSearch,Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.ISavedSearchCollection{Splunk.Client.SavedSearch}"/>
        </member>
        <member name="M:Splunk.Client.SavedSearchCollection.#ctor(Splunk.Client.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.SavedSearchCollection"/>
            class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.SavedSearchCollection.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.SavedSearchCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.SavedSearchCollection.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.SavedSearchCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
        </member>
        <member name="M:Splunk.Client.SavedSearchCollection.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.SavedSearchCollection"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.SavedSearchCollection.CreateAsync(System.String,System.String,Splunk.Client.SavedSearchAttributes,Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.SavedSearchCollection.GetSliceAsync(Splunk.Client.SavedSearchCollection.Filter)">
            <inheritdoc/>
        </member>
        <member name="F:Splunk.Client.SavedSearchCollection.ClassResourceName">
            <summary>
            Name of the class resource.
            </summary>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Messages">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Pagination">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.SavedSearchCollection.Filter">
            <summary>
            Provides the arguments required for retrieving <see cref="T:Splunk.Client.SavedSearch"/>
            entries.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
                <a href="http://goo.gl/bKrRK0">REST API: GET saved/searches</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.SavedSearchCollection.Filter}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.Count">
            <summary>
            Gets or sets a value specifying the maximum number of
            <see cref="T:Splunk.Client.SavedSearch"/> entries to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is set to zero, then all
            <see cref="T:Splunk.Client.SavedSearch"/> entries are returned. The default value is
            <c>30</c>.
            </remarks>
            <value>
            A value specifying the maximum number of <see cref="T:Splunk.Client.SavedSearch"/>
            entries to return.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.EarliestTime">
            <summary>
            Gets or sets the lower bound of the time window for which
            <see cref="T:Splunk.Client.SavedSearch"/> schedules should be returned.
            </summary>
            <remarks>
            This property specifies that all the scheduled times starting from this
            time (not just the next run time) should be returned.
            </remarks>
            <value>
            The lower bound of the time window for which <see cref="T:Splunk.Client.SavedSearch"/>
            schedules should be returned.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.LatestTime">
            <summary>
            Gets or sets the upper bound of the time window for which
            <see cref="T:Splunk.Client.SavedSearch"/> schedules should be returned.
            </summary>
            <remarks>
            This property specifies that all the scheduled times ending with this
            time (not just the next run time) should be returned.
            </remarks>
            <value>
            The upper bound of the time window for which <see cref="T:Splunk.Client.SavedSearch"/>
            schedules should be returned.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.ListDefaultActions">
            <summary>
            Gets or sets a value indicating whether to list default actions for
            <see cref="T:Splunk.Client.SavedSearch"/> entries.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if default actions should be listed; <c>false</c>
            otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.Offset">
            <summary>
            Gets or sets a value specifying the first result (inclusive)
            from which to begin returning entries.
            </summary>
            <remarks>
            The <c>Offset</c> property is zero-based and cannot be negative. The
            default value is zero.
            </remarks>
            <value>
            A value specifying the first result (inclusive) from which to begin
            returning entries.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.Search">
            <summary>
            Gets or sets a search expression to filter <see cref="T:Splunk.Client.SavedSearch"/>
            entries.
            </summary>
            <remarks>
            Use this expression to filter the entries returned based on
            <see cref="T:Splunk.Client.SavedSearch"/> properties.
            </remarks>
            <value>
            A search expression to filter <see cref="T:Splunk.Client.SavedSearch"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.SortDirection">
            <summary>
            Gets or sets a value specifying the sort direction for
            <see cref="T:Splunk.Client.SavedSearch"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.SavedSearchCollection.Filter.SortDirection"/>.Ascending.
            </remarks>
            <value>
            The sort direction for <see cref="T:Splunk.Client.SavedSearch"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.SortKey">
            <summary>
            Gets or sets the <see cref="T:Splunk.Client.SavedSearch"/> property to use for sorting
            entries.
            </summary>
            <remarks>
            The default <see cref="T:Splunk.Client.SavedSearch"/> property to use for sorting is
            <c>"name"</c>.
            </remarks>
            <value>
            The <see cref="T:Splunk.Client.SavedSearch"/> property to use for sorting entries.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchCollection.Filter.SortMode">
            <summary>
            Gets or sets a value specifying the sort mode for
            <see cref="T:Splunk.Client.SavedSearch"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.SavedSearchCollection.Filter.SortMode"/>.Automatic.
            </remarks>
            <value>
            The sort mode for <see cref="T:Splunk.Client.SavedSearch"/> entries.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearchDispatchArgs">
            <summary>
            Provides the arguments required for retrieving transformed search results.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/AfzBJO">REST API Reference: POST
              saved/searches/{name}/dispatch</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.SavedSearchDispatchArgs}"/>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchNow">
            <summary>
            Gets or sets a value indicating whether a search should be dispatched
            immediately.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the <see cref="T:Splunk.Client.SavedSearch"/> job should be dispatched
            immediately; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchBuckets">
            <summary>
            Gets or sets the maximum number of time line buckets for a search.
            </summary>
            <remarks>
            This default value is <c>0</c>.
            </remarks>
            <value>
            The maximum number of time line buckets for a search.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchEarliestTime">
            <summary>
            Gets or sets a time string specifying the earliest time to begin a
            <see cref="T:Splunk.Client.SavedSearch"/> job.
            </summary>
            <remarks>
            This value can be a relative or absolute time. If it is an absolute time,
            use the <see cref="P:Splunk.Client.SavedSearchDispatchArgs.DispatchTimeFormat"/> to format it.
            </remarks>
            <value>
            A time string specifying the earliest time to begin the
            <see cref="T:Splunk.Client.SavedSearch"/> job.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchLatestTime">
            <summary>
            Gets or sets a time string specifying the latest time to begin a
            <see cref="T:Splunk.Client.SavedSearch"/> job.
            </summary>
            <remarks>
            This value can be a relative or absolute time. If it is an absolute time,
            use the <see cref="P:Splunk.Client.SavedSearchDispatchArgs.DispatchTimeFormat"/> to format it.
            </remarks>
            <value>
            A time string specifying the latest time to begin the
            <see cref="T:Splunk.Client.SavedSearch"/> job.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchLookups">
            <summary>
            Gets or sets a value indicating whether lookups are enabled.
            </summary>
            <remarks>
            The default value is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if lookups are enabled; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchMaxCount">
            <summary>
            Gets or sets the maximum number of results to produce before finalizing a
            <see cref="T:Splunk.Client.SavedSearch"/> job.
            </summary>
            <value>
            The maximum number of results to produce before finalizing the
            <see cref="T:Splunk.Client.SavedSearch"/> job.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchMaxTime">
            <summary>
            Gets or sets a value that specifies the maximum length of time to run
            before finalizing a <see cref="T:Splunk.Client.SavedSearch"/> job.
            </summary>
            <value>
            The maximum length of time to run before finalizing  the
            <see cref="T:Splunk.Client.SavedSearch"/> job.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchReduceFrequency">
            <summary>
            Gets or sets a value specifying how frequently Splunk runs the map/reduce
            phase on accumulated map values.
            </summary>
            <remarks>
            The default value is <c>10</c>.
            </remarks>
            <value>
            A value specifying how frequently Splunk runs the map/reduce phase on
            accumulated map values.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchRealTimeBackfill">
            <summary>
            Gets or sets a value indicating whether to back fill the real-time window
            for a <see cref="T:Splunk.Client.SavedSearch"/> job.
            </summary>
            <remarks>
            This value only applies to real-time searches.
            </remarks>
            <value>
            <c>true</c>, if the real-time window for the <see cref="T:Splunk.Client.SavedSearch"/>
            job should be back filled; <c>false</c> otherwise. search.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchSpawnProcess">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:Splunk.Client.SavedSearch"/>
            job should run in its own process.
            </summary>
            <remarks>
            The default value is <c>false</c>. A searches against an index must run
            in its own process.
            </remarks>
            <value>
            <c>true</c>, if the <see cref="T:Splunk.Client.SavedSearch"/> job should run in its own
            process; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchTimeFormat">
            <summary>
            Gets or sets a value specifying the time format Splunk should use to
            parse <see cref="P:Splunk.Client.SavedSearchDispatchArgs.DispatchEarliestTime"/> and <see cref="P:Splunk.Client.SavedSearchDispatchArgs.DispatchLatestTime"/>.
            </summary>
            <remarks>
            The default value is <c>"%FT%T.%Q%:z"</c>.
            </remarks>
            <value>
            A value specifying the time format Splunk should use to parse
            <see cref="P:Splunk.Client.SavedSearchDispatchArgs.DispatchEarliestTime"/> and <see cref="P:Splunk.Client.SavedSearchDispatchArgs.DispatchLatestTime"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.DispatchTtl">
            <summary>
            Gets or sets the time to live in seconds for the artifacts of a
            <see cref="T:Splunk.Client.SavedSearch"/> job, if no actions are triggered.
            </summary>
            <remarks>
            <para>
            The default value is <c>"2p"</c> (two scheduled search periods).
            </para><para>
            If an action is triggered, Splunk changes the time to live (TTL) to that
            action's TTL. If multiple actions are triggered, Splunk applies the
            maximum TTL to the artifacts. To set an action's TTL, refer to
            <a href="http://goo.gl/6YNR2X">alert_actions.conf.spec</a> in the
            Splunk Admin Manual.</para>
            </remarks>
            <value>
            The time to live in seconds for the artifacts of the
            <see cref="T:Splunk.Client.SavedSearch"/> job, if no actions are triggered.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.ForceDispatch">
            <summary>
            Gets or sets a value indicating whether to start a new search even if
            another instance of the <see cref="T:Splunk.Client.SavedSearch"/> is already running.
            </summary>
            <remarks>
            The default value is <c>false</c>
            </remarks>
            <value>
            <c>true</c>, if a new search should be started even if another instance
            of the <see cref="T:Splunk.Client.SavedSearch"/> is already running;
            <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SavedSearchDispatchArgs.TriggerActions">
            <summary>
            Gets or sets a value indicating whether to trigger alert actions.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if alert actions should be triggered; <c>false</c>
            otherwise.
            </value>
        </member>
        <member name="T:Splunk.Client.SavedSearchTemplateArgs">
            <summary>
            Provides custom arguments to a <see cref="T:Splunk.Client.SavedSearch"/>.
            </summary>
            <seealso cref="T:Splunk.Client.ArgumentSet"/>
        </member>
        <member name="M:Splunk.Client.SavedSearchTemplateArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.SavedSearchTemplateArgs"/>
            class.
            </summary>
        </member>
        <member name="M:Splunk.Client.SavedSearchTemplateArgs.#ctor(Splunk.Client.Argument[])">
            <summary>
            Initializes a new instance of the Splunk.Client.SavedSearchTemplateArgs
            class.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
        </member>
        <member name="M:Splunk.Client.SavedSearchTemplateArgs.#ctor(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.SavedSearchTemplateArgs"/>
            class from a collection of <see cref="T:Splunk.Client.Argument"/> values.
            </summary>
            <param name="arguments">
            The arguments.
            </param>
        </member>
        <member name="T:Splunk.Client.Scheme">
            <summary>
            Values that represent Scheme.
            </summary>
        </member>
        <member name="F:Splunk.Client.Scheme.Http">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.Scheme.Https">
            <summary>
            
            </summary>
        </member>
        <member name="T:Splunk.Client.SearchEventArgs">
            <summary>
            Provides the arguments required for retrieving untransformed search
            results.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/eZzuBh">REST API Reference: POST
              search/jobs/{search_id}/events</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.SearchEventArgs}"/>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.Count">
            <summary>
            Gets or sets the maximum number of results to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is set to zero, then all available results
            are returned. The default value is 100.
            </remarks>
            <value>
            The maximum number of results to return.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.FieldList">
            <summary>
            Gets or sets the list of fields to return in the results.
            </summary>
            <value>
            The list of fields to return in the results.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.LatestTime">
            <summary>
            Gets or sets a time string representing the latest (exclusive),
            respectively, time bounds for the results to be returned.
            </summary>
            <remarks>
            If not specified, the range applies to all results found.
            </remarks>
            <value>
            A time string representing the latest (exclusive), respectively, time
            bounds for the results to be returned.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.MaxLines">
            <summary>
            Gets or sets the maximum lines that any single event's <c>_raw</c>
            field should contain.
            </summary>
            <remarks>
            Specify <c>0</c> to indicate that all lines should be returned. The
            default value is <c>0</c>.
            </remarks>
            <value>
            The maximum lines that any single event's <c>_raw</c> field should
            contain.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.Offset">
            <summary>
            Gets or sets a value specifying the first result (inclusive) from which
            to begin returning entries.
            </summary>
            <remarks>
            The <c>Offset</c> property is zero-based and cannot be negative. The
            default value is zero.
            </remarks>
            <value>
            A value specifying the first result (inclusive) from which to begin
            returning entries.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.OutputTimeFormat">
            <summary>
            Gets or sets the output format for a UTC time.
            </summary>
            <remarks>
            The default value is specified in <see cref="P:Splunk.Client.SearchEventArgs.TimeFormat"/>.
            </remarks>
            <value>
            The output format for a UTC time.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.Search">
            <summary>
            Gets or sets the post processing search to apply to the results.
            </summary>
            <remarks>
            The post processing search string can be any Splunk command.
            </remarks>
            <value>
            The post processing search to apply to the results.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.Segmentation">
            <summary>
            Gets or sets the type of segmentation to perform on the data.
            </summary>
            <remarks>
            This incudes an option to perform k/v segmentation.
            </remarks>
            <value>
            The type of segmentation to perform on the data.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.TimeFormat">
            <summary>
            Gets or sets an expression to convert a formatted time string from
            {start,end}_time into UTC seconds.
            </summary>
            <remarks>
            The default value is <c>%m/%d/%Y:%H:%M:%S</c>.
            </remarks>
            <value>
            An expression to convert a formatted time string from
            {start,end}_time into UTC seconds.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchEventArgs.TruncationMode">
            <summary>
            Gets or sets a value that specifies how <see cref="P:Splunk.Client.SearchEventArgs.MaxLines"/>
            should be achieved.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.SearchEventArgs.TruncationMode"/><c>.Abstract</c>.
            </remarks>
            <value>
            A truncation mode that specifies how <see cref="P:Splunk.Client.SearchEventArgs.MaxLines"/> should be
            achieved.
            </value>
        </member>
        <member name="T:Splunk.Client.SearchExportArgs">
            <summary>
            Provides the arguments required for starting a new search export job.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/vJvIXv">REST API Reference: POST
              search/jobs/export</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.SearchExportArgs}"/>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.AutoCancel">
            <summary>
            Gets or sets a value that specifies how long a <see cref="T:Splunk.Client.Job"/>
            may be inactive before it is automatically cancelled.
            </summary>
            <remarks>
            A value of <c>0</c> specifies that a <see cref="T:Splunk.Client.Job"/> is never
            automatically cancelled.
            </remarks>
            <value>
            A value that specifies how long a <see cref="T:Splunk.Client.Job"/> may be inactive
            before it is automatically cancelled.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.AutoFinalizeEventCount">
            <summary>
            Gets or sets a value that specifies how many events a <see cref="T:Splunk.Client.Job"/>
            must process before it is automatically finalized.
            </summary>
            <remarks>
            A value of <c>0</c> specifies that a <see cref="T:Splunk.Client.Job"/> is never
            automatically finalized.
            </remarks>
            <value>
            A value that specifies how many events a <see cref="T:Splunk.Client.Job"/> must process
            before it is automatically finalized.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.AutoPause">
            <summary>
            Gets or sets a value that specifies how long a <see cref="T:Splunk.Client.Job"/>
            may run before it is automatically paused.
            </summary>
            <remarks>
            A value of <c>0</c> specifies that a <see cref="T:Splunk.Client.Job"/> is never
            automatically paused.
            </remarks>
            <value>
            A value that specifies how long a <see cref="T:Splunk.Client.Job"/> may run before it is
            automatically paused.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.Count">
            <summary>
            Gets or sets the maximum number of results to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is set to zero, then all available results
            are returned. The default value is <c>100</c>.
            </remarks>
            <value>
            The maximum number of results to return.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.EarliestTime">
            <summary>
            Gets or sets a time string that specifies the earliest inclusive time
            bounds for a <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The time string can be either a UTC time (with fractional seconds), a
            relative time specifier (to now) or a formatted time string. Refer to
            <a href="http://goo.gl/4P41jH">Time modifiers for search
            </a> for information and examples of specifying a time string.
            </remarks>
            <value>
            A time string that specifies the earliest inclusive time bounds for a
            <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.EnableLookups">
            <summary>
            Gets or sets a value that indicates whether lookups should be applied to
            events processed by a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The default value is <c>true</c>. Depending on the nature of the lookups
            a search <see cref="T:Splunk.Client.Job"/> may take significantly longer to execute when
            the value of this property is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if lookups should be applied to events processed by the
            search <see cref="T:Splunk.Client.Job"/>; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.FieldList">
            <summary>
            Gets or sets the list of fields to return in the results.
            </summary>
            <value>
            The list of fields to return in the results.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.ForceBundleReplication">
            <summary>
            Gets or sets a value that specifies whether a <see cref="T:Splunk.Client.Job"/>
            should cause (and wait, depending on the value of
            <see cref="P:Splunk.Client.SearchExportArgs.SyncBundleReplication"/> for bundle synchronization with all
            search peers.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the <see cref="T:Splunk.Client.Job"/> should cause (and wait, 
            depending on the value of <see cref="P:Splunk.Client.SearchExportArgs.SyncBundleReplication"/>) for
            bundle synchronization with all search peers.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.Id">
            <summary>
            Gets or sets the search ID (SID) for a <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            A random SID is generated by default.
            </remarks>
            <value>
            The SID for the <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.IndexEarliest">
            <summary>
            Gets or sets a time string that specifies the earliest inclusive time
            bounds for a <see cref="T:Splunk.Client.Job"/> based on the index time bounds.
            </summary>
            <remarks>
            The time string can be either a UTC time (with fractional seconds), a
            relative time specifier (to now) or a formatted time string. Refer to
            <a href="http://goo.gl/4P41jH">Time modifiers for search
            </a> for information and examples of specifying a time string.
            </remarks>
            <value>
            A time string that specifies the earliest inclusive time bounds for a
            <see cref="T:Splunk.Client.Job"/> based on the index time bounds.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.IndexLatest">
            <summary>
            Gets or sets a time string that specifies the latest exclusive time
            bounds for a <see cref="T:Splunk.Client.Job"/> based on the index time bounds.
            </summary>
            <remarks>
            The time string can be either a UTC time (with fractional seconds), a
            relative time specifier (to now) or a formatted time string. Refer to
            <a href="http://goo.gl/4P41jH">Time modifiers for search
            </a> for information and examples of specifying a time string.
            </remarks>
            <value>
            A time string that specifies the latest exclusive time bounds for a
            <see cref="T:Splunk.Client.Job"/> based on the index time bounds.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.LatestTime">
            <summary>
            Gets or sets a time string that specifies the latest exclusive time
            bounds for a <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The time string can be either a UTC time (with fractional seconds), a
            relative time specifier (to now) or a formatted time string. Refer to
            <a href="http://goo.gl/4P41jH">Time modifiers for search
            </a> for information and examples of specifying a time string.
            </remarks>
            <value>
            A time string that specifies the latest exclusive time bounds for a
            <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.MaxLines">
            <summary>
            Gets or sets the maximum lines that any single event's <c>_raw</c>
            field should contain.
            </summary>
            <remarks>
            Specify <c>0</c> to indicate that all lines should be returned. The
            default value is <c>0</c>.
            </remarks>
            <value>
            The maximum lines that any single event's <c>_raw</c> field should
            contain.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.MaxTime">
            <summary>
            Gets or sets the number of seconds to run a <see cref="T:Splunk.Client.Job"/>
            before finalizing.
            </summary>
            <remarks>
            A value of <c>0</c> specifies that a <see cref="T:Splunk.Client.Job"/> should never
            finalize.
            </remarks>
            <value>
            The number of seconds to run a <see cref="T:Splunk.Client.Job"/> before finalizing.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.Namespace">
            <summary>
            Gets or sets the application namespace in which to restrict searches.
            </summary>
            <remarks>
            The namespace corresponds to the identifier recognized in the
            /services/apps/local endpoint.
            </remarks>
            <value>
            The application namespace in which to restrict searches.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.Now">
            <summary>
            Gets or sets a time string to set the absolute time used for any relative
            time specifier in a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The default value is the current system time. You can specify a relative
            time modifier for this property. For example, set the value to
            <c>"+2d"</c> to specify the current time plus two days. If you specify a
            relative time modifier both in this parameter and in the search string,
            the search string modifier takes precedence. See
            <a href="http://goo.gl/PbEO2j">Time modifiers for search</a>
            for details on relative time modifiers.
            </remarks>
            <value>
            A time string to set the absolute time used for any relative time
            specifier in a search <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.Offset">
            <summary>
            Gets or sets a value specifying the first result (inclusive) from which
            to begin returning entries.
            </summary>
            <remarks>
            The <c>Offset</c> property is zero-based and cannot be negative. The
            default value is zero.
            </remarks>
            <value>
            A value specifying the first result (inclusive) from which to begin
            returning entries.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.OutputTimeFormat">
            <summary>
            Gets or sets the output format for a UTC time.
            </summary>
            <remarks>
            The default value is specified in <see cref="P:Splunk.Client.SearchExportArgs.TimeFormat"/>.
            </remarks>
            <value>
            The output format for a UTC time.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.RealTimeBlocking">
            <summary>
            Gets or sets a value indicating whether the indexer blocks if the queue
            for a realtime search <see cref="T:Splunk.Client.Job"/> is full.
            </summary>
            <remarks>
            The default value is <c>false</c>. This property only applies to realtime
            search jobs.
            </remarks>
            <value>
            <c>true</c>, if the indexer should block if the queue for a realtime
            search <see cref="T:Splunk.Client.Job"/> is full; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.RealTimeIndexFilter">
            <summary>
            Gets or sets a value indicating whether the indexer prefilters events.
            </summary>
            <remarks>
            The default value is <c>true</c>. This property only applies to realtime
            search jobs.
            </remarks>
            <value>
            <c>true</c>, if the indexer should prefilter events; <c>false</c>
            otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.RealTimeMaxBlockSeconds">
            <summary>
            Gets or sets a value that specifies the maximum time to block when
            <see cref="P:Splunk.Client.SearchExportArgs.RealTimeBlocking"/> is <c>true</c>.
            </summary>
            <remarks>
            This property only applies to realtime search jobs. The default value is
            <c>60</c>, equivalent to one minute. Specify a value of
            <c>0</c> to block for an indefinite period of time.
            </remarks>
            <value>
            The maximum time to block when <see cref="P:Splunk.Client.SearchExportArgs.RealTimeBlocking"/> is
            <c>true</c>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.RealTimeQueueSize">
            <summary>
            Gets or sets the queue size in events that the indexer should use for a
            realtime search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            This property only applies to realtime search jobs. The default value is
            <c>10000</c> events.
            </remarks>
            <value>
            The queue size in events for the realtime search <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.ReduceFrequency">
            <summary>
            Gets or sets a value that specifies how frequently to run the map/reduce
            reduce phase on accumulated map values.
            </summary>
            <remarks>
            The default value is <c>0</c>.
            </remarks>
            <value>
            A value that specifies how frequently to run the map/reduce reduce phase
            on accumulated map values.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.ReloadMacros">
            <summary>
            Gets or sets a value that indicates whether macro definitions should be
            reloaded from <a href="http://goo.gl/4iCRz4"><c>
            macros.conf</c></a>.
            </summary>
            <remarks>
            The default value is <c>true</c>.
            </remarks>
            <value>
            <c>true</c>, if macro definitions should be reloaded from <a href=
            "http://goo.gl/4iCRz4"><c>macros.conf</c></a>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.RemoteServerList">
            <summary>
            Gets or sets a comma-separated list of servers from which raw events
            should be pulled.
            </summary>
            <remarks>
            The server names may be specified as wildcard names.
            </remarks>
            <value>
            A comma-separated list of servers from which raw events should be pulled.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.RequiredFieldList">
            <summary>
            Gets or sets a required field list to a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            These fields, even if not referenced or used directly by the search
            <see cref="T:Splunk.Client.Job"/>, are still included by the events and summary
            endpoints. Splunk Web uses them to prepopulate panels in the Search view.
            </remarks>
            <value>
            A list of required fields for the search <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.SearchListener">
            <summary>
            Gets or sets a value used to register a search state listener with a
            search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            Express this value as a string of the form <![CDATA[<search-state>;<results-condition>;<http-method>;<uri>;]]>.
            </remarks>
            <value>
            Search state listener registration entry.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.SearchMode">
            <summary>
            Gets or sets the mode for a search <see cref="T:Splunk.Client.Job"/>.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.SearchExportArgs.SearchMode"/><c>.Normal</c>. If set to
            <see cref="P:Splunk.Client.SearchExportArgs.SearchMode"/><c>.RealTime</c>realtime, the search
            <see cref="T:Splunk.Client.Job"/> runs over live data. A real-time search may also be
            indicated by setting the <see cref="P:Splunk.Client.SearchExportArgs.EarliestTime"/> and
            <see cref="P:Splunk.Client.SearchExportArgs.LatestTime"/> properties to <c>"rt"</c> even if the
            <c>SearchMode</c> is set to <see cref="P:Splunk.Client.SearchExportArgs.SearchMode"/><c>.Normal</c>.
            <para>
            For a real-time search, if both <see cref="P:Splunk.Client.SearchExportArgs.EarliestTime"/> and
            <see cref="P:Splunk.Client.SearchExportArgs.LatestTime"/> are set to <c>"rt"</c>, the search
            represents all appropriate live data received since the start of the
            search. Additionally, if <see cref="P:Splunk.Client.SearchExportArgs.EarliestTime"/> and/or
            <see cref="P:Splunk.Client.SearchExportArgs.LatestTime"/> are set to <c>"rt"</c> followed by a
            relative time specifier then a sliding window is used where the time
            bounds of the window are determined by the relative time specifiers and
            are continuously updated based on the wall-clock time.
            </para>
            </remarks>
            <value>
            The mode for a search <see cref="T:Splunk.Client.Job"/>.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.Segmentation">
            <summary>
            Gets or sets the type of segmentation to perform on the data.
            </summary>
            <remarks>
            This incudes an option to perform k/v segmentation.
            </remarks>
            <value>
            The type of segmentation to perform on the data.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.SyncBundleReplication">
            <summary>
            Gets or sets a value that indicates whether a <see cref="T:Splunk.Client.Job"/>
            should wait for bundle synchronization with all search peers.
            </summary>
            <remarks>
            The default value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c>, if the <see cref="T:Splunk.Client.Job"/> should wait for bundle
            synchronization with all search peers; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.TimeFormat">
            <summary>
            Gets or sets a format string used to convert a formatted time string from
            {start,end}_time into UTC seconds.
            </summary>
            <remarks>
            The default value is the ISO-8601 format.
            </remarks>
            <value>
            A time format string.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.Timeout">
            <summary>
            Gets or sets a value that specifies the number of seconds to keep a
            search <see cref="T:Splunk.Client.Job"/> after processing has stopped.
            </summary>
            <remarks>
            The default value is <c>86400</c>, equivalent to 24 hours.
            </remarks>
            <value>
            The number of seconds to keep the search <see cref="T:Splunk.Client.Job"/>after
            processing has stopped.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchExportArgs.TruncationMode">
            <summary>
            Gets or sets a value that specifies how <see cref="P:Splunk.Client.SearchExportArgs.MaxLines"/>
            should be achieved.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.SearchExportArgs.TruncationMode"/><c>.Abstract</c>.
            </remarks>
            <value>
            A truncation mode that specifies how <see cref="P:Splunk.Client.SearchExportArgs.MaxLines"/> should be
            achieved.
            </value>
        </member>
        <member name="T:Splunk.Client.SearchExportStream">
            <summary>
            The <see cref="T:Splunk.Client.SearchExportStream"/> class represents a streaming XML
            reader for Splunk <see cref="T:Splunk.Client.SearchResultStream"/>.
            </summary>
            <seealso cref="T:Splunk.Client.Observable{Splunk.Client.SearchResultStream}"/>
            <seealso cref="T:System.IDisposable"/>
            <seealso cref="T:System.Collections.Generic.IEnumerable{Splunk.Client.SearchResultStream}"/>
        </member>
        <member name="M:Splunk.Client.SearchExportStream.CreateAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Asynchronously creates a new <see cref="T:Splunk.Client.SearchExportStream"/>
            using the specified <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="message">
            An object from which search results are read.
            </param>
            <returns>
            A <see cref="T:Splunk.Client.SearchExportStream"/> object.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchExportStream.CreateAsync(Splunk.Client.Response)">
            <summary>
            Asynchronously creates a new <see cref="T:Splunk.Client.SearchExportStream"/>
            using the specified <see cref="P:Splunk.Client.SearchExportStream.Response"/>.
            </summary>
            <exception cref="T:System.IO.InvalidDataException">
            Thrown when an Invalid Data error condition occurs.
            </exception>
            <param name="response">
            An object from which search results are read.
            </param>
            <returns>
            The new asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchExportStream.Dispose">
            <summary>
            Releases all disposable resources used by the current <see cref="T:Splunk.Client.SearchExportStream"/>.
            </summary>
            <seealso cref="M:System.IDisposable.Dispose()"/>
        </member>
        <member name="M:Splunk.Client.SearchExportStream.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the current <see cref="T:Splunk.Client.SearchResultStream"/> synchronously.
            </summary>
            <returns>
            A <see cref="T:Splunk.Client.SearchResultStream"/> enumerator structure for the 
            current <see cref="T:Splunk.Client.SearchExportStream"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchExportStream.PushObservations">
            <summary>
            Pushes <see cref="T:Splunk.Client.SearchResultStream"/> to subscribers and then completes.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.SearchExportStream.Response">
            <summary>
            Returns the raw HTTP response message for the job.
            </summary>
        </member>
        <member name="T:Splunk.Client.SearchMode">
            <summary>
            Specifies the mode for a search job.
            </summary>
        </member>
        <member name="F:Splunk.Client.SearchMode.Normal">
            <summary>
            Indicates that a search job should run over historical data.
            </summary>
        </member>
        <member name="F:Splunk.Client.SearchMode.RealTime">
            <summary>
            Indicates taht a search job should run over realtime data.
            </summary>
        </member>
        <member name="T:Splunk.Client.SearchPreview">
            <summary>
            Represents a search result preview on a <see cref="T:Splunk.Client.SearchPreviewStream"/>.
            </summary>
        </member>
        <member name="M:Splunk.Client.SearchPreview.ReadXmlAsync(System.Xml.XmlReader)">
            <summary>
            Asynchronously reads data into the current <see cref="T:Splunk.Client.SearchPreview"/>.
            </summary>
            <param name="reader">
            The <see cref="T:System.Xml.XmlReader"/> from which to read.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchPreview.ToString">
            <summary>
            Gets a string representation of the current instance.
            </summary>
            <returns>
            A string instance representing the current instance.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="P:Splunk.Client.SearchPreview.IsFinal">
            <summary>
            Gets a value indicating whether this <see cref="T:Splunk.Client.SearchPreview"/>
            contains the final results from a search job.
            </summary>
            <value>
            <c>true</c> if this object is final, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchPreview.FieldNames">
            <summary>
            Gets the read-only list of field names that may appear in a
            <see cref="T:Splunk.Client.SearchResult"/>.
            </summary>
            <remarks>
            Be aware that any given result will contain a subset of these fields.
            </remarks>
            <value>
            A list of names of the fields.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchPreview.Results">
            <summary>
            Gets the read-only list of field names that may appear in a search event
            <see cref="T:Splunk.Client.SearchResult"/>.
            </summary>
            <remarks>
            Be aware that any given result will contain a subset of these fields.
            </remarks>
            <value>
            The results.
            </value>
        </member>
        <member name="T:Splunk.Client.SearchPreviewStream">
            <summary>
            The <see cref="T:Splunk.Client.SearchPreviewStream"/> class represents a streaming XML
            reader for Splunk <see cref="T:Splunk.Client.SearchResultStream"/>.
            </summary>
            <seealso cref="T:Splunk.Client.Observable{Splunk.Client.SearchPreview}"/>
            <seealso cref="T:System.IDisposable"/>
            <seealso cref="T:System.Collections.Generic.IEnumerable{Splunk.Client.SearchPreview}"/>
        </member>
        <member name="M:Splunk.Client.SearchPreviewStream.CreateAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Asynchronously creates a new <see cref="T:Splunk.Client.SearchExportStream"/>
            using the specified <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="message">
            An object from which search results are read.
            </param>
            <returns>
            A <see cref="T:Splunk.Client.SearchExportStream"/> object.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchPreviewStream.CreateAsync(Splunk.Client.Response)">
            <summary>
            Asynchronously creates a new <see cref="T:Splunk.Client.SearchExportStream"/>
            using the specified <see cref="P:Splunk.Client.SearchPreviewStream.Response"/>.
            </summary>
            <param name="response">
            An object from which search results are read.
            </param>
            <returns>
            The new asynchronous.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            Thrown when an invalid Data error condition occurs.
            </exception>
        </member>
        <member name="M:Splunk.Client.SearchPreviewStream.Dispose">
            <summary>
            Releases all disposable resources used by the current
            <see cref="T:Splunk.Client.SearchPreviewStream"/>.
            </summary>
            <seealso cref="M:System.IDisposable.Dispose()"/>
        </member>
        <member name="M:Splunk.Client.SearchPreviewStream.GetEnumerator">
             <summary>
             Gets an enumerator that iterates through <see cref="T:Splunk.Client.SearchPreview"/>
             objects on the current <see cref="T:Splunk.Client.SearchPreviewStream"/> asynchronously.
             </summary>
             <remarks>
             You can use the <see cref="M:Splunk.Client.SearchPreviewStream.GetEnumerator"/> method to
             <list type="bullet">
             <item><description>
               Perform LINQ to Objects queries to obtain a filtered set of search
               previews.</description></item>
             <item><description>
               Append search previews to an existing collection of search
               previews.</description></item>
             </list>
             </remarks>
             <returns>
             An enumerator structure for the <see cref="T:Splunk.Client.SearchPreviewStream"/>.
             </returns>
            
             ### <exception cref="T:System.InvalidOperationException">
             The current <see cref="T:Splunk.Client.SearchPreviewStream"/> has already been enumerated.
             </exception>
        </member>
        <member name="M:Splunk.Client.SearchPreviewStream.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc cref="M:Splunk.Client.SearchPreviewStream.GetEnumerator"/>
        </member>
        <member name="M:Splunk.Client.SearchPreviewStream.PushObservations">
            <summary>
            Pushes <see cref="T:Splunk.Client.SearchPreview"/> instances to subscribers and then
            completes.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.SearchPreviewStream.ReadCount">
            <summary>
            Gets the <see cref="T:Splunk.Client.SearchPreview"/> read count for the current
            <see cref="T:Splunk.Client.SearchResultStream"/>.
            </summary>
            <value>
            The number of reads.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchPreviewStream.Response">
            <summary>
            Returns the raw HTTP response message for the job.
            </summary>
        </member>
        <member name="T:Splunk.Client.SearchPreviewStream.Awaiter">
            <summary>
            An awaiter.
            </summary>
            <seealso cref="T:Splunk.Client.Awaiter{Splunk.Client.SearchPreviewStream,Splunk.Client.SearchPreview}"/>
        </member>
        <member name="M:Splunk.Client.SearchPreviewStream.Awaiter.#ctor(Splunk.Client.SearchPreviewStream)">
            <summary>
            Initializes a new instance of the
            Splunk.Client.SearchPreviewStream.Awaiter class.
            </summary>
            <param name="stream">
            The stream.
            </param>
        </member>
        <member name="M:Splunk.Client.SearchPreviewStream.Awaiter.ReadToEndAsync">
            <summary>
            Reads to the end of the current <see cref="T:Splunk.Client.SearchPreviewStream"/>
            asynchronously.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="T:Splunk.Client.SearchResult">
            <summary>
            Represents a single record on a <see cref="T:Splunk.Client.SearchResultStream"/>.
            </summary>
            <seealso cref="T:Splunk.Client.ExpandoAdapter"/>
        </member>
        <member name="M:Splunk.Client.SearchResult.ReadXmlAsync(System.Xml.XmlReader)">
            <summary>
            Asynchronously reads data into the current <see cref="T:Splunk.Client.SearchResult"/>.
            </summary>
            <param name="reader">
            The <see cref="T:System.Xml.XmlReader"/> from which to read.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchResult.ToString">
            <summary>
            Gets a string representation of the current instance.
            </summary>
            <returns>
            A string instance representing the current instance.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="M:Splunk.Client.SearchResult.#ctor(Splunk.Client.SearchResultMetadata)">
            <summary>
            Initializes a new instance of the Splunk.Client.SearchResult class.
            </summary>
            <param name="metadata">
            The metadata.
            </param>
        </member>
        <member name="P:Splunk.Client.SearchResult.IsFinal">
            <summary>
            Gets a value indicating whether the current
            <see cref="T:Splunk.Client.SearchResultStream"/>
            is yielding the final results from a search job.
            </summary>
            <value>
            <c>true</c> if this object is final, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResult.FieldNames">
            <summary>
            Gets the read-only list of field names that may appear in a
            <see cref="T:Splunk.Client.SearchResult"/>.
            </summary>
            <remarks>
            Be aware that any given result may contain a subset of these fields.
            </remarks>
            <value>
            A list of names of the fields.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResult.SegmentedRaw">
            <summary>
            Gets the XML markup for the <c>_raw</c> field value.
            </summary>
            <remarks>
            This value is different than that of the <c>_raw</c> field value in that
            it is an XML fragment that includes all markup.
            </remarks>
            <value>
            The segmented raw.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResult.Metadata">
            <summary>
            Gets the metadata.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="T:Splunk.Client.SearchResultArgs">
            <summary>
            Provides arguments for retrieving transformed
            <see cref="T:Splunk.Client.SearchResultStream"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/QFga96">REST API Reference: GET
              search/jobs/{search_id}/results</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.SearchResultArgs}"/>
        </member>
        <member name="P:Splunk.Client.SearchResultArgs.Count">
            <summary>
            Gets or sets the maximum number of results to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is <c>0</c>, then all available results are
            returned. The default value is <c>100</c>.
            </remarks>
            <value>
            The maximum number of results to return.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResultArgs.FieldList">
            <summary>
            Gets or sets the list of fields to return in the results.
            </summary>
            <value>
            The list of fields to return in the results.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResultArgs.Offset">
            <summary>
            Gets or sets an offset value specifying the first result inclusive from
            which to begin returning entries.
            </summary>
            <remarks>
            The <c>Offset</c> property is zero-based and cannot be negative. The
            default value is zero.
            </remarks>
            <value>
            An offset value specifying the first result inclusive from which to begin
            returning entries.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResultArgs.Search">
            <summary>
            Gets or sets the post processing search to apply to the results.
            </summary>
            <remarks>
            The post processing search string can be any Splunk command.
            </remarks>
            <value>
            The post processing search to apply to the results.
            </value>
        </member>
        <member name="T:Splunk.Client.SearchResultMetadata">
            <summary>
            A search result metadata.
            </summary>
        </member>
        <member name="F:Splunk.Client.SearchResultMetadata.Missing">
            <summary>
            The missing.
            </summary>
        </member>
        <member name="M:Splunk.Client.SearchResultMetadata.ReadXmlAsync(System.Xml.XmlReader)">
            <summary>
            Asynchronously reads data into the current
            <see cref="T:Splunk.Client.SearchResultStream"/>.
            </summary>
            <param name="reader">
            The <see cref="T:System.Xml.XmlReader"/> from which to read.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.SearchResultMetadata.IsFinal">
            <summary>
            Gets a value indicating whether this <see cref="T:Splunk.Client.SearchPreview"/>
            contains the final results from a search job.
            </summary>
            <value>
            <c>true</c> if this object is final, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResultMetadata.FieldNames">
            <summary>
            Gets the read-only list of field names that may appear in a
            <see cref="T:Splunk.Client.SearchResult"/>.
            </summary>
            <remarks>
            Be aware that any given result will contain a subset of these fields.
            </remarks>
            <value>
            A list of names of the fields.
            </value>
        </member>
        <member name="T:Splunk.Client.SearchResultStream">
            <summary>
            Represents an enumerable, observable stream of <see cref="T:Splunk.Client.SearchResult"/>
            records.
            </summary>
            <seealso cref="T:Splunk.Client.Observable{Splunk.Client.SearchResult}"/>
            <seealso cref="T:System.IDisposable"/>
            <seealso cref="T:System.Collections.Generic.IEnumerable{Splunk.Client.SearchResult}"/>
        </member>
        <member name="M:Splunk.Client.SearchResultStream.CreateAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Asynchronously creates a new <see cref="T:Splunk.Client.SearchResultStream"/>
            using the specified <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="message">
            An object from which search results are read.
            </param>
            <returns>
            A <see cref="T:Splunk.Client.SearchResultStream"/> object.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchResultStream.CreateAsync(Splunk.Client.Response)">
            <summary>
            Asynchronously creates a new <see cref="T:Splunk.Client.SearchResultStream"/>
            using the specified <see cref="P:Splunk.Client.SearchResultStream.Response"/>.
            </summary>
            <param name="response">
            An object from which search results are read.
            </param>
            <returns>
            A <see cref="T:Splunk.Client.SearchResultStream"/> object.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchResultStream.Dispose">
            <summary>
            Releases all disposable resources used by the current
            <see cref="T:Splunk.Client.SearchResultStream"/>.
            </summary>
            <seealso cref="M:System.IDisposable.Dispose()"/>
        </member>
        <member name="M:Splunk.Client.SearchResultStream.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through search results.
            </summary>
            <remarks>
            You can use the <see cref="M:Splunk.Client.SearchResultStream.GetEnumerator"/> method to
            <list type="bullet">
            <item><description>
              Perform LINQ to Objects queries to obtain a filtered set of search
              result records.</description></item>
            <item><description>
              Append search results to an existing search result collection.</description></item>
            </list>
            </remarks>
            <returns>
            A <see cref="T:Splunk.Client.SearchResult"/> enumerator structure for the
            <see cref="T:Splunk.Client.SearchResultStream"/>.
            </returns>
        </member>
        <member name="M:Splunk.Client.SearchResultStream.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc cref="M:Splunk.Client.SearchResultStream.GetEnumerator"/>
        </member>
        <member name="M:Splunk.Client.SearchResultStream.PushObservations">
            <summary>
            Asynchronously pushes <see cref="T:Splunk.Client.SearchResult"/> objects to observers and
            then completes.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="P:Splunk.Client.SearchResultStream.IsFinal">
            <summary>
            Gets a value indicating whether the current
            <see cref="T:Splunk.Client.SearchResultStream"/>
            is yielding the final results from a search job.
            </summary>
            <value>
            <c>true</c> if this object is final, <c>false</c> if not.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResultStream.FieldNames">
            <summary>
            Gets the read-only list of field names that may appear in a
            <see cref="T:Splunk.Client.SearchResult"/>.
            </summary>
            <remarks>
            Be aware that any given result may contain a subset of these fields.
            </remarks>
            <value>
            A list of names of the fields.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResultStream.ReadCount">
            <summary>
            Gets the <see cref="T:Splunk.Client.SearchResult"/> read count for the current
            <see cref="T:Splunk.Client.SearchResultStream"/>.
            </summary>
            <value>
            The number of reads.
            </value>
        </member>
        <member name="P:Splunk.Client.SearchResultStream.Response">
            <summary>
            Returns the raw HTTP response message for the job.
            </summary>
        </member>
        <member name="T:Splunk.Client.SearchResultStream.Awaiter">
            <summary>
            An awaiter.
            </summary>
            <seealso cref="T:Splunk.Client.Awaiter{Splunk.Client.SearchResultStream,Splunk.Client.SearchResult}"/>
        </member>
        <member name="M:Splunk.Client.SearchResultStream.Awaiter.#ctor(Splunk.Client.SearchResultStream)">
            <summary>
            Initializes a new instance of the
            Splunk.Client.SearchResultStream.Awaiter class.
            </summary>
            <param name="stream">
            The stream.
            </param>
        </member>
        <member name="M:Splunk.Client.SearchResultStream.Awaiter.ReadToEndAsync">
            <summary>
            Reads to the end of the current <see cref="T:Splunk.Client.SearchResultStream"/>
            asynchronously.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="T:Splunk.Client.Server">
            <summary>
            Provides an object representation of a Splunk server.
            </summary>
            <seealso cref="T:Splunk.Client.Endpoint"/>
            <seealso cref="T:Splunk.Client.IServer"/>
        </member>
        <member name="M:Splunk.Client.Server.#ctor(Splunk.Client.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Server"/> class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Server.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Server"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.Server.GetInfoAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Server.GetSettingsAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Server.RestartAsync(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Server.UpdateSettingsAsync(Splunk.Client.ServerSettingValues)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Server.Messages">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.ServerInfo">
            <summary>
            Provides information about a Splunk server instance.
            </summary>
            <seealso cref="T:Splunk.Client.Resource"/>
            <seealso cref="T:Splunk.Client.IServerInfo"/>
        </member>
        <member name="M:Splunk.Client.ServerInfo.#ctor(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ServerInfo"/> class.
            </summary>
            <param name="entry">
            An object representing a Splunk atom entry response.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            feed containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.ServerInfo.#ctor(Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ServerInfo"/> class.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.ServerInfo.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.BaseResource"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="P:Splunk.Client.ServerInfo.ActiveLicenseGroup">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.AddOns">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.Build">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.CpuArchitecture">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.Eai">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.Guid">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.IsFree">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.IsRealTimeSearchEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.IsTrial">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.LicenseKeys">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.LicenseLabels">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.LicenseSignature">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.LicenseState">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.MasterGuid">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.Mode">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.NumberOfCores">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.OSBuild">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.OSName">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.OSVersion">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.PhysicalMemoryMB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.RealTimeSearchEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.ServerName">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.StartupTime">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerInfo.Version">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.ServerMessage">
            <summary>
            Provides an object representation of a Splunk server message entity.
            </summary>
            <seealso cref="T:Splunk.Client.Entity{Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IServerMessage"/>
        </member>
        <member name="M:Splunk.Client.ServerMessage.#ctor(Splunk.Client.Service,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.ServerMessage"/> class.
             </summary>
             <param name="service">
             An object representing a root Splunk service endpoint.
             </param>
             <param name="name">
             An object identifying a Splunk resource within
             <paramref name="service"/>.<see cref="T:Splunk.Client.Namespace"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="service"/> or <paramref name="name"/> are <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.ServerMessage.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.ServerMessage"/> class.
             </summary>
             <param name="context">
             An object representing a Splunk server session.
             </param>
             <param name="feed">
             A Splunk response atom feed.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
             </exception>
             ### <exception cref="T:System.IO.InvalidDataException">
             <paramref name="feed"/> is in an invalid format.
             </exception>
        </member>
        <member name="M:Splunk.Client.ServerMessage.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.ServerMessage"/> class.
             </summary>
             <param name="context">
             An object representing a Splunk server session.
             </param>
             <param name="ns">
             An object identifying a Splunk services namespace.
             </param>
             <param name="name">
             The name of the <see cref="T:Splunk.Client.ServerMessage"/>.
             </param>
            
             ### <exception cref="T:System.ArgumentException">
             <paramref name="name"/> is <c>null</c> or empty.
             </exception>
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
             </exception>
             ### <exception cref="T:System.ArgumentOutOfRangeException">
             <paramref name="ns"/> is not specific.
             </exception>
        </member>
        <member name="M:Splunk.Client.ServerMessage.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ServerMessage"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.ServerMessage.UpdateAsync(Splunk.Client.Argument[])">
            <summary>
            Unsupported. This method is not supported by the
            <see cref="T:Splunk.Client.ServerMessage"/> class because it is not supported by the
            <a href="http://goo.gl/S13BE0">Splunk messages/{name} endpoint</a>.
            </summary>
            <param name="arguments">
            A variable-length parameters list containing arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="M:Splunk.Client.ServerMessage.UpdateAsync(System.Collections.Generic.IEnumerable{Splunk.Client.Argument})">
            <summary>
            Unsupported. This method is not supported by the
            <see cref="T:Splunk.Client.ServerMessage"/> class because it is not supported by the
            <a href="http://goo.gl/S13BE0">Splunk messages/{name} endpoint</a>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Thrown when the requested operation is not supported.
            </exception>
            <param name="arguments">
            The arguments.
            </param>
            <returns>
            <c>true</c> if the current snapshot was also updated.
            </returns>
        </member>
        <member name="P:Splunk.Client.ServerMessage.Eai">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerMessage.Severity">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerMessage.Text">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerMessage.TimeCreated">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.ServerMessageCollection">
            <summary>
            Collection of server messages.
            </summary>
            <seealso cref="T:Splunk.Client.EntityCollection{Splunk.Client.ServerMessage,Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IServerMessageCollection{Splunk.Client.ServerMessage}"/>
        </member>
        <member name="M:Splunk.Client.ServerMessageCollection.#ctor(Splunk.Client.Service)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.ServerMessageCollection"/>
             class.
             </summary>
             <param name="service">
             An object representing a root Splunk service endpoint.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="service"/> is <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.ServerMessageCollection.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ServerMessageCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="feed">
            A Splunk response atom feed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="feed"/> is in an invalid format.
            </exception>
        </member>
        <member name="M:Splunk.Client.ServerMessageCollection.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
            <summary>
            Intializes a new instance of the <see cref="T:Splunk.Client.ServerMessageCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.ServerMessageCollection.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ServerMessageCollection"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.ServerMessageCollection.CreateAsync(System.String,Splunk.Client.ServerMessageSeverity,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.ServerMessageCollection.GetSliceAsync(Splunk.Client.ServerMessageCollection.Filter)">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerMessageCollection.Messages">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerMessageCollection.Pagination">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.ServerMessageCollection.CreationArgs">
            <summary>
            Provides arguments for creating a new <see cref="T:Splunk.Client.ServerMessage"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/WlDoZx">REST API Reference: POST messages</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.ServerMessageCollection.CreationArgs}"/>
        </member>
        <member name="T:Splunk.Client.ServerMessageCollection.Filter">
            <summary>
            Provides arguments for retrieving a <see cref="T:Splunk.Client.ServerMessageCollection"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/qVZ6wJ">REST API Reference: GET data/indexes</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.ServerMessageCollection.Filter}"/>
        </member>
        <member name="P:Splunk.Client.ServerMessageCollection.Filter.Count">
            <summary>
            Gets or sets the maximum number of <see cref="T:Splunk.Client.ServerMessage"/>
            entries to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is <c>0</c>, then all available entries are
            returned. The default is <c>30</c>.
            </remarks>
            <value>
            The maximum number of <see cref="T:Splunk.Client.ServerMessage"/> entries to return.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerMessageCollection.Filter.Offset">
            <summary>
            Gets or sets a value specifying the first result (inclusive)
            from which to begin returning <see cref="T:Splunk.Client.ServerMessage"/>
            entries.
            </summary>
            <remarks>
            The <c>Offset</c> property is zero-based and cannot be negative. The
            default value is zero.
            </remarks>
            <value>
            Index of the first result (inclusive) from which to begin returning
            <see cref="T:Splunk.Client.ServerMessage"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerMessageCollection.Filter.Search">
            <summary>
            Gets or sets a search expression to filter <see cref="T:Splunk.Client.ServerMessage"/>
            entries.
            </summary>
            <remarks>
            Use this expression to filter the entries returned based on search
            <see cref="T:Splunk.Client.ServerMessage"/> properties. The default is
            <c>null</c>.
            </remarks>
            <value>
            A search expression to filter <see cref="T:Splunk.Client.ServerMessage"/>
            entries.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerMessageCollection.Filter.SortDirection">
            <summary>
            Gets or sets a value specifying the sort direction for
            <see cref="T:Splunk.Client.ServerMessage"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.ServerMessageCollection.Filter.SortDirection"/>.Ascending.
            </remarks>
            <value>
            The sort direction for <see cref="T:Splunk.Client.ServerMessage"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerMessageCollection.Filter.SortKey">
            <summary>
            Gets or sets the <see cref="T:Splunk.Client.ServerMessage"/> property to use for sorting
            entries.
            </summary>
            <remarks>
            The default <see cref="T:Splunk.Client.ServerMessage"/> property to use for sorting is
            <c>"name"</c>.
            </remarks>
            <value>
            The <see cref="T:Splunk.Client.ServerMessage"/> property to use for sorting entries.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerMessageCollection.Filter.SortMode">
            <summary>
            Gets or sets a value specifying the sort mode for
            <see cref="T:Splunk.Client.ServerMessage"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.ServerMessageCollection.Filter.SortMode"/>.Automatic.
            </remarks>
            <value>
            The sort mode for <see cref="T:Splunk.Client.ServerMessage"/> entries.
            </value>
        </member>
        <member name="T:Splunk.Client.ServerMessageSeverity">
            <summary>
            Specifies the severity of a <see cref="T:Splunk.Client.ServerMessage"/>.
            </summary>
        </member>
        <member name="F:Splunk.Client.ServerMessageSeverity.Error">
            <summary>
            A <see cref="T:Splunk.Client.ServerMessage"/> is at the error severity level.
            </summary>
        </member>
        <member name="F:Splunk.Client.ServerMessageSeverity.Information">
            <summary>
            A <see cref="T:Splunk.Client.ServerMessage"/> is at the information severity level.
            </summary>
        </member>
        <member name="F:Splunk.Client.ServerMessageSeverity.Warning">
            <summary>
            A <see cref="T:Splunk.Client.ServerMessage"/> is at the warning severity level.
            </summary>
        </member>
        <member name="T:Splunk.Client.ServerMode">
            <summary>
            Specifies whether or not a Splunk server instance is a dedicated
            forwarder.
            </summary>
        </member>
        <member name="F:Splunk.Client.ServerMode.Normal">
            <summary>
            The Splunk server is a normal instance.
            </summary>
        </member>
        <member name="F:Splunk.Client.ServerMode.DedicatedForwarder">
            <summary>
            The Splunk server is a dedicated forwarder.
            </summary>
        </member>
        <member name="T:Splunk.Client.ServerSettings">
            <summary>
            Provides an object representation of the settings of a Splunk server.
            </summary>
            <seealso cref="T:Splunk.Client.Resource"/>
            <seealso cref="T:Splunk.Client.IServerSettings"/>
        </member>
        <member name="M:Splunk.Client.ServerSettings.#ctor(Splunk.Client.AtomEntry,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ServerSettings"/> class.
            </summary>
            <param name="entry">
            An object representing a Splunk atom entry response.
            </param>
            <param name="generatorVersion">
            The version of the generator producing the <see cref="T:Splunk.Client.AtomFeed"/>
            feed containing <paramref name="entry"/>.
            </param>
        </member>
        <member name="M:Splunk.Client.ServerSettings.#ctor(Splunk.Client.AtomFeed)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.ServerSettings"/> class.
            </summary>
            <param name="feed">
            An object representing a Splunk atom feed response.
            </param>
        </member>
        <member name="M:Splunk.Client.ServerSettings.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.ServerSettings"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code. Use one of these methods to obtain a
            <see cref="T:Splunk.Client.ServerSettings"/> instance:
            <list type="table">
            <listheader>
              <term>Method</term>
              <description>Description</description>
            </listheader>
            <item>
              <term><see cref="M:Splunk.Client.Server.GetSettingsAsync"/></term>
              <description>
              Asynchronously retrieves <see cref="T:Splunk.Client.ServerSettings"/> from the Splunk
              server represented by the current instance.
              </description>
            </item>
            <item>
              <term><see cref="M:Splunk.Client.Server.UpdateSettingsAsync(Splunk.Client.ServerSettingValues)"/></term>
              <description>
              Asynchronously updates <see cref="T:Splunk.Client.ServerSettings"/> on the Splunk
              server represented by the current instance.
              </description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Splunk.Client.ServerSettings.Eai">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.SplunkDB">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.SplunkHome">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.EnableSplunkWebSsl">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.Host">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.HttpPort">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.ManagementHostPort">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.MinFreeSpace">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.Pass4SymmetricKey">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.ServerName">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.SessionTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.StartWebServer">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.ServerSettings.TrustedIP">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.ServerSettingValues">
            <summary>
            Provides arguments for updating Splunk <see cref="T:Splunk.Client.Server"/> setting
            values.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/OWTUws">REST API Reference: POST search/jobs</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.ServerSettingValues}"/>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.SplunkDB">
            <summary>
            Gets or sets the path to the default index for this instance of Splunk.
            </summary>
            <remarks>
            The default location is
            <c>"$SPLUNK_HOME/var/lib/splunk/defaultdb/db/"</c>.
            </remarks>
            <value>
            The splunk database.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.EnableSplunkWebSsl">
            <summary>
            Gets or sets a toggles between HTTPS and HTTP.
            </summary>
            <remarks>
            A value of <c>true</c> enables https and SSL for Splunk Web. A value of
            <c>false</c> enables http and disables SSL for Splunk Web.
            </remarks>
            <value>
            The enable splunk web ssl.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.Host">
            <summary>
            Gets or sets the default hostname for data inputs that do not
            provide one.
            </summary>
            <value>
            The default hostname to use for data inputs that do not provide 
            one.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.HttpPort">
            <summary>
            Gets or sets the Specifies the port on which Splunk Web is listening for
            this instance of Splunk.
            </summary>
            <remarks>
            The default value is <c>8000</c>. Use the HTTPS port number if
            <see cref="P:Splunk.Client.ServerSettingValues.EnableSplunkWebSsl"/> is <c>true</c>.
            </remarks>
            <value>
            The HTTP port.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.ManagementHostPort">
            <summary>
            Gets or sets the port on which Splunk is listening for management
            operations.
            </summary>
            <remarks>
            The default value is <c>8089</c>.
            </remarks>
            <value>
            The management host port.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.MinFreeSpace">
            <summary>
            Gets or sets a safe amount of space in megabytes that must exist for
            splunkd to continue operating.
            </summary>
            <remarks>
            This value affects search and indexing. Before attempting to launch a
            search, Splunk requires this amount of free space on the file system
            where the dispatch directory is located:
            <c> "$SPLUNK_HOME/var/run/splunk/dispatch</c>). It is applied
            similarly to the search quota values in <c>authorize.conf</c>
            and <c>limits.conf</c>. Splunk periodically checks space on all
            partitions that contain indexes as specified by <c>indexes.conf</c>. When
            you need to clear more disk space indexing is paused and Splunk posts a
            UI banner and warning.
            </remarks>
            <value>
            The minimum free space.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.Pass4SymmetricKey">
            <summary>
            Gets or sets the password string that is prefixed to the Splunk symmetric
            key, generating the final key to sign all traffic between master/slave
            licensers.
            </summary>
            <value>
            The pass 4 symmetric key.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.ServerName">
            <summary>
            Gets or sets an ASCII String to use as the name of a Splunk instance for
            features such as distributed search.
            </summary>
            <remarks>
            The default value is &lt;![CDATA[&lt;hostname&gt;-&lt;user-running-
            splunk&gt;]]&gt;.
            </remarks>
            <value>
            The name of the server.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.SessionTimeout">
            <summary>
            Gets or sets a time range string to set the amount of time before a user
            session times out.
            </summary>
            <remarks>
            Express this value as a search-like time range. The default is <c>
            "1h"</c> (one hour).
            </remarks>
            <value>
            The session timeout.
            </value>
            <remarks>
            <example>Examples:</example>
            <code>
            args.SessionTimeout = "24h"; // 24 hours
            args.SessionTimeout = "3d";  // 3 days
            args.SessionTimeout = 7200s; // 7,200 seconds or two hours
            </code>        /// </remarks>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.StartWebServer">
            <summary>
            Gets or sets a value that enables or disables Splunk Web.
            </summary>
            <remarks>
            Specify a value of <c>true</c> to enable Splunk Web.
            </remarks>
            <value>
            The start web server.
            </value>
        </member>
        <member name="P:Splunk.Client.ServerSettingValues.TrustedIP">
            <summary>
            Gets or sets the IP address of the authenticating proxy.
            </summary>
            <remarks>
            The authenticating proxy is disabled by default. Set to a valid IP
            address to enable single signo on (SSO). A normal value is
            <c>"127.0.0.1"</c>.
            </remarks>
            <value>
            The trusted IP.
            </value>
        </member>
        <member name="T:Splunk.Client.Service">
            <summary>
            A service.
            </summary>
            <seealso cref="T:System.IDisposable"/>
            <seealso cref="T:Splunk.Client.IService"/>
        </member>
        <member name="M:Splunk.Client.Service.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.Service"/> class.
             </summary>
             <param name="context">
             The context for requests by the new <see cref="T:Splunk.Client.Service"/>.
             </param>
             <param name="ns">
             The namespace for requests by the new <see cref="T:Splunk.Client.Service"/>. The default
             value is <c>null</c> indicating that <see cref="P:Splunk.Client.Service.Namespace"/>.Default
             should be used.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="context"/> is <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.Service.#ctor(Splunk.Client.Scheme,System.String,System.Int32,Splunk.Client.Namespace)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.Service"/> class.
             </summary>
             <param name="scheme">
             The scheme for the new <see cref="T:Splunk.Client.Service"/>.
             </param>
             <param name="host">
             The host for the new <see cref="T:Splunk.Client.Service"/>.
             </param>
             <param name="port">
             The port for the new <see cref="T:Splunk.Client.Service"/>.
             </param>
             <param name="ns">
             The namespace for requests issue by the new <see cref="T:Splunk.Client.Service"/>.
             </param>
            
             ### <exception name="ArgumentException">
             <paramref name="scheme"/> is invalid, <paramref name="host"/> is
             <c>null</c> or empty, or <paramref name="port"/> is less than zero
             or greater than <c>65535</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.Service.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the <see cref="T:Splunk.Client.Service"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Service.GetCapabilitiesAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Service.LogOnAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Service.LogOffAsync">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Service.DispatchSavedSearchAsync(System.String,Splunk.Client.SavedSearchDispatchArgs,Splunk.Client.SavedSearchTemplateArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Service.ExportSearchPreviewsAsync(System.String,Splunk.Client.SearchExportArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Service.ExportSearchResultsAsync(System.String,Splunk.Client.SearchExportArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Service.SearchAsync(System.String,System.Int32,Splunk.Client.ExecutionMode,Splunk.Client.JobArgs,Splunk.Client.CustomJobArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Service.SearchOneShotAsync(System.String,System.Int32,Splunk.Client.JobArgs,Splunk.Client.CustomJobArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Service.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Splunk.Client.Service"/>.
            </summary>
            <remarks>
            Do not override this method. Override <see cref="M:Splunk.Client.Service.Dispose(System.Boolean)"/>
            instead.
            </remarks>
            <seealso cref="M:System.IDisposable.Dispose()"/>
        </member>
        <member name="M:Splunk.Client.Service.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Splunk.Client.Service"/>.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources; 
            <c>false</c> to release only unmanaged resources.
            </param>
            <remarks>
            Subclasses should implement the disposable pattern as follows:
            <list type="bullet">
            <item><description>
                Override this method and call it from the override.
                </description></item>
            <item><description>
                Provide a finalizer, if needed, and call this method from it.
                </description></item>
            <item><description>
                To help ensure that resources are always cleaned up appropriately,
                ensure that the override is callable multiple times without throwing
                an exception.
                </description></item>
            </list>
            There is no performance benefit in overriding this method on types that
            use only managed resources (such as arrays) because they are
            automatically reclaimed by the garbage collector. See
            <a href="http://goo.gl/VPIovn">Implementing a Dispose Method</a>.
            </remarks>
        </member>
        <member name="M:Splunk.Client.Service.ToString">
            <summary>
            Gets the URI string for this <see cref="T:Splunk.Client.Service"/> instance.
            </summary>
            <returns>
            A string that represents this object.
            </returns>
            <seealso cref="M:System.Object.ToString()"/>
        </member>
        <member name="P:Splunk.Client.Service.Context">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.Namespace">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.SessionKey">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.Applications">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.Configurations">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.Indexes">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.Jobs">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.SavedSearches">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.Server">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.StoragePasswords">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.Service.Transmitter">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.SharingMode">
            <summary>
            Values that represent SharingMode.
            </summary>
        </member>
        <member name="F:Splunk.Client.SharingMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.SharingMode.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.SharingMode.App">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.SharingMode.Global">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.SharingMode.System">
            <summary>
            
            </summary>
        </member>
        <member name="F:Splunk.Client.SharingMode.User">
            <summary>
            
            </summary>
        </member>
        <member name="T:Splunk.Client.SortDirection">
            <summary>
            Specifies the direction in which to sort a list of items.
            </summary>
        </member>
        <member name="F:Splunk.Client.SortDirection.None">
            <summary>
            No sort direction is set.
            </summary>
        </member>
        <member name="F:Splunk.Client.SortDirection.Ascending">
            <summary>
            Sort from smallest to largest. For example, from A to Z.
            </summary>
        </member>
        <member name="F:Splunk.Client.SortDirection.Descending">
            <summary>
            Sort from largest to smallest. For example, from Z to A.
            </summary>
        </member>
        <member name="T:Splunk.Client.SortMode">
            <summary>
            Specifies the direction in which to sort a list of items.
            </summary>
        </member>
        <member name="F:Splunk.Client.SortMode.None">
            <summary>
            No sort direction is set.
            </summary>
        </member>
        <member name="F:Splunk.Client.SortMode.Alphabetic">
            <summary>
            Sort in case insensitive alphabetic order.
            </summary>
        </member>
        <member name="F:Splunk.Client.SortMode.AlphabeticCaseSensitive">
            <summary>
            Sort in case sensitive alphabetic order.
            </summary>
        </member>
        <member name="F:Splunk.Client.SortMode.Automatic">
            <summary>
            If all values of the field are numbers, sort in numeric order.
            Otherwise, sort in case insensitive alphabetic order.
            </summary>
        </member>
        <member name="F:Splunk.Client.SortMode.Numeric">
            <summary>
            Sort in numeric order.
            </summary>
        </member>
        <member name="T:Splunk.Client.StoragePassword">
            <summary>
            Provides an object representation of a Splunk storage password.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/wAcSfp">Splunk&gt;Blogs: Storing Encrypted
              Credentials</a>.
            </description></item>
            <item><description>
              <a href="http://goo.gl/HTRSVu">REST API Reference:
              storage/passwords</a>.
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Entity{Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IStoragePassword"/>
        </member>
        <member name="M:Splunk.Client.StoragePassword.#ctor(Splunk.Client.Service,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.StoragePassword"/> class.
            </summary>
            <param name="service">
            An object representing a Splunk server session.
            </param>
            <param name="username">
            Username associated with the <see cref="T:Splunk.Client.StoragePassword"/>.
            </param>
            <param name="realm">
            Realm associated with the <see cref="T:Splunk.Client.StoragePassword"/> or <c>
            null</c>. The default value is <c>null</c>.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="username"/> is <c>null</c> or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> or <paramref name="username"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.StoragePassword.#ctor(Splunk.Client.Context,Splunk.Client.Namespace,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.StoragePassword"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <param name="username">
            Username associated with the <see cref="T:Splunk.Client.StoragePassword"/>.
            </param>
            <param name="realm">
            Realm associated with the <see cref="T:Splunk.Client.StoragePassword"/> or <c>
            null</c>. The default value is <c>null</c>.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="username"/> is <c>null</c> or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.StoragePassword.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.StoragePassword"/>
             class.
             </summary>
             <param name="context">
             An object representing a Splunk server session.
             </param>
             <param name="feed">
             A Splunk response atom feed.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
             </exception>
             ### <exception cref="T:System.IO.InvalidDataException">
             <paramref name="feed"/> is in an invalid format.
             </exception>
        </member>
        <member name="M:Splunk.Client.StoragePassword.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.StoragePassword"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.StoragePassword.UpdateAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.StoragePassword.CreateNameFromRealmAndUsername(System.String,System.String)">
            <summary>
            Creates name from realm and username.
            </summary>
            <param name="realm">
            Realm associated with the <see cref="T:Splunk.Client.StoragePassword"/> or <c>null</c>.
            The default value is <c>null</c>.
            </param>
            <param name="username">
            Username associated with the <see cref="T:Splunk.Client.StoragePassword"/>.
            </param>
            <returns>
            The new name from realm and username.
            </returns>
        </member>
        <member name="P:Splunk.Client.StoragePassword.ClearPassword">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.StoragePassword.Eai">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.StoragePassword.EncryptedPassword">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.StoragePassword.Password">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.StoragePassword.Realm">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.StoragePassword.Username">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.StoragePasswordAttributes">
            <summary>
            Provides the arguments required for creating <see cref="T:Splunk.Client.StoragePassword"/>
            resources.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/JgyIeN">REST API Reference: POST
              storage/passwords</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.StoragePasswordAttributes}"/>
        </member>
        <member name="P:Splunk.Client.StoragePasswordAttributes.Password">
            <summary>
            Gets or sets the password for a <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordAttributes.Realm">
            <summary>
            Gets or sets the realm in which a <see cref="T:Splunk.Client.StoragePassword"/> is valid.
            </summary>
            <value>
            The realm.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordAttributes.Username">
            <summary>
            Gets or sets the username for a <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="T:Splunk.Client.StoragePasswordCollection">
            <summary>
            Provides an object representation of a collection of Splunk storage
            passwords.
            </summary>
            <seealso cref="T:Splunk.Client.EntityCollection{Splunk.Client.StoragePassword,Splunk.Client.Resource}"/>
            <seealso cref="T:Splunk.Client.IStoragePasswordCollection{Splunk.Client.StoragePassword}"/>
        </member>
        <member name="M:Splunk.Client.StoragePasswordCollection.#ctor(Splunk.Client.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.StoragePasswordCollection"/>
            class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.StoragePasswordCollection.#ctor(Splunk.Client.Context,Splunk.Client.AtomFeed)">
             <summary>
             Initializes a new instance of the <see cref="T:Splunk.Client.StoragePasswordCollection"/>
             class.
             </summary>
             <param name="context">
             An object representing a Splunk server session.
             </param>
             <param name="feed">
             A Splunk response atom feed.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             <paramref name="context"/> or <paramref name="feed"/> are <c>null</c>.
             </exception>
             <exception cref="T:System.IO.InvalidDataException">
             <paramref name="feed"/> is in an invalid format.
             </exception>
        </member>
        <member name="M:Splunk.Client.StoragePasswordCollection.#ctor(Splunk.Client.Context,Splunk.Client.Namespace)">
            <summary>
            Intializes an new instance of the <see cref="T:Splunk.Client.StoragePasswordCollection"/>
            class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
            <param name="ns">
            An object identifying a Splunk services namespace.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> or <paramref name="ns"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="ns"/> is not specific.
            </exception>
        </member>
        <member name="M:Splunk.Client.StoragePasswordCollection.#ctor">
            <summary>
            Infrastructure. Initializes a new instance of the
            <see cref="T:Splunk.Client.StoragePasswordCollection"/> class.
            </summary>
            <remarks>
            This API supports the Splunk client infrastructure and is not intended to
            be used directly from your code.
            </remarks>
        </member>
        <member name="M:Splunk.Client.StoragePasswordCollection.CreateAsync(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.StoragePasswordCollection.GetAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.StoragePasswordCollection.GetOrNullAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.StoragePasswordCollection.GetSliceAsync(Splunk.Client.StoragePasswordCollection.Filter)">
            <inheritdoc/>
        </member>
        <member name="F:Splunk.Client.StoragePasswordCollection.ClassResourceName">
            <summary>
            Name of the class resource.
            </summary>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.Messages">
            <inheritdoc/>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.Pagination">
            <inheritdoc/>
        </member>
        <member name="T:Splunk.Client.StoragePasswordCollection.CreationArgs">
            <summary>
            Provides the arguments required for creating <see cref="T:Splunk.Client.StoragePassword"/>
            resources.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
              <a href="http://goo.gl/JgyIeN">REST API Reference: POST
              storage/passwords</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.StoragePasswordCollection.CreationArgs}"/>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.CreationArgs.Password">
            <summary>
            Gets or sets the password for a <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.CreationArgs.Realm">
            <summary>
            Gets or sets the realm in which a <see cref="T:Splunk.Client.StoragePassword"/> is valid.
            </summary>
            <value>
            The realm.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.CreationArgs.Username">
            <summary>
            Gets or sets the username for a <see cref="T:Splunk.Client.StoragePassword"/>.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="T:Splunk.Client.StoragePasswordCollection.Filter">
            <summary>
            Provides arguments for retrieving a
            <see cref="T:Splunk.Client.StoragePasswordCollection"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
                <a href="http://goo.gl/pqZJco">REST API: GET apps/local</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.StoragePasswordCollection.Filter}"/>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.Filter.Count">
            <summary>
            Gets or sets a value specifying the maximum number of
            <see cref="T:Splunk.Client.StoragePassword"/> entries to return.
            </summary>
            <remarks>
            If the value of <c>Count</c> is set to zero, then all
            <see cref="T:Splunk.Client.StoragePassword"/> entries are returned. The default value is
            <c>30</c>.
            </remarks>
            <value>
            A value specifying the maximum number of <see cref="T:Splunk.Client.StoragePassword"/>
            entries to return.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.Filter.Offset">
            <summary>
            Gets or sets a value specifying the first result (inclusive)
            from which to begin returning entries.
            </summary>
            <remarks>
            The <c>Offset</c> property is zero-based and cannot be negative. The
            default value is zero.
            </remarks>
            <value>
            A value specifying the first result (inclusive) from which to begin
            returning entries.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.Filter.Search">
            <summary>
            Gets or sets a search expression to filter <see cref="T:Splunk.Client.StoragePassword"/>
            entries.
            </summary>
            <remarks>
            Use this expression to filter the entries returned based on
            <see cref="T:Splunk.Client.StoragePassword"/> properties.
            </remarks>
            <value>
            A search expression to filter <see cref="T:Splunk.Client.StoragePassword"/>
            entries.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.Filter.SortDirection">
            <summary>
            Gets or sets a value specifying the sort direction for
            <see cref="T:Splunk.Client.StoragePassword"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.StoragePasswordCollection.Filter.SortDirection"/>.Ascending.
            </remarks>
            <value>
            The sort direction for <see cref="T:Splunk.Client.StoragePassword"/> entries.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.Filter.SortKey">
            <summary>
            Gets or sets the <see cref="T:Splunk.Client.StoragePassword"/> property to use for
            sorting entries.
            </summary>
            <remarks>
            The default <see cref="T:Splunk.Client.StoragePassword"/> property to use for sorting is
            <c>"name"</c>.
            </remarks>
            <value>
            The <see cref="T:Splunk.Client.StoragePassword"/> property to use for sorting entries.
            </value>
        </member>
        <member name="P:Splunk.Client.StoragePasswordCollection.Filter.SortMode">
            <summary>
            Gets or sets a value specifying the sort mode for
            <see cref="T:Splunk.Client.StoragePassword"/> entries.
            </summary>
            <remarks>
            The default value is <see cref="P:Splunk.Client.StoragePasswordCollection.Filter.SortMode"/>.Automatic.
            </remarks>
            <value>
            The sort mode for <see cref="T:Splunk.Client.StoragePassword"/> entries.
            </value>
        </member>
        <member name="T:Splunk.Client.StringConverter">
            <summary>
            Provides a converter to convert an object to its string form.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.String}"/>
        </member>
        <member name="F:Splunk.Client.StringConverter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.StringConverter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.StringConverter.Convert(System.Object)">
            <summary>
            Converts the <paramref name="input"/> object to a <see cref="T:System.String"/>
            value.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
        </member>
        <member name="T:Splunk.Client.Transmitter">
            <summary>
            Provides a class for sending events to Splunk.
            </summary>
            <seealso cref="T:Splunk.Client.Endpoint"/>
            <seealso cref="T:Splunk.Client.ITransmitter"/>
        </member>
        <member name="M:Splunk.Client.Transmitter.#ctor(Splunk.Client.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Transmitter"/> class.
            </summary>
            <param name="service">
            An object representing a root Splunk service endpoint.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="service"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Splunk.Client.Transmitter.#ctor(Splunk.Client.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Client.Transmitter"/> class.
            </summary>
            <param name="context">
            An object representing a Splunk server session.
            </param>
        </member>
        <member name="M:Splunk.Client.Transmitter.SendAsync(System.IO.Stream,System.String,Splunk.Client.TransmitterArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Splunk.Client.Transmitter.SendAsync(System.String,System.String,Splunk.Client.TransmitterArgs)">
            <inheritdoc/>
        </member>
        <member name="F:Splunk.Client.Transmitter.ClassResourceName">
            <summary>
            Name of the class resource.
            </summary>
        </member>
        <member name="T:Splunk.Client.TransmitterArgs">
            <summary>
            Provides arguments for sending events to a Splunk <see cref="T:Splunk.Client.Transmitter"/>.
            </summary>
            <remarks>
            <para><b>References:</b></para>
            <list type="number">
            <item><description>
                <a href="http://goo.gl/OWTUws">REST API Reference: POST
                search/jobs</a>
            </description></item>
            </list>
            </remarks>
            <seealso cref="T:Splunk.Client.Args{Splunk.Client.TransmitterArgs}"/>
        </member>
        <member name="P:Splunk.Client.TransmitterArgs.Host">
            <summary>
            Gets or sets the value to populate in the host field for events from this
            data input.
            </summary>
            <value>
            The value to populate in the host field for events from this data input.
            </value>
        </member>
        <member name="P:Splunk.Client.TransmitterArgs.HostRegex">
            <summary>
            Gets or sets a regular expression used to extract the host value from
            each event.
            </summary>
            <value>
            A regular expression used to extract the host value from each event.
            </value>
        </member>
        <member name="P:Splunk.Client.TransmitterArgs.Source">
            <summary>
            Gets or sets the source value to fill in the metadata for this input's
            events.
            </summary>
            <value>
            The source value to fill in the metadata for this input's events.
            </value>
        </member>
        <member name="P:Splunk.Client.TransmitterArgs.SourceType">
            <summary>
            Gets or sets the source type to apply to events from this input.
            </summary>
            <value>
            The source type to apply to events from this input.
            </value>
        </member>
        <member name="T:Splunk.Client.TruncationMode">
            <summary>
            Provides enumerated values that specify how Splunk reduces the number of
            lines in the <c>_raw</c> field of events.
            </summary>
        </member>
        <member name="F:Splunk.Client.TruncationMode.Abstract">
            <summary>
            Indicates that lines in the <c>_raw</c> field of events should be
            abstracted.
            </summary>
        </member>
        <member name="F:Splunk.Client.TruncationMode.Truncate">
            <summary>
            Indicates that lines in the <c>_raw</c> field of events should be
            truncated.
            </summary>
        </member>
        <member name="T:Splunk.Client.UnauthorizedAccessException">
            <summary>
            The exception that is thrown when a request to access a resource results
            in <see cref="F:System.Net.HttpStatusCode.Forbidden"/>.
            </summary>
            <seealso cref="T:Splunk.Client.RequestException"/>
        </member>
        <member name="M:Splunk.Client.UnauthorizedAccessException.#ctor(System.Net.Http.HttpResponseMessage,System.Collections.ObjectModel.ReadOnlyCollection{Splunk.Client.Message})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Splunk.Client.UnauthorizedAccessException"/>
            class.
            </summary>
            <param name="message">
            An object representing an HTTP response message including the status code
            and data.
            </param>
            <param name="details">
            A sequence of <see cref="T:Splunk.Client.Message"/> instances detailing the cause of the
            <see cref="T:Splunk.Client.UnauthorizedAccessException"/>.
            </param>
        </member>
        <member name="T:Splunk.Client.UnixDateTimeConverter">
            <summary>
            Provides a converter to convert Unix epoch time strings to
            <see cref="T:System.DateTime"/> values.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.DateTime}"/>
        </member>
        <member name="F:Splunk.Client.UnixDateTimeConverter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.UnixDateTimeConverter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.UnixDateTimeConverter.Convert(System.Object)">
            <summary>
            Converts the string representation of a <paramref name="input"/> Unix
            time value to a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.DateTime"/>
            value.
            </exception>
        </member>
        <member name="T:Splunk.Client.UriConverter">
            <summary>
            Provides a converter to convert a string to a relative or absolute
            <see cref="T:System.Uri"/> instance.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.Uri}"/>
        </member>
        <member name="F:Splunk.Client.UriConverter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.UriConverter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.UriConverter.Convert(System.Object)">
            <summary>
            Converts the string representation of the <paramref name="input"/>
            object to a <see cref="T:System.Uri"/> instance.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.Uri"/>.
            </exception>
        </member>
        <member name="T:Splunk.Client.UriConverter.IPurifier">
            <summary>
            Interface for purifier.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.Uri}"/>
        </member>
        <member name="T:Splunk.Client.UriConverter.MonoPurifier">
            <summary>
            A mono purifier.
            </summary>
            <seealso cref="T:Splunk.Client.UriConverter.IPurifier"/>
        </member>
        <member name="M:Splunk.Client.UriConverter.MonoPurifier.Purify(System.Uri)">
            <summary>
            Purifies the given document.
            </summary>
            <param name="uri">
            URI of the document.
            </param>
        </member>
        <member name="T:Splunk.Client.UriConverter.UriInfo">
            <summary>
            Information about the uri.
            </summary>
        </member>
        <member name="M:Splunk.Client.UriConverter.UriInfo.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the Splunk.Client.UriConverter.UriInfo
            class.
            </summary>
            <param name="uri">
            URI of the document.
            </param>
            <param name="source">
            The source.
            </param>
        </member>
        <member name="P:Splunk.Client.UriConverter.UriInfo.Fragment">
            <summary>
            Gets the fragment.
            </summary>
            <value>
            The fragment.
            </value>
        </member>
        <member name="P:Splunk.Client.UriConverter.UriInfo.Path">
            <summary>
            Gets the full pathname of the file.
            </summary>
            <value>
            The full pathname of the file.
            </value>
        </member>
        <member name="P:Splunk.Client.UriConverter.UriInfo.Query">
            <summary>
            Gets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:Splunk.Client.UriConverter.UriInfo.Source">
            <summary>
            Gets the source for the.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="T:Splunk.Client.ValueConverterContract`1">
            <summary>
            A value converter contract.
            </summary>
            <typeparam name="TValue">
            Type of the value.
            </typeparam>
            <seealso cref="T:Splunk.Client.ValueConverter{TValue}"/>
        </member>
        <member name="T:Splunk.Client.VersionConverter">
            <summary>
            Provides a converter to convert a string to a <see cref="T:System.Version"/>
            object.
            </summary>
            <seealso cref="T:Splunk.Client.ValueConverter{System.Version}"/>
        </member>
        <member name="F:Splunk.Client.VersionConverter.Instance">
            <summary>
            The default <see cref="T:Splunk.Client.VersionConverter"/> instance.
            </summary>
        </member>
        <member name="M:Splunk.Client.VersionConverter.Convert(System.Object)">
            <summary>
            Converts the string representation of the <paramref name="input"/>
            object to a <see cref="T:System.Version"/> instance.
            </summary>
            <param name="input">
            The object to convert.
            </param>
            <returns>
            Result of the conversion.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">
            The <paramref name="input"/> does not represent a <see cref="T:System.Version"/>
            instance.
            </exception>
        </member>
        <member name="T:Splunk.Client.XmlReaderExtensions">
            <summary>
            An XML reader extensions.
            </summary>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.EnsureMarkup(System.Xml.XmlReader,System.Xml.XmlNodeType,System.String[])">
             <summary>
             Throws an exception if the source <see cref="T:System.Xml.XmlReader"/> is not
             positioned as expected.
             <paramref name="names"/>.
             </summary>
             <exception cref="T:System.InvalidOperationException">
             Thrown when the requested operation is invalid.
             </exception>
             <exception cref="T:System.IO.InvalidDataException">
             If <paramref name="reader"/>.NodeType is different than
             <paramref name="nodeType"/> or—if <paramref name="names"/> are provided—
             paramref name="reader"/&gt;.Name is not in the list of
             <paramref name="names"/>.
             </exception>
             <param name="reader">
             The source <see cref="T:System.Xml.XmlReader"/>.
             </param>
             <param name="nodeType">
             Expected XML node type.
             </param>
             <param name="names">
             Optional list of names which the expected <paramref name="nodeType"/>
             may have.
             </param>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="reader"/> is <c>null</c>.
             </exception>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.GetRequiredAttribute(System.Xml.XmlReader,System.String)">
             <summary>
             Gets the value of the attribute with the specified name.
             </summary>
             <remarks>
             If attribute <paramref name="name"/> is not present or is equal to
             <see cref="T:System.String"/>.Empty an <see cref="T:System.IO.InvalidDataException"/>
             is thrown.
             </remarks>
             <exception cref="T:System.IO.InvalidDataException">
             If the value of attribute <paramref name="name"/> is
             <see cref="T:System.String"/>.Empty or <c>null</c>.
             </exception>
             <param name="reader">
             The source <see cref="T:System.Xml.XmlReader"/>.
             </param>
             <param name="name">
             An attribute name.
             </param>
             <returns>
             The value of attribute <paramref name="name"/>.
             </returns>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="reader"/> or <paramref name="name"/> are <c>
             null</c>.
             </exception>
             ### <exception cref="T:System.ArgumentException">
             <paramref name="reader"/> is not positioned on an
             <see cref="T:System.Xml.XmlNodeType"/>.Element.
             </exception>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.MoveToDocumentElementAsync(System.Xml.XmlReader,System.String[])">
             <summary>
             Asynchronously positions the source <see cref="T:System.Xml.XmlReader"/> to the start-
             tag following an <see cref="T:System.Xml.XmlNodeType"/>.XmlDeclaration.
             </summary>
             <exception cref="T:System.Xml.XmlException">
             Thrown when an XML error condition occurs.
             </exception>
             <param name="reader">
             The source <see cref="T:System.Xml.XmlReader"/>.
             </param>
             <param name="names">
             Optional list of permitted document element names.
             </param>
             <returns>
             <c>true</c> if the source <see cref="T:System.Xml.XmlReader"/> is successfully
             positioned at one of the permitted document element
             <paramref name="names"/>; otherwise, if the end of file is reached,
             <c>false</c>.
             </returns>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="reader"/> is <c>null</c>.
             </exception>
             ### <exception cref="T:System.IO.InvalidDataException">
             There is no start-tag following the
             <see cref="T:System.Xml.XmlNodeType"/>.XmlDeclaration or the start-tag is not in the
             list of permitted document element names.
             </exception>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.ReadEachDescendantAsync(System.Xml.XmlReader,System.String,System.Func{System.Xml.XmlReader,System.Threading.Tasks.Task})">
            <summary>
            Asynchronously visits the named descendants of the element at the source
            <see cref="T:System.Xml.XmlReader"/> position.
            </summary>
            <param name="reader">
            The source <see cref="T:System.Xml.XmlReader"/>.
            </param>
            <param name="name">
            Name of the descendant elements to read.
            </param>
            <param name="task">
            An awaitable function to apply to <paramref name="reader"/> at each 
            of the visited elements.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
            </returns>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.ReadElementContentAsync``1(System.Xml.XmlReader,Splunk.Client.ValueConverter{``0})">
            <summary>
            An XmlReader extension method that reads element content asynchronous.
            </summary>
            <typeparam name="TValue">
            Type of the value.
            </typeparam>
            <param name="reader">
            The source <see cref="T:System.Xml.XmlReader"/>.
            </param>
            <param name="valueConverter">
            
            </param>
            <returns>
            The element content asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.ReadElementSequenceAsync(System.Xml.XmlReader,System.String[])">
             <summary>
             Reads a sequence of element start tags.
             </summary>
             <remarks>
             The <paramref name="reader"/> should be positioned on the node preceding
             the first start tag in the sequence of <paramref name="names"/> when
             this method is called. The
             <paramref name="reader"/> will be positioned on the last start
             tag in the sequence of <paramref name="names"/> when this method returns.
             </remarks>
             <param name="reader">
             The source <see cref="T:System.Xml.XmlReader"/>.
             </param>
             <param name="names">
             The sequence of element start tag names to match.
             </param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
             </returns>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="reader"/> or <paramref name="names"/> is <c>null</c>.
             </exception>
             ### <exception cref="T:System.IO.InvalidDataException">
             If the sequence of nodes read from <paramref name="reader"/> does not
             match the sequence of start tag <paramref name="names"/>.
             </exception>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.ReadEndElementSequenceAsync(System.Xml.XmlReader,System.String[])">
             <summary>
             Reads a sequence of element end tags.
             </summary>
             <remarks>
             The <paramref name="reader"/> should be positioned on the first end tag
             in the sequence of <paramref name="names"/> when this method is called.
             The <paramref name="reader"/> will be positioned on the node following
             the last end tag in the sequence of <paramref name="names "/> when this
             method returns.
             </remarks>
             <param name="reader">
             The source <see cref="T:System.Xml.XmlReader"/>.
             </param>
             <param name="names">
             The sequence of element end tag names to match.
             </param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> representing the operation.
             </returns>
            
             ### <exception cref="T:System.ArgumentNullException">
             <paramref name="reader"/> or <paramref name="names"/> is <c>null</c>.
             </exception>
             ### <exception cref="T:System.IO.InvalidDataException">
             If the sequence of nodes read from <paramref name="reader"/> does not
             match the sequence of end tag <paramref name="names"/>.
             </exception>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.ReadResponseElementAsync(System.Xml.XmlReader,System.String)">
            <summary>
            An XmlReader extension method that reads response element
            asynchronous.
            </summary>
            <param name="reader">
            The source <see cref="T:System.Xml.XmlReader"/>.
            </param>
            <param name="name">
            
            </param>
            <returns>
            The response element asynchronous.
            </returns>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.ReadToDescendantAsync(System.Xml.XmlReader,System.String)">
            <summary>
            Asynchronously advances the source <see cref="T:System.Xml.XmlReader"/> to the
            next descendant element with the specified name.
            </summary>
            <param name="reader">
            The source <see cref="T:System.Xml.XmlReader"/>.
            </param>
            <param name="name">
            Name of the descendant element you wish to move to.
            </param>
            <returns>
            <c>true</c> if a matching descendant element is found; otherwise 
            <c>false</c>. If a matching child element is not found, the
            <see cref="T:System.Xml.XmlReader"/> is positioned on the end tag (NodeType is 
            XmlNodeType.EndElement) of the element.
            </returns>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.ReadToFollowingAsync(System.Xml.XmlReader,System.String)">
            <summary>
            Asyncrhonously reads until an element with the specified name is
            found.
            </summary>
            <param name="reader">
            The source <see cref="T:System.Xml.XmlReader"/>.
            </param>
            <param name="name">
            Name of the element you wish to move to.
            </param>
            <returns>
            <c>true</c> if a matching element is found; otherwise <c>false</c>
            and the source <see cref="T:System.Xml.XmlReader"/> is in an end of file state.
            </returns>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.ReadToNextSiblingAsync(System.Xml.XmlReader,System.String)">
            <summary>
            Asynchronously advances the the source <see cref="T:System.Xml.XmlReader"/> to the
            next sibling element with the specified qualified name.
            </summary>
            <param name="reader">
            The source <see cref="T:System.Xml.XmlReader"/>.
            </param>
            <param name="name">
            A qualified element name.
            </param>
            <returns>
            <c>true</c> if a matching sibling element is found; otherwise
            <c>false</c>. If a matching sibling element is not found,
            <paramref name="reader"/> is positioned on the end tag of the parent
            parent element.
            </returns>
        </member>
        <member name="M:Splunk.Client.XmlReaderExtensions.Requires(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Throws an <see cref="T:System.IO.InvalidDataException"/> based on the source
            <see cref="T:System.Xml.XmlReader"/> position, if the specified <paramref name="condition"/> is <c>false</c>.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The source <paramref name="reader"/> is in an error state, is closed, or
            has not yet been called.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            <paramref name="condition"/> is <c>false</c>.
            </exception>
            <param name="reader">
            The source <see cref="T:System.Xml.XmlReader"/>.
            </param>
            <param name="condition">
            A value indicating whether the required condition is met.
            </param>
        </member>
    </members>
</doc>
